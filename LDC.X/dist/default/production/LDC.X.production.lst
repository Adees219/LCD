

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jul 24 21:19:25 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48     0000                     
    49                           ; Version 2.40
    50                           ; Generated 17/11/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F887 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     0007                     	;# 
    92     0008                     	;# 
    93     0009                     	;# 
    94     000A                     	;# 
    95     000B                     	;# 
    96     000C                     	;# 
    97     000D                     	;# 
    98     000E                     	;# 
    99     000E                     	;# 
   100     000F                     	;# 
   101     0010                     	;# 
   102     0011                     	;# 
   103     0012                     	;# 
   104     0013                     	;# 
   105     0014                     	;# 
   106     0015                     	;# 
   107     0015                     	;# 
   108     0016                     	;# 
   109     0017                     	;# 
   110     0018                     	;# 
   111     0019                     	;# 
   112     001A                     	;# 
   113     001B                     	;# 
   114     001B                     	;# 
   115     001C                     	;# 
   116     001D                     	;# 
   117     001E                     	;# 
   118     001F                     	;# 
   119     0081                     	;# 
   120     0085                     	;# 
   121     0086                     	;# 
   122     0087                     	;# 
   123     0088                     	;# 
   124     0089                     	;# 
   125     008C                     	;# 
   126     008D                     	;# 
   127     008E                     	;# 
   128     008F                     	;# 
   129     0090                     	;# 
   130     0091                     	;# 
   131     0092                     	;# 
   132     0093                     	;# 
   133     0093                     	;# 
   134     0093                     	;# 
   135     0094                     	;# 
   136     0095                     	;# 
   137     0096                     	;# 
   138     0097                     	;# 
   139     0098                     	;# 
   140     0099                     	;# 
   141     009A                     	;# 
   142     009B                     	;# 
   143     009C                     	;# 
   144     009D                     	;# 
   145     009E                     	;# 
   146     009F                     	;# 
   147     0105                     	;# 
   148     0107                     	;# 
   149     0108                     	;# 
   150     0109                     	;# 
   151     010C                     	;# 
   152     010C                     	;# 
   153     010D                     	;# 
   154     010E                     	;# 
   155     010F                     	;# 
   156     0185                     	;# 
   157     0187                     	;# 
   158     0188                     	;# 
   159     0189                     	;# 
   160     018C                     	;# 
   161     018D                     	;# 
   162     0000                     	;# 
   163     0001                     	;# 
   164     0002                     	;# 
   165     0003                     	;# 
   166     0004                     	;# 
   167     0005                     	;# 
   168     0006                     	;# 
   169     0007                     	;# 
   170     0008                     	;# 
   171     0009                     	;# 
   172     000A                     	;# 
   173     000B                     	;# 
   174     000C                     	;# 
   175     000D                     	;# 
   176     000E                     	;# 
   177     000E                     	;# 
   178     000F                     	;# 
   179     0010                     	;# 
   180     0011                     	;# 
   181     0012                     	;# 
   182     0013                     	;# 
   183     0014                     	;# 
   184     0015                     	;# 
   185     0015                     	;# 
   186     0016                     	;# 
   187     0017                     	;# 
   188     0018                     	;# 
   189     0019                     	;# 
   190     001A                     	;# 
   191     001B                     	;# 
   192     001B                     	;# 
   193     001C                     	;# 
   194     001D                     	;# 
   195     001E                     	;# 
   196     001F                     	;# 
   197     0081                     	;# 
   198     0085                     	;# 
   199     0086                     	;# 
   200     0087                     	;# 
   201     0088                     	;# 
   202     0089                     	;# 
   203     008C                     	;# 
   204     008D                     	;# 
   205     008E                     	;# 
   206     008F                     	;# 
   207     0090                     	;# 
   208     0091                     	;# 
   209     0092                     	;# 
   210     0093                     	;# 
   211     0093                     	;# 
   212     0093                     	;# 
   213     0094                     	;# 
   214     0095                     	;# 
   215     0096                     	;# 
   216     0097                     	;# 
   217     0098                     	;# 
   218     0099                     	;# 
   219     009A                     	;# 
   220     009B                     	;# 
   221     009C                     	;# 
   222     009D                     	;# 
   223     009E                     	;# 
   224     009F                     	;# 
   225     0105                     	;# 
   226     0107                     	;# 
   227     0108                     	;# 
   228     0109                     	;# 
   229     010C                     	;# 
   230     010C                     	;# 
   231     010D                     	;# 
   232     010E                     	;# 
   233     010F                     	;# 
   234     0185                     	;# 
   235     0187                     	;# 
   236     0188                     	;# 
   237     0189                     	;# 
   238     018C                     	;# 
   239     018D                     	;# 
   240     0000                     	;# 
   241     0001                     	;# 
   242     0002                     	;# 
   243     0003                     	;# 
   244     0004                     	;# 
   245     0005                     	;# 
   246     0006                     	;# 
   247     0007                     	;# 
   248     0008                     	;# 
   249     0009                     	;# 
   250     000A                     	;# 
   251     000B                     	;# 
   252     000C                     	;# 
   253     000D                     	;# 
   254     000E                     	;# 
   255     000E                     	;# 
   256     000F                     	;# 
   257     0010                     	;# 
   258     0011                     	;# 
   259     0012                     	;# 
   260     0013                     	;# 
   261     0014                     	;# 
   262     0015                     	;# 
   263     0015                     	;# 
   264     0016                     	;# 
   265     0017                     	;# 
   266     0018                     	;# 
   267     0019                     	;# 
   268     001A                     	;# 
   269     001B                     	;# 
   270     001B                     	;# 
   271     001C                     	;# 
   272     001D                     	;# 
   273     001E                     	;# 
   274     001F                     	;# 
   275     0081                     	;# 
   276     0085                     	;# 
   277     0086                     	;# 
   278     0087                     	;# 
   279     0088                     	;# 
   280     0089                     	;# 
   281     008C                     	;# 
   282     008D                     	;# 
   283     008E                     	;# 
   284     008F                     	;# 
   285     0090                     	;# 
   286     0091                     	;# 
   287     0092                     	;# 
   288     0093                     	;# 
   289     0093                     	;# 
   290     0093                     	;# 
   291     0094                     	;# 
   292     0095                     	;# 
   293     0096                     	;# 
   294     0097                     	;# 
   295     0098                     	;# 
   296     0099                     	;# 
   297     009A                     	;# 
   298     009B                     	;# 
   299     009C                     	;# 
   300     009D                     	;# 
   301     009E                     	;# 
   302     009F                     	;# 
   303     0105                     	;# 
   304     0107                     	;# 
   305     0108                     	;# 
   306     0109                     	;# 
   307     010C                     	;# 
   308     010C                     	;# 
   309     010D                     	;# 
   310     010E                     	;# 
   311     010F                     	;# 
   312     0185                     	;# 
   313     0187                     	;# 
   314     0188                     	;# 
   315     0189                     	;# 
   316     018C                     	;# 
   317     018D                     	;# 
   318     0000                     	;# 
   319     0001                     	;# 
   320     0002                     	;# 
   321     0003                     	;# 
   322     0004                     	;# 
   323     0005                     	;# 
   324     0006                     	;# 
   325     0007                     	;# 
   326     0008                     	;# 
   327     0009                     	;# 
   328     000A                     	;# 
   329     000B                     	;# 
   330     000C                     	;# 
   331     000D                     	;# 
   332     000E                     	;# 
   333     000E                     	;# 
   334     000F                     	;# 
   335     0010                     	;# 
   336     0011                     	;# 
   337     0012                     	;# 
   338     0013                     	;# 
   339     0014                     	;# 
   340     0015                     	;# 
   341     0015                     	;# 
   342     0016                     	;# 
   343     0017                     	;# 
   344     0018                     	;# 
   345     0019                     	;# 
   346     001A                     	;# 
   347     001B                     	;# 
   348     001B                     	;# 
   349     001C                     	;# 
   350     001D                     	;# 
   351     001E                     	;# 
   352     001F                     	;# 
   353     0081                     	;# 
   354     0085                     	;# 
   355     0086                     	;# 
   356     0087                     	;# 
   357     0088                     	;# 
   358     0089                     	;# 
   359     008C                     	;# 
   360     008D                     	;# 
   361     008E                     	;# 
   362     008F                     	;# 
   363     0090                     	;# 
   364     0091                     	;# 
   365     0092                     	;# 
   366     0093                     	;# 
   367     0093                     	;# 
   368     0093                     	;# 
   369     0094                     	;# 
   370     0095                     	;# 
   371     0096                     	;# 
   372     0097                     	;# 
   373     0098                     	;# 
   374     0099                     	;# 
   375     009A                     	;# 
   376     009B                     	;# 
   377     009C                     	;# 
   378     009D                     	;# 
   379     009E                     	;# 
   380     009F                     	;# 
   381     0105                     	;# 
   382     0107                     	;# 
   383     0108                     	;# 
   384     0109                     	;# 
   385     010C                     	;# 
   386     010C                     	;# 
   387     010D                     	;# 
   388     010E                     	;# 
   389     010F                     	;# 
   390     0185                     	;# 
   391     0187                     	;# 
   392     0188                     	;# 
   393     0189                     	;# 
   394     018C                     	;# 
   395     018D                     	;# 
   396     0000                     	;# 
   397     0001                     	;# 
   398     0002                     	;# 
   399     0003                     	;# 
   400     0004                     	;# 
   401     0005                     	;# 
   402     0006                     	;# 
   403     0007                     	;# 
   404     0008                     	;# 
   405     0009                     	;# 
   406     000A                     	;# 
   407     000B                     	;# 
   408     000C                     	;# 
   409     000D                     	;# 
   410     000E                     	;# 
   411     000E                     	;# 
   412     000F                     	;# 
   413     0010                     	;# 
   414     0011                     	;# 
   415     0012                     	;# 
   416     0013                     	;# 
   417     0014                     	;# 
   418     0015                     	;# 
   419     0015                     	;# 
   420     0016                     	;# 
   421     0017                     	;# 
   422     0018                     	;# 
   423     0019                     	;# 
   424     001A                     	;# 
   425     001B                     	;# 
   426     001B                     	;# 
   427     001C                     	;# 
   428     001D                     	;# 
   429     001E                     	;# 
   430     001F                     	;# 
   431     0081                     	;# 
   432     0085                     	;# 
   433     0086                     	;# 
   434     0087                     	;# 
   435     0088                     	;# 
   436     0089                     	;# 
   437     008C                     	;# 
   438     008D                     	;# 
   439     008E                     	;# 
   440     008F                     	;# 
   441     0090                     	;# 
   442     0091                     	;# 
   443     0092                     	;# 
   444     0093                     	;# 
   445     0093                     	;# 
   446     0093                     	;# 
   447     0094                     	;# 
   448     0095                     	;# 
   449     0096                     	;# 
   450     0097                     	;# 
   451     0098                     	;# 
   452     0099                     	;# 
   453     009A                     	;# 
   454     009B                     	;# 
   455     009C                     	;# 
   456     009D                     	;# 
   457     009E                     	;# 
   458     009F                     	;# 
   459     0105                     	;# 
   460     0107                     	;# 
   461     0108                     	;# 
   462     0109                     	;# 
   463     010C                     	;# 
   464     010C                     	;# 
   465     010D                     	;# 
   466     010E                     	;# 
   467     010F                     	;# 
   468     0185                     	;# 
   469     0187                     	;# 
   470     0188                     	;# 
   471     0189                     	;# 
   472     018C                     	;# 
   473     018D                     	;# 
   474     0000                     	;# 
   475     0001                     	;# 
   476     0002                     	;# 
   477     0003                     	;# 
   478     0004                     	;# 
   479     0005                     	;# 
   480     0006                     	;# 
   481     0007                     	;# 
   482     0008                     	;# 
   483     0009                     	;# 
   484     000A                     	;# 
   485     000B                     	;# 
   486     000C                     	;# 
   487     000D                     	;# 
   488     000E                     	;# 
   489     000E                     	;# 
   490     000F                     	;# 
   491     0010                     	;# 
   492     0011                     	;# 
   493     0012                     	;# 
   494     0013                     	;# 
   495     0014                     	;# 
   496     0015                     	;# 
   497     0015                     	;# 
   498     0016                     	;# 
   499     0017                     	;# 
   500     0018                     	;# 
   501     0019                     	;# 
   502     001A                     	;# 
   503     001B                     	;# 
   504     001B                     	;# 
   505     001C                     	;# 
   506     001D                     	;# 
   507     001E                     	;# 
   508     001F                     	;# 
   509     0081                     	;# 
   510     0085                     	;# 
   511     0086                     	;# 
   512     0087                     	;# 
   513     0088                     	;# 
   514     0089                     	;# 
   515     008C                     	;# 
   516     008D                     	;# 
   517     008E                     	;# 
   518     008F                     	;# 
   519     0090                     	;# 
   520     0091                     	;# 
   521     0092                     	;# 
   522     0093                     	;# 
   523     0093                     	;# 
   524     0093                     	;# 
   525     0094                     	;# 
   526     0095                     	;# 
   527     0096                     	;# 
   528     0097                     	;# 
   529     0098                     	;# 
   530     0099                     	;# 
   531     009A                     	;# 
   532     009B                     	;# 
   533     009C                     	;# 
   534     009D                     	;# 
   535     009E                     	;# 
   536     009F                     	;# 
   537     0105                     	;# 
   538     0107                     	;# 
   539     0108                     	;# 
   540     0109                     	;# 
   541     010C                     	;# 
   542     010C                     	;# 
   543     010D                     	;# 
   544     010E                     	;# 
   545     010F                     	;# 
   546     0185                     	;# 
   547     0187                     	;# 
   548     0188                     	;# 
   549     0189                     	;# 
   550     018C                     	;# 
   551     018D                     	;# 
   552                           
   553                           	psect	idataBANK3
   554     0F61                     __pidataBANK3:
   555                           
   556                           ;initializer for _menu
   557     0F61  340A               	retlw	10
   558     0F62  3420               	retlw	32
   559     0F63  344D               	retlw	77
   560     0F64  3465               	retlw	101
   561     0F65  346E               	retlw	110
   562     0F66  3475               	retlw	117
   563     0F67  343A               	retlw	58
   564     0F68  3420               	retlw	32
   565     0F69  340A               	retlw	10
   566     0F6A  3420               	retlw	32
   567     0F6B  3431               	retlw	49
   568     0F6C  3429               	retlw	41
   569     0F6D  344C               	retlw	76
   570     0F6E  3465               	retlw	101
   571     0F6F  3465               	retlw	101
   572     0F70  3472               	retlw	114
   573     0F71  3420               	retlw	32
   574     0F72  3476               	retlw	118
   575     0F73  346F               	retlw	111
   576     0F74  346C               	retlw	108
   577     0F75  3474               	retlw	116
   578     0F76  3461               	retlw	97
   579     0F77  346A               	retlw	106
   580     0F78  3465               	retlw	101
   581     0F79  3420               	retlw	32
   582     0F7A  340A               	retlw	10
   583     0F7B  3420               	retlw	32
   584     0F7C  3432               	retlw	50
   585     0F7D  3429               	retlw	41
   586     0F7E  3465               	retlw	101
   587     0F7F  346E               	retlw	110
   588     0F80  3476               	retlw	118
   589     0F81  3469               	retlw	105
   590     0F82  3461               	retlw	97
   591     0F83  3472               	retlw	114
   592     0F84  3420               	retlw	32
   593     0F85  3441               	retlw	65
   594     0F86  3473               	retlw	115
   595     0F87  3463               	retlw	99
   596     0F88  3469               	retlw	105
   597     0F89  3469               	retlw	105
   598     0F8A  3420               	retlw	32
   599     0F8B  340D               	retlw	13
   600     0F8C  3400               	retlw	0
   601                           
   602                           	psect	strings
   603     037D                     __pstrings:
   604     037D                     stringtab:
   605     037D                     __stringtab:
   606                           
   607                           ;	String table - string pointers are 1 byte each
   608     037D  1BFF               	btfsc	btemp+1,7
   609     037E  2B87               	ljmp	stringcode
   610     037F  1383               	bcf	3,7
   611     0380  187F               	btfsc	btemp+1,0
   612     0381  1783               	bsf	3,7
   613     0382  0800               	movf	0,w
   614     0383  0A84               	incf	4,f
   615     0384  1903               	skipnz
   616     0385  0AFF               	incf	btemp+1,f
   617     0386  0008               	return
   618     0387                     stringcode:
   619     0387                     stringdir:
   620     0387  3003               	movlw	high stringdir
   621     0388  008A               	movwf	10
   622     0389  0804               	movf	4,w
   623     038A  0A84               	incf	4,f
   624     038B  0782               	addwf	2,f
   625     038C                     __stringbase:
   626     038C  3400               	retlw	0
   627     038D                     __end_of__stringtab:
   628     038D                     _dpowers:
   629     038D  3401               	retlw	1
   630     038E  3400               	retlw	0
   631     038F  340A               	retlw	10
   632     0390  3400               	retlw	0
   633     0391  3464               	retlw	100
   634     0392  3400               	retlw	0
   635     0393  34E8               	retlw	232
   636     0394  3403               	retlw	3
   637     0395  3410               	retlw	16
   638     0396  3427               	retlw	39
   639     0397                     __end_of_dpowers:
   640     0019                     _TXREG	set	25
   641     0018                     _RCSTAbits	set	24
   642     000B                     _INTCONbits	set	11
   643     0009                     _PORTE	set	9
   644     0008                     _PORTD	set	8
   645     0007                     _PORTC	set	7
   646     0005                     _PORTA	set	5
   647     001E                     _ADRESH	set	30
   648     000C                     _PIR1bits	set	12
   649     0006                     _PORTB	set	6
   650     001A                     _RCREG	set	26
   651     001F                     _ADCON0bits	set	31
   652     0049                     _RE1	set	73
   653     0048                     _RE0	set	72
   654     0065                     _RCIF	set	101
   655     0066                     _ADIF	set	102
   656     009A                     _SPBRGH	set	154
   657     0099                     _SPBRG	set	153
   658     0098                     _TXSTAbits	set	152
   659     0096                     _IOCBbits	set	150
   660     008F                     _OSCCONbits	set	143
   661     0095                     _WPUBbits	set	149
   662     0081                     _OPTION_REGbits	set	129
   663     0089                     _TRISE	set	137
   664     0088                     _TRISD	set	136
   665     0087                     _TRISC	set	135
   666     0086                     _TRISB	set	134
   667     0085                     _TRISA	set	133
   668     008C                     _PIE1bits	set	140
   669     009F                     _ADCON1bits	set	159
   670     0187                     _BAUDCTLbits	set	391
   671     0189                     _ANSELH	set	393
   672     0188                     _ANSEL	set	392
   673     0397                     STR_3:
   674     0397  344E               	retlw	78	;'N'
   675     0398  346F               	retlw	111	;'o'
   676     0399  3420               	retlw	32	;' '
   677     039A  3465               	retlw	101	;'e'
   678     039B  3478               	retlw	120	;'x'
   679     039C  3469               	retlw	105	;'i'
   680     039D  3473               	retlw	115	;'s'
   681     039E  3474               	retlw	116	;'t'
   682     039F  3465               	retlw	101	;'e'
   683     03A0  3420               	retlw	32	;' '
   684     03A1  3465               	retlw	101	;'e'
   685     03A2  3473               	retlw	115	;'s'
   686     03A3  3461               	retlw	97	;'a'
   687     03A4  3420               	retlw	32	;' '
   688     03A5  346F               	retlw	111	;'o'
   689     03A6  3470               	retlw	112	;'p'
   690     03A7  3463               	retlw	99	;'c'
   691     03A8  3469               	retlw	105	;'i'
   692     03A9  346F               	retlw	111	;'o'
   693     03AA  346E               	retlw	110	;'n'
   694     03AB  342C               	retlw	44	;','
   695     03AC  3420               	retlw	32	;' '
   696     03AD  3470               	retlw	112	;'p'
   697     03AE  3472               	retlw	114	;'r'
   698     03AF  3465               	retlw	101	;'e'
   699     03B0  3473               	retlw	115	;'s'
   700     03B1  3469               	retlw	105	;'i'
   701     03B2  346F               	retlw	111	;'o'
   702     03B3  346E               	retlw	110	;'n'
   703     03B4  3465               	retlw	101	;'e'
   704     03B5  3420               	retlw	32	;' '
   705     03B6  3465               	retlw	101	;'e'
   706     03B7  346E               	retlw	110	;'n'
   707     03B8  3474               	retlw	116	;'t'
   708     03B9  3465               	retlw	101	;'e'
   709     03BA  3472               	retlw	114	;'r'
   710     03BB  3420               	retlw	32	;' '
   711     03BC  3470               	retlw	112	;'p'
   712     03BD  3461               	retlw	97	;'a'
   713     03BE  3472               	retlw	114	;'r'
   714     03BF  3461               	retlw	97	;'a'
   715     03C0  3420               	retlw	32	;' '
   716     03C1  3463               	retlw	99	;'c'
   717     03C2  346F               	retlw	111	;'o'
   718     03C3  346E               	retlw	110	;'n'
   719     03C4  3474               	retlw	116	;'t'
   720     03C5  3469               	retlw	105	;'i'
   721     03C6  346E               	retlw	110	;'n'
   722     03C7  3475               	retlw	117	;'u'
   723     03C8  3461               	retlw	97	;'a'
   724     03C9  3472               	retlw	114	;'r'
   725     03CA  3420               	retlw	32	;' '
   726     03CB  340D               	retlw	13
   727     03CC  3400               	retlw	0
   728     03CD                     STR_4:
   729     03CD  3449               	retlw	73	;'I'
   730     03CE  346E               	retlw	110	;'n'
   731     03CF  3467               	retlw	103	;'g'
   732     03D0  3472               	retlw	114	;'r'
   733     03D1  3465               	retlw	101	;'e'
   734     03D2  3473               	retlw	115	;'s'
   735     03D3  3465               	retlw	101	;'e'
   736     03D4  3420               	retlw	32	;' '
   737     03D5  3473               	retlw	115	;'s'
   738     03D6  3475               	retlw	117	;'u'
   739     03D7  3420               	retlw	32	;' '
   740     03D8  3463               	retlw	99	;'c'
   741     03D9  3461               	retlw	97	;'a'
   742     03DA  3472               	retlw	114	;'r'
   743     03DB  3461               	retlw	97	;'a'
   744     03DC  3463               	retlw	99	;'c'
   745     03DD  3474               	retlw	116	;'t'
   746     03DE  3465               	retlw	101	;'e'
   747     03DF  3472               	retlw	114	;'r'
   748     03E0  343A               	retlw	58	;':'
   749     03E1  3420               	retlw	32	;' '
   750     03E2  3400               	retlw	0
   751     03E3                     STR_2:
   752     03E3  3425               	retlw	37	;'%'
   753     03E4  3464               	retlw	100	;'d'
   754     03E5  342C               	retlw	44	;','
   755     03E6  3425               	retlw	37	;'%'
   756     03E7  3464               	retlw	100	;'d'
   757     03E8  3425               	retlw	37	;'%'
   758     03E9  3464               	retlw	100	;'d'
   759     03EA  3420               	retlw	32	;' '
   760     03EB  3456               	retlw	86	;'V'
   761     03EC  3400               	retlw	0
   762     03ED                     STR_1:
   763     03ED  3456               	retlw	86	;'V'
   764     03EE  346F               	retlw	111	;'o'
   765     03EF  346C               	retlw	108	;'l'
   766     03F0  3474               	retlw	116	;'t'
   767     03F1  3461               	retlw	97	;'a'
   768     03F2  346A               	retlw	106	;'j'
   769     03F3  3465               	retlw	101	;'e'
   770     03F4  3400               	retlw	0
   771                           
   772                           	psect	cinit
   773     0011                     start_initialization:	
   774                           ; #config settings
   775                           
   776     0011                     __initialization:
   777                           
   778                           ; Initialize objects allocated to BANK3
   779     0011  1783               	bsf	3,7	;select IRP bank2
   780     0012  30BC               	movlw	low (__pdataBANK3+44)
   781     0013  00FD               	movwf	btemp+-1
   782     0014  300F               	movlw	high __pidataBANK3
   783     0015  00FE               	movwf	btemp
   784     0016  3061               	movlw	low __pidataBANK3
   785     0017  00FF               	movwf	btemp+1
   786     0018  3090               	movlw	low __pdataBANK3
   787     0019  0084               	movwf	4
   788     001A  120A  118A  27F0  120A  118A  	fcall	init_ram0
   789                           
   790                           ; Clear objects allocated to BANK1
   791     001F  1683               	bsf	3,5	;RP0=1, select bank1
   792     0020  1303               	bcf	3,6	;RP1=0, select bank1
   793     0021  01BA               	clrf	__pbssBANK1& (0+127)
   794     0022  01BB               	clrf	(__pbssBANK1+1)& (0+127)
   795     0023  01BC               	clrf	(__pbssBANK1+2)& (0+127)
   796     0024  01BD               	clrf	(__pbssBANK1+3)& (0+127)
   797     0025  01BE               	clrf	(__pbssBANK1+4)& (0+127)
   798     0026  01BF               	clrf	(__pbssBANK1+5)& (0+127)
   799     0027  01C0               	clrf	(__pbssBANK1+6)& (0+127)
   800     0028  01C1               	clrf	(__pbssBANK1+7)& (0+127)
   801     0029  01C2               	clrf	(__pbssBANK1+8)& (0+127)
   802     002A  01C3               	clrf	(__pbssBANK1+9)& (0+127)
   803     002B  01C4               	clrf	(__pbssBANK1+10)& (0+127)
   804     002C                     end_of_initialization:	
   805                           ;End of C runtime variable initialization code
   806                           
   807     002C                     __end_of__initialization:
   808     002C  0183               	clrf	3
   809     002D  120A  118A  2AFB   	ljmp	_main	;jump to C main() function
   810                           
   811                           	psect	bssBANK1
   812     00BA                     __pbssBANK1:
   813     00BA                     _centena:
   814     00BA                     	ds	2
   815     00BC                     _decena:
   816     00BC                     	ds	2
   817     00BE                     _unidad:
   818     00BE                     	ds	2
   819     00C0                     _UART_get:
   820     00C0                     	ds	1
   821     00C1                     _strADC:
   822     00C1                     	ds	4
   823                           
   824                           	psect	dataBANK3
   825     0190                     __pdataBANK3:
   826     0190                     _menu:
   827     0190                     	ds	44
   828                           
   829                           	psect	inittext
   830     07EC                     init_fetch0:	
   831                           ;	Called with low address in FSR and high address in W
   832                           
   833     07EC  087E               	movf	btemp,w
   834     07ED  008A               	movwf	10
   835     07EE  087F               	movf	btemp+1,w
   836     07EF  0082               	movwf	2
   837     07F0                     init_ram0:	
   838                           ;Called with:
   839                           ;	high address of idata address in btemp 
   840                           ;	low address of idata address in btemp+1 
   841                           ;	low address of data in FSR
   842                           ;	high address + 1 of data in btemp-1
   843                           
   844     07F0  120A  118A  27EC  120A  118A  	fcall	init_fetch0
   845     07F5  0080               	movwf	0
   846     07F6  0A84               	incf	4,f
   847     07F7  0804               	movf	4,w
   848     07F8  067D               	xorwf	btemp+-1,w
   849     07F9  1903               	btfsc	3,2
   850     07FA  3400               	retlw	0
   851     07FB  0AFF               	incf	btemp+1,f
   852     07FC  1903               	btfsc	3,2
   853     07FD  0AFE               	incf	btemp,f
   854     07FE  2FF0               	goto	init_ram0
   855                           
   856                           	psect	cstackBANK1
   857     00A0                     __pcstackBANK1:
   858     00A0                     ??_contador:
   859     00A0                     ?___lwmod:	
   860                           ; 1 bytes @ 0x0
   861                           
   862     00A0                     Lcd_Write_String@i:	
   863                           ; 2 bytes @ 0x0
   864                           
   865     00A0                     ___lwmod@divisor:	
   866                           ; 2 bytes @ 0x0
   867                           
   868                           
   869                           ; 2 bytes @ 0x0
   870     00A0                     	ds	1
   871     00A1                     ??_MENU:
   872                           
   873                           ; 1 bytes @ 0x1
   874     00A1                     	ds	1
   875     00A2                     ___lwmod@dividend:
   876                           
   877                           ; 2 bytes @ 0x2
   878     00A2                     	ds	2
   879     00A4                     ??___lwmod:
   880                           
   881                           ; 1 bytes @ 0x4
   882     00A4                     	ds	1
   883     00A5                     ___lwmod@counter:
   884                           
   885                           ; 1 bytes @ 0x5
   886     00A5                     	ds	1
   887     00A6                     ?_sprintf:
   888     00A6                     sprintf@f:	
   889                           ; 2 bytes @ 0x6
   890                           
   891                           
   892                           ; 1 bytes @ 0x6
   893     00A6                     	ds	7
   894     00AD                     ??_sprintf:
   895                           
   896                           ; 1 bytes @ 0xD
   897     00AD                     	ds	3
   898     00B0                     sprintf@ap:
   899                           
   900                           ; 1 bytes @ 0x10
   901     00B0                     	ds	1
   902     00B1                     sprintf@flag:
   903                           
   904                           ; 1 bytes @ 0x11
   905     00B1                     	ds	1
   906     00B2                     sprintf@prec:
   907                           
   908                           ; 1 bytes @ 0x12
   909     00B2                     	ds	1
   910     00B3                     sprintf@val:
   911                           
   912                           ; 2 bytes @ 0x13
   913     00B3                     	ds	2
   914     00B5                     sprintf@sp:
   915                           
   916                           ; 1 bytes @ 0x15
   917     00B5                     	ds	1
   918     00B6                     sprintf@c:
   919                           
   920                           ; 1 bytes @ 0x16
   921     00B6                     	ds	1
   922     00B7                     ??_main:
   923                           
   924                           ; 1 bytes @ 0x17
   925     00B7                     	ds	3
   926                           
   927                           	psect	cstackCOMMON
   928     0070                     __pcstackCOMMON:
   929     0070                     ?_UART_read_char:
   930     0070                     ??_UART_read_char:	
   931                           ; 1 bytes @ 0x0
   932                           
   933     0070                     ?_setup:	
   934                           ; 1 bytes @ 0x0
   935                           
   936     0070                     ?_Lcd_Init:	
   937                           ; 1 bytes @ 0x0
   938                           
   939     0070                     ?_MENU:	
   940                           ; 1 bytes @ 0x0
   941                           
   942     0070                     ?_Lcd_Clear:	
   943                           ; 1 bytes @ 0x0
   944                           
   945     0070                     ?_configPort:	
   946                           ; 1 bytes @ 0x0
   947                           
   948     0070                     ?_configIntbits:	
   949                           ; 1 bytes @ 0x0
   950                           
   951     0070                     ?_voltaje:	
   952                           ; 1 bytes @ 0x0
   953                           
   954     0070                     ?_contador:	
   955                           ; 1 bytes @ 0x0
   956                           
   957     0070                     ?_UART_write_char:	
   958                           ; 1 bytes @ 0x0
   959                           
   960     0070                     ?_isr:	
   961                           ; 1 bytes @ 0x0
   962                           
   963     0070                     ?_main:	
   964                           ; 1 bytes @ 0x0
   965                           
   966     0070                     ?_Lcd_Port:	
   967                           ; 1 bytes @ 0x0
   968                           
   969     0070                     ?_Lcd_Cmd:	
   970                           ; 1 bytes @ 0x0
   971                           
   972     0070                     ?_Lcd_Write_Char:	
   973                           ; 1 bytes @ 0x0
   974                           
   975     0070                     ?_adc_read:	
   976                           ; 1 bytes @ 0x0
   977                           
   978     0070                     ?___awdiv:	
   979                           ; 2 bytes @ 0x0
   980                           
   981     0070                     ?___awmod:	
   982                           ; 2 bytes @ 0x0
   983                           
   984     0070                     ?___lmul:	
   985                           ; 2 bytes @ 0x0
   986                           
   987     0070                     UART_read_char@datoRecibido:	
   988                           ; 4 bytes @ 0x0
   989                           
   990     0070                     ___awdiv@divisor:	
   991                           ; 1 bytes @ 0x0
   992                           
   993     0070                     ___awmod@divisor:	
   994                           ; 2 bytes @ 0x0
   995                           
   996     0070                     ___lmul@multiplier:	
   997                           ; 2 bytes @ 0x0
   998                           
   999                           
  1000                           ; 4 bytes @ 0x0
  1001     0070                     	ds	2
  1002     0072                     ??_adc_read:
  1003     0072                     ___awdiv@dividend:	
  1004                           ; 1 bytes @ 0x2
  1005                           
  1006     0072                     ___awmod@dividend:	
  1007                           ; 2 bytes @ 0x2
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x2
  1011     0072                     	ds	2
  1012     0074                     ??___awdiv:
  1013     0074                     ??___awmod:	
  1014                           ; 1 bytes @ 0x4
  1015                           
  1016     0074                     ___lmul@multiplicand:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019                           
  1020                           ; 4 bytes @ 0x4
  1021     0074                     	ds	1
  1022     0075                     ___awdiv@counter:
  1023     0075                     ___awmod@counter:	
  1024                           ; 1 bytes @ 0x5
  1025                           
  1026                           
  1027                           ; 1 bytes @ 0x5
  1028     0075                     	ds	1
  1029     0076                     ___awdiv@sign:
  1030     0076                     ___awmod@sign:	
  1031                           ; 1 bytes @ 0x6
  1032                           
  1033                           
  1034                           ; 1 bytes @ 0x6
  1035     0076                     	ds	1
  1036     0077                     ___awdiv@quotient:
  1037                           
  1038                           ; 2 bytes @ 0x7
  1039     0077                     	ds	1
  1040     0078                     ??___lmul:
  1041                           
  1042                           ; 1 bytes @ 0x8
  1043     0078                     	ds	1
  1044     0079                     ___lmul@product:
  1045                           
  1046                           ; 4 bytes @ 0x9
  1047     0079                     	ds	4
  1048     007D                     ??___aldiv:
  1049                           
  1050                           ; 1 bytes @ 0xD
  1051     007D                     	ds	1
  1052     007E                     ??_map:
  1053                           
  1054                           	psect	cstackBANK0
  1055     0020                     __pcstackBANK0:	
  1056                           ; 1 bytes @ 0xE
  1057                           
  1058     0020                     ?___aldiv:
  1059     0020                     ___aldiv@divisor:	
  1060                           ; 4 bytes @ 0x0
  1061                           
  1062                           
  1063                           ; 4 bytes @ 0x0
  1064     0020                     	ds	4
  1065     0024                     ___aldiv@dividend:
  1066                           
  1067                           ; 4 bytes @ 0x4
  1068     0024                     	ds	4
  1069     0028                     ___aldiv@counter:
  1070                           
  1071                           ; 1 bytes @ 0x8
  1072     0028                     	ds	1
  1073     0029                     ___aldiv@sign:
  1074                           
  1075                           ; 1 bytes @ 0x9
  1076     0029                     	ds	1
  1077     002A                     ___aldiv@quotient:
  1078                           
  1079                           ; 4 bytes @ 0xA
  1080     002A                     	ds	4
  1081     002E                     ?_map:
  1082     002E                     map@val:	
  1083                           ; 2 bytes @ 0xE
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0xE
  1087     002E                     	ds	2
  1088     0030                     map@min_in:
  1089                           
  1090                           ; 2 bytes @ 0x10
  1091     0030                     	ds	2
  1092     0032                     map@max_in:
  1093                           
  1094                           ; 2 bytes @ 0x12
  1095     0032                     	ds	2
  1096     0034                     map@min_out:
  1097                           
  1098                           ; 2 bytes @ 0x14
  1099     0034                     	ds	2
  1100     0036                     map@max_out:
  1101                           
  1102                           ; 2 bytes @ 0x16
  1103     0036                     	ds	2
  1104     0038                     map@vout:
  1105                           
  1106                           ; 2 bytes @ 0x18
  1107     0038                     	ds	2
  1108     003A                     ??_isr:
  1109                           
  1110                           ; 1 bytes @ 0x1A
  1111     003A                     	ds	4
  1112     003E                     isr@valorADC:
  1113                           
  1114                           ; 2 bytes @ 0x1E
  1115     003E                     	ds	2
  1116     0040                     isr@valorMapeado:
  1117                           
  1118                           ; 2 bytes @ 0x20
  1119     0040                     	ds	2
  1120     0042                     isr@residuo:
  1121                           
  1122                           ; 2 bytes @ 0x22
  1123     0042                     	ds	2
  1124     0044                     ?_configOsc:
  1125     0044                     ??_configPort:	
  1126                           ; 1 bytes @ 0x24
  1127                           
  1128     0044                     ??_configIntbits:	
  1129                           ; 1 bytes @ 0x24
  1130                           
  1131     0044                     ?_adc_init:	
  1132                           ; 1 bytes @ 0x24
  1133                           
  1134     0044                     ?_UART_RX_config:	
  1135                           ; 1 bytes @ 0x24
  1136                           
  1137     0044                     ?_UART_TX_config:	
  1138                           ; 1 bytes @ 0x24
  1139                           
  1140     0044                     ??_UART_write_char:	
  1141                           ; 1 bytes @ 0x24
  1142                           
  1143     0044                     ??_Lcd_Port:	
  1144                           ; 1 bytes @ 0x24
  1145                           
  1146     0044                     ?___lwdiv:	
  1147                           ; 1 bytes @ 0x24
  1148                           
  1149     0044                     Lcd_Port@a:	
  1150                           ; 2 bytes @ 0x24
  1151                           
  1152     0044                     UART_write_char@c:	
  1153                           ; 1 bytes @ 0x24
  1154                           
  1155     0044                     adc_init@channel:	
  1156                           ; 1 bytes @ 0x24
  1157                           
  1158     0044                     configOsc@freq:	
  1159                           ; 2 bytes @ 0x24
  1160                           
  1161     0044                     UART_RX_config@baudrate:	
  1162                           ; 2 bytes @ 0x24
  1163                           
  1164     0044                     UART_TX_config@baudrate:	
  1165                           ; 2 bytes @ 0x24
  1166                           
  1167     0044                     ___lwdiv@divisor:	
  1168                           ; 2 bytes @ 0x24
  1169                           
  1170                           
  1171                           ; 2 bytes @ 0x24
  1172     0044                     	ds	1
  1173     0045                     ?_UART_write_string:
  1174     0045                     ??_Lcd_Cmd:	
  1175                           ; 1 bytes @ 0x25
  1176                           
  1177     0045                     ??_Lcd_Write_Char:	
  1178                           ; 1 bytes @ 0x25
  1179                           
  1180     0045                     UART_write_string@a:	
  1181                           ; 1 bytes @ 0x25
  1182                           
  1183                           
  1184                           ; 2 bytes @ 0x25
  1185     0045                     	ds	1
  1186     0046                     ??_configOsc:
  1187     0046                     ??_UART_RX_config:	
  1188                           ; 1 bytes @ 0x26
  1189                           
  1190     0046                     ??_UART_TX_config:	
  1191                           ; 1 bytes @ 0x26
  1192                           
  1193     0046                     Lcd_Write_Char@a:	
  1194                           ; 1 bytes @ 0x26
  1195                           
  1196     0046                     adc_init@clock:	
  1197                           ; 1 bytes @ 0x26
  1198                           
  1199     0046                     ___lwdiv@dividend:	
  1200                           ; 2 bytes @ 0x26
  1201                           
  1202                           
  1203                           ; 2 bytes @ 0x26
  1204     0046                     	ds	1
  1205     0047                     ?_Lcd_Write_String:
  1206     0047                     ??_UART_write_string:	
  1207                           ; 1 bytes @ 0x27
  1208                           
  1209     0047                     Lcd_Cmd@a:	
  1210                           ; 1 bytes @ 0x27
  1211                           
  1212     0047                     Lcd_Write_String@a:	
  1213                           ; 1 bytes @ 0x27
  1214                           
  1215                           
  1216                           ; 2 bytes @ 0x27
  1217     0047                     	ds	1
  1218     0048                     ??_Lcd_Init:
  1219     0048                     ??_Lcd_Clear:	
  1220                           ; 1 bytes @ 0x28
  1221                           
  1222     0048                     ?_Lcd_Set_Cursor:	
  1223                           ; 1 bytes @ 0x28
  1224                           
  1225     0048                     ??_adc_init:	
  1226                           ; 1 bytes @ 0x28
  1227                           
  1228     0048                     ??___lwdiv:	
  1229                           ; 1 bytes @ 0x28
  1230                           
  1231     0048                     Lcd_Set_Cursor@b:	
  1232                           ; 1 bytes @ 0x28
  1233                           
  1234                           
  1235                           ; 1 bytes @ 0x28
  1236     0048                     	ds	1
  1237     0049                     ??_Lcd_Set_Cursor:
  1238     0049                     ??_Lcd_Write_String:	
  1239                           ; 1 bytes @ 0x29
  1240                           
  1241     0049                     Lcd_Set_Cursor@a:	
  1242                           ; 1 bytes @ 0x29
  1243                           
  1244     0049                     ___lwdiv@quotient:	
  1245                           ; 1 bytes @ 0x29
  1246                           
  1247                           
  1248                           ; 2 bytes @ 0x29
  1249     0049                     	ds	1
  1250     004A                     ??_setup:
  1251     004A                     Lcd_Set_Cursor@direccion:	
  1252                           ; 1 bytes @ 0x2A
  1253                           
  1254     004A                     UART_write_string@i:	
  1255                           ; 1 bytes @ 0x2A
  1256                           
  1257                           
  1258                           ; 2 bytes @ 0x2A
  1259     004A                     	ds	1
  1260     004B                     ___lwdiv@counter:
  1261                           
  1262                           ; 1 bytes @ 0x2B
  1263     004B                     	ds	1
  1264     004C                     ??_voltaje:
  1265                           
  1266                           	psect	maintext
  1267     02FB                     __pmaintext:	
  1268                           ; 1 bytes @ 0x2C
  1269 ;;
  1270 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1271 ;;
  1272 ;; *************** function _main *****************
  1273 ;; Defined at:
  1274 ;;		line 104 in file "LCD_MT.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;		None
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;		None
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : B00/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1288 ;;      Params:         0       0       0       0       0
  1289 ;;      Locals:         0       0       0       0       0
  1290 ;;      Temps:          0       0       3       0       0
  1291 ;;      Totals:         0       0       3       0       0
  1292 ;;Total ram usage:        3 bytes
  1293 ;; Hardware stack levels required when called: 7
  1294 ;; This function calls:
  1295 ;;		_Lcd_Clear
  1296 ;;		_Lcd_Init
  1297 ;;		_Lcd_Set_Cursor
  1298 ;;		_Lcd_Write_String
  1299 ;;		_MENU
  1300 ;;		_setup
  1301 ;;		_sprintf
  1302 ;; This function is called by:
  1303 ;;		Startup code after reset
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307     02FB                     _main:	
  1308                           ;psect for function _main
  1309                           
  1310     02FB                     l2212:	
  1311                           ;incstack = 0
  1312                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1313                           
  1314                           
  1315                           ;LCD_MT.c: 105:     setup();
  1316     02FB  120A  158A  27C6  120A  118A  	fcall	_setup
  1317                           
  1318                           ;LCD_MT.c: 106:     Lcd_Init();
  1319     0300  120A  118A  257C  120A  118A  	fcall	_Lcd_Init
  1320     0305                     l2214:
  1321                           
  1322                           ;LCD_MT.c: 112:          if(ADCON0bits.GO == 0){
  1323     0305  1283               	bcf	3,5	;RP0=0, select bank0
  1324     0306  1303               	bcf	3,6	;RP1=0, select bank0
  1325     0307  189F               	btfsc	31,1	;volatile
  1326     0308  2B0A               	goto	u1941
  1327     0309  2B0B               	goto	u1940
  1328     030A                     u1941:
  1329     030A  2B19               	goto	l2220
  1330     030B                     u1940:
  1331     030B                     l2216:
  1332                           
  1333                           ;LCD_MT.c: 113:             _delay((unsigned long)((10)*(8000000/4000.0)));
  1334     030B  301A               	movlw	26
  1335     030C  1683               	bsf	3,5	;RP0=1, select bank1
  1336     030D  1303               	bcf	3,6	;RP1=0, select bank1
  1337     030E  00B8               	movwf	(??_main^(0+128)+1)
  1338     030F  30F7               	movlw	247
  1339     0310  00B7               	movwf	??_main^(0+128)
  1340     0311                     u1967:
  1341     0311  0BB7               	decfsz	??_main^(0+128),f
  1342     0312  2B11               	goto	u1967
  1343     0313  0BB8               	decfsz	(??_main^(0+128)+1),f
  1344     0314  2B11               	goto	u1967
  1345     0315  2B16               	nop2
  1346     0316                     l2218:
  1347                           
  1348                           ;LCD_MT.c: 114:             ADCON0bits.GO = 1;
  1349     0316  1283               	bcf	3,5	;RP0=0, select bank0
  1350     0317  1303               	bcf	3,6	;RP1=0, select bank0
  1351     0318  149F               	bsf	31,1	;volatile
  1352     0319                     l2220:
  1353                           
  1354                           ;LCD_MT.c: 117:          if(UART_get == 'm'){
  1355     0319  306D               	movlw	109
  1356     031A  1683               	bsf	3,5	;RP0=1, select bank1
  1357     031B  1303               	bcf	3,6	;RP1=0, select bank1
  1358     031C  0640               	xorwf	_UART_get^(0+128),w
  1359     031D  1D03               	btfss	3,2
  1360     031E  2B20               	goto	u1951
  1361     031F  2B21               	goto	u1950
  1362     0320                     u1951:
  1363     0320  2B26               	goto	l2224
  1364     0321                     u1950:
  1365     0321                     l2222:
  1366                           
  1367                           ;LCD_MT.c: 118:            MENU();
  1368     0321  120A  118A  26EE  120A  118A  	fcall	_MENU
  1369     0326                     l2224:
  1370                           
  1371                           ;LCD_MT.c: 121:          Lcd_Clear();
  1372     0326  120A  158A  26D6  120A  118A  	fcall	_Lcd_Clear
  1373     032B                     l2226:
  1374                           
  1375                           ;LCD_MT.c: 122:         Lcd_Set_Cursor(1,1);
  1376     032B  1283               	bcf	3,5	;RP0=0, select bank0
  1377     032C  1303               	bcf	3,6	;RP1=0, select bank0
  1378     032D  01C8               	clrf	Lcd_Set_Cursor@b
  1379     032E  0AC8               	incf	Lcd_Set_Cursor@b,f
  1380     032F  3001               	movlw	1
  1381     0330  120A  158A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  1382                           
  1383                           ;LCD_MT.c: 123:         Lcd_Write_String("Voltaje");
  1384     0335  3061               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1385     0336  1283               	bcf	3,5	;RP0=0, select bank0
  1386     0337  1303               	bcf	3,6	;RP1=0, select bank0
  1387     0338  00C7               	movwf	Lcd_Write_String@a
  1388     0339  3080               	movlw	128
  1389     033A  00C8               	movwf	Lcd_Write_String@a+1
  1390     033B  120A  118A  2528  120A  118A  	fcall	_Lcd_Write_String
  1391     0340                     l2228:
  1392                           
  1393                           ;LCD_MT.c: 124:         Lcd_Set_Cursor(2,1);
  1394     0340  1283               	bcf	3,5	;RP0=0, select bank0
  1395     0341  1303               	bcf	3,6	;RP1=0, select bank0
  1396     0342  01C8               	clrf	Lcd_Set_Cursor@b
  1397     0343  0AC8               	incf	Lcd_Set_Cursor@b,f
  1398     0344  3002               	movlw	2
  1399     0345  120A  158A  273F  120A  118A  	fcall	_Lcd_Set_Cursor
  1400     034A                     l2230:
  1401                           
  1402                           ;LCD_MT.c: 125:         sprintf(strADC,"%d,%d%d V",centena,decena,unidad);
  1403     034A  3057               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1404     034B  1683               	bsf	3,5	;RP0=1, select bank1
  1405     034C  1303               	bcf	3,6	;RP1=0, select bank1
  1406     034D  00A6               	movwf	sprintf@f^(0+128)
  1407     034E  083B               	movf	(_centena+1)^(0+128),w
  1408     034F  00A8               	movwf	((?_sprintf+1)^(0+128)+1)
  1409     0350  083A               	movf	_centena^(0+128),w
  1410     0351  00A7               	movwf	(?_sprintf^(0+128)+1)
  1411     0352  083D               	movf	(_decena+1)^(0+128),w
  1412     0353  00AA               	movwf	((?_sprintf+1)^(0+128)+3)
  1413     0354  083C               	movf	_decena^(0+128),w
  1414     0355  00A9               	movwf	(?_sprintf^(0+128)+3)
  1415     0356  083F               	movf	(_unidad+1)^(0+128),w
  1416     0357  00AC               	movwf	((?_sprintf+1)^(0+128)+5)
  1417     0358  083E               	movf	_unidad^(0+128),w
  1418     0359  00AB               	movwf	(?_sprintf^(0+128)+5)
  1419     035A  30C1               	movlw	(low (_strADC| 0))& (0+255)
  1420     035B  120A  118A  2030  120A  118A  	fcall	_sprintf
  1421     0360                     l2232:
  1422                           
  1423                           ;LCD_MT.c: 126:         Lcd_Write_String(strADC);
  1424     0360  30C1               	movlw	(low (_strADC| 0))& (0+255)
  1425     0361  1283               	bcf	3,5	;RP0=0, select bank0
  1426     0362  1303               	bcf	3,6	;RP1=0, select bank0
  1427     0363  00C7               	movwf	Lcd_Write_String@a
  1428     0364  3000               	movlw	0
  1429     0365  00C8               	movwf	Lcd_Write_String@a+1
  1430     0366  120A  118A  2528  120A  118A  	fcall	_Lcd_Write_String
  1431     036B                     l2234:
  1432                           
  1433                           ;LCD_MT.c: 131:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1434     036B  3006               	movlw	6
  1435     036C  1683               	bsf	3,5	;RP0=1, select bank1
  1436     036D  1303               	bcf	3,6	;RP1=0, select bank1
  1437     036E  00B9               	movwf	(??_main^(0+128)+2)
  1438     036F  3013               	movlw	19
  1439     0370  00B8               	movwf	(??_main^(0+128)+1)
  1440     0371  30AD               	movlw	173
  1441     0372  00B7               	movwf	??_main^(0+128)
  1442     0373                     u1977:
  1443     0373  0BB7               	decfsz	??_main^(0+128),f
  1444     0374  2B73               	goto	u1977
  1445     0375  0BB8               	decfsz	(??_main^(0+128)+1),f
  1446     0376  2B73               	goto	u1977
  1447     0377  0BB9               	decfsz	(??_main^(0+128)+2),f
  1448     0378  2B73               	goto	u1977
  1449     0379  2B05               	goto	l2214
  1450     037A  120A  118A  280E   	ljmp	start
  1451     037D                     __end_of_main:
  1452                           
  1453                           	psect	text1
  1454     0030                     __ptext1:	
  1455 ;; *************** function _sprintf *****************
  1456 ;; Defined at:
  1457 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  sp              1    wreg     PTR unsigned char 
  1460 ;;		 -> strADC(4), 
  1461 ;;  f               1    6[BANK1 ] PTR const unsigned char 
  1462 ;;		 -> STR_2(10), 
  1463 ;; Auto vars:     Size  Location     Type
  1464 ;;  sp              1   21[BANK1 ] PTR unsigned char 
  1465 ;;		 -> strADC(4), 
  1466 ;;  tmpval          4    0        struct .
  1467 ;;  val             2   19[BANK1 ] unsigned int 
  1468 ;;  cp              2    0        PTR const unsigned char 
  1469 ;;  len             2    0        unsigned int 
  1470 ;;  c               1   22[BANK1 ] unsigned char 
  1471 ;;  prec            1   18[BANK1 ] char 
  1472 ;;  flag            1   17[BANK1 ] unsigned char 
  1473 ;;  ap              1   16[BANK1 ] PTR void [1]
  1474 ;;		 -> ?_sprintf(2), 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  2    6[BANK1 ] int 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1484 ;;      Params:         0       0       7       0       0
  1485 ;;      Locals:         0       0       7       0       0
  1486 ;;      Temps:          0       0       3       0       0
  1487 ;;      Totals:         0       0      17       0       0
  1488 ;;Total ram usage:       17 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 4
  1491 ;; This function calls:
  1492 ;;		___lwdiv
  1493 ;;		___lwmod
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499     0030                     _sprintf:	
  1500                           ;psect for function _sprintf
  1501                           
  1502                           
  1503                           ;incstack = 0
  1504                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1505                           ;sprintf@sp stored from wreg
  1506     0030  1683               	bsf	3,5	;RP0=1, select bank1
  1507     0031  1303               	bcf	3,6	;RP1=0, select bank1
  1508     0032  00B5               	movwf	sprintf@sp^(0+128)
  1509     0033                     l2044:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1512     0033  30A7               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1513     0034  00B0               	movwf	sprintf@ap^(0+128)
  1514                           
  1515                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1516     0035  2907               	goto	l2096
  1517     0036                     l2046:
  1518                           
  1519                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1520     0036  3025               	movlw	37
  1521     0037  0636               	xorwf	sprintf@c^(0+128),w
  1522     0038  1903               	btfsc	3,2
  1523     0039  283B               	goto	u1661
  1524     003A  283C               	goto	u1660
  1525     003B                     u1661:
  1526     003B  2846               	goto	l2052
  1527     003C                     u1660:
  1528     003C                     l2048:
  1529                           
  1530                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1531     003C  0835               	movf	sprintf@sp^(0+128),w
  1532     003D  0084               	movwf	4
  1533     003E  0836               	movf	sprintf@c^(0+128),w
  1534     003F  1383               	bcf	3,7	;select IRP bank0
  1535     0040  0080               	movwf	0
  1536     0041                     l2050:
  1537     0041  3001               	movlw	1
  1538     0042  00AD               	movwf	??_sprintf^(0+128)
  1539     0043  082D               	movf	??_sprintf^(0+128),w
  1540     0044  07B5               	addwf	sprintf@sp^(0+128),f
  1541                           
  1542                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1543     0045  2907               	goto	l2096
  1544     0046                     l2052:
  1545                           
  1546                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1547     0046  01B1               	clrf	sprintf@flag^(0+128)
  1548     0047                     l2056:	
  1549                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1550                           
  1551     0047  3001               	movlw	1
  1552     0048  07A6               	addwf	sprintf@f^(0+128),f
  1553     0049  30FF               	movlw	-1
  1554     004A  0726               	addwf	sprintf@f^(0+128),w
  1555     004B  0084               	movwf	4
  1556     004C  120A  118A  2387  120A  118A  	fcall	stringdir
  1557     0051  00B6               	movwf	sprintf@c^(0+128)
  1558     0052  00AD               	movwf	??_sprintf^(0+128)
  1559     0053  01AE               	clrf	(??_sprintf^(0+128)+1)
  1560                           
  1561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1562                           ; Switch size 1, requested type "simple"
  1563                           ; Number of cases is 1, Range of values is 0 to 0
  1564                           ; switch strategies available:
  1565                           ; Name         Instructions Cycles
  1566                           ; simple_byte            4     3 (average)
  1567                           ; direct_byte           11     8 (fixed)
  1568                           ; jumptable            260     6 (fixed)
  1569                           ;	Chosen strategy is simple_byte
  1570     0054  082E               	movf	(??_sprintf+1)^(0+128),w
  1571     0055  3A00               	xorlw	0	; case 0
  1572     0056  1903               	skipnz
  1573     0057  2859               	goto	l2290
  1574     0058  2907               	goto	l2096
  1575     0059                     l2290:
  1576                           
  1577                           ; Switch size 1, requested type "simple"
  1578                           ; Number of cases is 3, Range of values is 0 to 105
  1579                           ; switch strategies available:
  1580                           ; Name         Instructions Cycles
  1581                           ; simple_byte           10     6 (average)
  1582                           ; jumptable            260     6 (fixed)
  1583                           ;	Chosen strategy is simple_byte
  1584     0059  082D               	movf	??_sprintf^(0+128),w
  1585     005A  3A00               	xorlw	0	; case 0
  1586     005B  1903               	skipnz
  1587     005C  2917               	goto	l2098
  1588     005D  3A64               	xorlw	100	; case 100
  1589     005E  1903               	skipnz
  1590     005F  2864               	goto	l2058
  1591     0060  3A0D               	xorlw	13	; case 105
  1592     0061  1903               	skipnz
  1593     0062  2864               	goto	l2058
  1594     0063  2907               	goto	l2096
  1595     0064                     l2058:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1598     0064  0830               	movf	sprintf@ap^(0+128),w
  1599     0065  0084               	movwf	4
  1600     0066  1383               	bcf	3,7	;select IRP bank0
  1601     0067  0800               	movf	0,w
  1602     0068  00B3               	movwf	sprintf@val^(0+128)
  1603     0069  0A84               	incf	4,f
  1604     006A  0800               	movf	0,w
  1605     006B  00B4               	movwf	(sprintf@val+1)^(0+128)
  1606     006C                     l2060:
  1607     006C  3002               	movlw	2
  1608     006D  00AD               	movwf	??_sprintf^(0+128)
  1609     006E  082D               	movf	??_sprintf^(0+128),w
  1610     006F  07B0               	addwf	sprintf@ap^(0+128),f
  1611     0070                     l2062:
  1612                           
  1613                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  1614     0070  1FB4               	btfss	(sprintf@val+1)^(0+128),7
  1615     0071  2873               	goto	u1671
  1616     0072  2874               	goto	u1670
  1617     0073                     u1671:
  1618     0073  287D               	goto	l2068
  1619     0074                     u1670:
  1620     0074                     l2064:
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  1623     0074  3003               	movlw	3
  1624     0075  00AD               	movwf	??_sprintf^(0+128)
  1625     0076  082D               	movf	??_sprintf^(0+128),w
  1626     0077  04B1               	iorwf	sprintf@flag^(0+128),f
  1627     0078                     l2066:
  1628                           
  1629                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  1630     0078  09B3               	comf	sprintf@val^(0+128),f
  1631     0079  09B4               	comf	(sprintf@val+1)^(0+128),f
  1632     007A  0AB3               	incf	sprintf@val^(0+128),f
  1633     007B  1903               	skipnz
  1634     007C  0AB4               	incf	(sprintf@val+1)^(0+128),f
  1635     007D                     l2068:
  1636                           
  1637                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1638     007D  01B6               	clrf	sprintf@c^(0+128)
  1639     007E  0AB6               	incf	sprintf@c^(0+128),f
  1640     007F                     l2074:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1643     007F  0836               	movf	sprintf@c^(0+128),w
  1644     0080  00AD               	movwf	??_sprintf^(0+128)
  1645     0081  072D               	addwf	??_sprintf^(0+128),w
  1646     0082  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1647     0083  0084               	movwf	4
  1648     0084  120A  118A  2387  120A  118A  	fcall	stringdir
  1649     0089  00AE               	movwf	(??_sprintf+1)^(0+128)
  1650     008A  120A  118A  2387  120A  118A  	fcall	stringdir
  1651     008F  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  1652     0090  082F               	movf	(??_sprintf+2)^(0+128),w
  1653     0091  0234               	subwf	(sprintf@val+1)^(0+128),w
  1654     0092  1D03               	skipz
  1655     0093  2896               	goto	u1685
  1656     0094  082E               	movf	(??_sprintf+1)^(0+128),w
  1657     0095  0233               	subwf	sprintf@val^(0+128),w
  1658     0096                     u1685:
  1659     0096  1803               	skipnc
  1660     0097  2899               	goto	u1681
  1661     0098  289A               	goto	u1680
  1662     0099                     u1681:
  1663     0099  289B               	goto	l2078
  1664     009A                     u1680:
  1665     009A  28A5               	goto	l2080
  1666     009B                     l2078:
  1667     009B  3001               	movlw	1
  1668     009C  00AD               	movwf	??_sprintf^(0+128)
  1669     009D  082D               	movf	??_sprintf^(0+128),w
  1670     009E  07B6               	addwf	sprintf@c^(0+128),f
  1671     009F  3005               	movlw	5
  1672     00A0  0636               	xorwf	sprintf@c^(0+128),w
  1673     00A1  1D03               	btfss	3,2
  1674     00A2  28A4               	goto	u1691
  1675     00A3  28A5               	goto	u1690
  1676     00A4                     u1691:
  1677     00A4  287F               	goto	l2074
  1678     00A5                     u1690:
  1679     00A5                     l2080:
  1680                           
  1681                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  1682     00A5  0831               	movf	sprintf@flag^(0+128),w
  1683     00A6  3903               	andlw	3
  1684     00A7  1903               	btfsc	3,2
  1685     00A8  28AA               	goto	u1701
  1686     00A9  28AB               	goto	u1700
  1687     00AA                     u1701:
  1688     00AA  28B4               	goto	l2086
  1689     00AB                     u1700:
  1690     00AB                     l2082:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  1693     00AB  0835               	movf	sprintf@sp^(0+128),w
  1694     00AC  0084               	movwf	4
  1695     00AD  302D               	movlw	45
  1696     00AE  1383               	bcf	3,7	;select IRP bank0
  1697     00AF  0080               	movwf	0
  1698     00B0                     l2084:
  1699     00B0  3001               	movlw	1
  1700     00B1  00AD               	movwf	??_sprintf^(0+128)
  1701     00B2  082D               	movf	??_sprintf^(0+128),w
  1702     00B3  07B5               	addwf	sprintf@sp^(0+128),f
  1703     00B4                     l2086:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1706     00B4  0836               	movf	sprintf@c^(0+128),w
  1707     00B5  00B2               	movwf	sprintf@prec^(0+128)
  1708                           
  1709                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1710     00B6  28FE               	goto	l2094
  1711     00B7                     l2088:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1714     00B7  300A               	movlw	10
  1715     00B8  00A0               	movwf	___lwmod@divisor^(0+128)
  1716     00B9  3000               	movlw	0
  1717     00BA  00A1               	movwf	(___lwmod@divisor^(0+128)+1)
  1718     00BB  0832               	movf	sprintf@prec^(0+128),w
  1719     00BC  00AD               	movwf	??_sprintf^(0+128)
  1720     00BD  072D               	addwf	??_sprintf^(0+128),w
  1721     00BE  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1722     00BF  0084               	movwf	4
  1723     00C0  120A  118A  2387  120A  118A  	fcall	stringdir
  1724     00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1725     00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1726     00C7  00C4               	movwf	___lwdiv@divisor
  1727     00C8  120A  118A  2387  120A  118A  	fcall	stringdir
  1728     00CD  00C5               	movwf	___lwdiv@divisor+1
  1729     00CE  1683               	bsf	3,5	;RP0=1, select bank1
  1730     00CF  1303               	bcf	3,6	;RP1=0, select bank1
  1731     00D0  0834               	movf	(sprintf@val+1)^(0+128),w
  1732     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1733     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1734     00D3  00C7               	movwf	___lwdiv@dividend+1
  1735     00D4  1683               	bsf	3,5	;RP0=1, select bank1
  1736     00D5  1303               	bcf	3,6	;RP1=0, select bank1
  1737     00D6  0833               	movf	sprintf@val^(0+128),w
  1738     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  1739     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  1740     00D9  00C6               	movwf	___lwdiv@dividend
  1741     00DA  120A  118A  2662  120A  118A  	fcall	___lwdiv
  1742     00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1743     00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1744     00E1  0845               	movf	?___lwdiv+1,w
  1745     00E2  1683               	bsf	3,5	;RP0=1, select bank1
  1746     00E3  1303               	bcf	3,6	;RP1=0, select bank1
  1747     00E4  00A3               	movwf	(___lwmod@dividend+1)^(0+128)
  1748     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1749     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1750     00E7  0844               	movf	?___lwdiv,w
  1751     00E8  1683               	bsf	3,5	;RP0=1, select bank1
  1752     00E9  1303               	bcf	3,6	;RP1=0, select bank1
  1753     00EA  00A2               	movwf	___lwmod@dividend^(0+128)
  1754     00EB  120A  118A  27B0  120A  118A  	fcall	___lwmod
  1755     00F0  1683               	bsf	3,5	;RP0=1, select bank1
  1756     00F1  1303               	bcf	3,6	;RP1=0, select bank1
  1757     00F2  0820               	movf	?___lwmod^(0+128),w
  1758     00F3  3E30               	addlw	48
  1759     00F4  00B6               	movwf	sprintf@c^(0+128)
  1760     00F5                     l2090:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1763     00F5  0835               	movf	sprintf@sp^(0+128),w
  1764     00F6  0084               	movwf	4
  1765     00F7  0836               	movf	sprintf@c^(0+128),w
  1766     00F8  1383               	bcf	3,7	;select IRP bank0
  1767     00F9  0080               	movwf	0
  1768     00FA                     l2092:
  1769     00FA  3001               	movlw	1
  1770     00FB  00AD               	movwf	??_sprintf^(0+128)
  1771     00FC  082D               	movf	??_sprintf^(0+128),w
  1772     00FD  07B5               	addwf	sprintf@sp^(0+128),f
  1773     00FE                     l2094:
  1774                           
  1775                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1776     00FE  30FF               	movlw	255
  1777     00FF  00AD               	movwf	??_sprintf^(0+128)
  1778     0100  082D               	movf	??_sprintf^(0+128),w
  1779     0101  07B2               	addwf	sprintf@prec^(0+128),f
  1780     0102  0A32               	incf	sprintf@prec^(0+128),w
  1781     0103  1D03               	btfss	3,2
  1782     0104  2906               	goto	u1711
  1783     0105  2907               	goto	u1710
  1784     0106                     u1711:
  1785     0106  28B7               	goto	l2088
  1786     0107                     u1710:
  1787     0107                     l2096:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1790     0107  3001               	movlw	1
  1791     0108  07A6               	addwf	sprintf@f^(0+128),f
  1792     0109  30FF               	movlw	-1
  1793     010A  0726               	addwf	sprintf@f^(0+128),w
  1794     010B  0084               	movwf	4
  1795     010C  120A  118A  2387  120A  118A  	fcall	stringdir
  1796     0111  00B6               	movwf	sprintf@c^(0+128)
  1797     0112  0836               	movf	sprintf@c^(0+128),w
  1798     0113  1D03               	btfss	3,2
  1799     0114  2916               	goto	u1721
  1800     0115  2917               	goto	u1720
  1801     0116                     u1721:
  1802     0116  2836               	goto	l2046
  1803     0117                     u1720:
  1804     0117                     l2098:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1807     0117  0835               	movf	sprintf@sp^(0+128),w
  1808     0118  0084               	movwf	4
  1809     0119  1383               	bcf	3,7	;select IRP bank0
  1810     011A  0180               	clrf	0
  1811     011B                     l428:
  1812     011B  0008               	return
  1813     011C                     __end_of_sprintf:
  1814                           
  1815                           	psect	text2
  1816     07B0                     __ptext2:	
  1817 ;; *************** function ___lwmod *****************
  1818 ;; Defined at:
  1819 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1820 ;; Parameters:    Size  Location     Type
  1821 ;;  divisor         2    0[BANK1 ] unsigned int 
  1822 ;;  dividend        2    2[BANK1 ] unsigned int 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;  counter         1    5[BANK1 ] unsigned char 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2    0[BANK1 ] unsigned int 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       0       4       0       0
  1835 ;;      Locals:         0       0       1       0       0
  1836 ;;      Temps:          0       0       1       0       0
  1837 ;;      Totals:         0       0       6       0       0
  1838 ;;Total ram usage:        6 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 3
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_sprintf
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848     07B0                     ___lwmod:	
  1849                           ;psect for function ___lwmod
  1850                           
  1851     07B0                     l1942:	
  1852                           ;incstack = 0
  1853                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1854                           
  1855     07B0  1683               	bsf	3,5	;RP0=1, select bank1
  1856     07B1  1303               	bcf	3,6	;RP1=0, select bank1
  1857     07B2  0820               	movf	___lwmod@divisor^(0+128),w
  1858     07B3  0421               	iorwf	(___lwmod@divisor+1)^(0+128),w
  1859     07B4  1903               	btfsc	3,2
  1860     07B5  2FB7               	goto	u1531
  1861     07B6  2FB8               	goto	u1530
  1862     07B7                     u1531:
  1863     07B7  2FE7               	goto	l1960
  1864     07B8                     u1530:
  1865     07B8                     l1944:
  1866     07B8  01A5               	clrf	___lwmod@counter^(0+128)
  1867     07B9  0AA5               	incf	___lwmod@counter^(0+128),f
  1868     07BA  2FC6               	goto	l1950
  1869     07BB                     l1946:
  1870     07BB  3001               	movlw	1
  1871     07BC                     u1545:
  1872     07BC  1003               	clrc
  1873     07BD  0DA0               	rlf	___lwmod@divisor^(0+128),f
  1874     07BE  0DA1               	rlf	(___lwmod@divisor+1)^(0+128),f
  1875     07BF  3EFF               	addlw	-1
  1876     07C0  1D03               	skipz
  1877     07C1  2FBC               	goto	u1545
  1878     07C2                     l1948:
  1879     07C2  3001               	movlw	1
  1880     07C3  00A4               	movwf	??___lwmod^(0+128)
  1881     07C4  0824               	movf	??___lwmod^(0+128),w
  1882     07C5  07A5               	addwf	___lwmod@counter^(0+128),f
  1883     07C6                     l1950:
  1884     07C6  1FA1               	btfss	(___lwmod@divisor+1)^(0+128),7
  1885     07C7  2FC9               	goto	u1551
  1886     07C8  2FCA               	goto	u1550
  1887     07C9                     u1551:
  1888     07C9  2FBB               	goto	l1946
  1889     07CA                     u1550:
  1890     07CA                     l1952:
  1891     07CA  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  1892     07CB  0223               	subwf	(___lwmod@dividend+1)^(0+128),w
  1893     07CC  1D03               	skipz
  1894     07CD  2FD0               	goto	u1565
  1895     07CE  0820               	movf	___lwmod@divisor^(0+128),w
  1896     07CF  0222               	subwf	___lwmod@dividend^(0+128),w
  1897     07D0                     u1565:
  1898     07D0  1C03               	skipc
  1899     07D1  2FD3               	goto	u1561
  1900     07D2  2FD4               	goto	u1560
  1901     07D3                     u1561:
  1902     07D3  2FDA               	goto	l1956
  1903     07D4                     u1560:
  1904     07D4                     l1954:
  1905     07D4  0820               	movf	___lwmod@divisor^(0+128),w
  1906     07D5  02A2               	subwf	___lwmod@dividend^(0+128),f
  1907     07D6  0821               	movf	(___lwmod@divisor+1)^(0+128),w
  1908     07D7  1C03               	skipc
  1909     07D8  03A3               	decf	(___lwmod@dividend+1)^(0+128),f
  1910     07D9  02A3               	subwf	(___lwmod@dividend+1)^(0+128),f
  1911     07DA                     l1956:
  1912     07DA  3001               	movlw	1
  1913     07DB                     u1575:
  1914     07DB  1003               	clrc
  1915     07DC  0CA1               	rrf	(___lwmod@divisor+1)^(0+128),f
  1916     07DD  0CA0               	rrf	___lwmod@divisor^(0+128),f
  1917     07DE  3EFF               	addlw	-1
  1918     07DF  1D03               	skipz
  1919     07E0  2FDB               	goto	u1575
  1920     07E1                     l1958:
  1921     07E1  3001               	movlw	1
  1922     07E2  02A5               	subwf	___lwmod@counter^(0+128),f
  1923     07E3  1D03               	btfss	3,2
  1924     07E4  2FE6               	goto	u1581
  1925     07E5  2FE7               	goto	u1580
  1926     07E6                     u1581:
  1927     07E6  2FCA               	goto	l1952
  1928     07E7                     u1580:
  1929     07E7                     l1960:
  1930     07E7  0823               	movf	(___lwmod@dividend+1)^(0+128),w
  1931     07E8  00A1               	movwf	(?___lwmod+1)^(0+128)
  1932     07E9  0822               	movf	___lwmod@dividend^(0+128),w
  1933     07EA  00A0               	movwf	?___lwmod^(0+128)
  1934     07EB                     l714:
  1935     07EB  0008               	return
  1936     07EC                     __end_of___lwmod:
  1937                           
  1938                           	psect	text3
  1939     0662                     __ptext3:	
  1940 ;; *************** function ___lwdiv *****************
  1941 ;; Defined at:
  1942 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1943 ;; Parameters:    Size  Location     Type
  1944 ;;  divisor         2   36[BANK0 ] unsigned int 
  1945 ;;  dividend        2   38[BANK0 ] unsigned int 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;  quotient        2   41[BANK0 ] unsigned int 
  1948 ;;  counter         1   43[BANK0 ] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  2   36[BANK0 ] unsigned int 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, status,0
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       4       0       0       0
  1959 ;;      Locals:         0       3       0       0       0
  1960 ;;      Temps:          0       1       0       0       0
  1961 ;;      Totals:         0       8       0       0       0
  1962 ;;Total ram usage:        8 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 3
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_sprintf
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972     0662                     ___lwdiv:	
  1973                           ;psect for function ___lwdiv
  1974                           
  1975     0662                     l1916:	
  1976                           ;incstack = 0
  1977                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1978                           
  1979     0662  1283               	bcf	3,5	;RP0=0, select bank0
  1980     0663  1303               	bcf	3,6	;RP1=0, select bank0
  1981     0664  01C9               	clrf	___lwdiv@quotient
  1982     0665  01CA               	clrf	___lwdiv@quotient+1
  1983     0666                     l1918:
  1984     0666  0844               	movf	___lwdiv@divisor,w
  1985     0667  0445               	iorwf	___lwdiv@divisor+1,w
  1986     0668  1903               	btfsc	3,2
  1987     0669  2E6B               	goto	u1461
  1988     066A  2E6C               	goto	u1460
  1989     066B                     u1461:
  1990     066B  2EA3               	goto	l1938
  1991     066C                     u1460:
  1992     066C                     l1920:
  1993     066C  01CB               	clrf	___lwdiv@counter
  1994     066D  0ACB               	incf	___lwdiv@counter,f
  1995     066E  2E7A               	goto	l1926
  1996     066F                     l1922:
  1997     066F  3001               	movlw	1
  1998     0670                     u1475:
  1999     0670  1003               	clrc
  2000     0671  0DC4               	rlf	___lwdiv@divisor,f
  2001     0672  0DC5               	rlf	___lwdiv@divisor+1,f
  2002     0673  3EFF               	addlw	-1
  2003     0674  1D03               	skipz
  2004     0675  2E70               	goto	u1475
  2005     0676                     l1924:
  2006     0676  3001               	movlw	1
  2007     0677  00C8               	movwf	??___lwdiv
  2008     0678  0848               	movf	??___lwdiv,w
  2009     0679  07CB               	addwf	___lwdiv@counter,f
  2010     067A                     l1926:
  2011     067A  1FC5               	btfss	___lwdiv@divisor+1,7
  2012     067B  2E7D               	goto	u1481
  2013     067C  2E7E               	goto	u1480
  2014     067D                     u1481:
  2015     067D  2E6F               	goto	l1922
  2016     067E                     u1480:
  2017     067E                     l1928:
  2018     067E  3001               	movlw	1
  2019     067F                     u1495:
  2020     067F  1003               	clrc
  2021     0680  0DC9               	rlf	___lwdiv@quotient,f
  2022     0681  0DCA               	rlf	___lwdiv@quotient+1,f
  2023     0682  3EFF               	addlw	-1
  2024     0683  1D03               	skipz
  2025     0684  2E7F               	goto	u1495
  2026     0685  0845               	movf	___lwdiv@divisor+1,w
  2027     0686  0247               	subwf	___lwdiv@dividend+1,w
  2028     0687  1D03               	skipz
  2029     0688  2E8B               	goto	u1505
  2030     0689  0844               	movf	___lwdiv@divisor,w
  2031     068A  0246               	subwf	___lwdiv@dividend,w
  2032     068B                     u1505:
  2033     068B  1C03               	skipc
  2034     068C  2E8E               	goto	u1501
  2035     068D  2E8F               	goto	u1500
  2036     068E                     u1501:
  2037     068E  2E96               	goto	l1934
  2038     068F                     u1500:
  2039     068F                     l1930:
  2040     068F  0844               	movf	___lwdiv@divisor,w
  2041     0690  02C6               	subwf	___lwdiv@dividend,f
  2042     0691  0845               	movf	___lwdiv@divisor+1,w
  2043     0692  1C03               	skipc
  2044     0693  03C7               	decf	___lwdiv@dividend+1,f
  2045     0694  02C7               	subwf	___lwdiv@dividend+1,f
  2046     0695                     l1932:
  2047     0695  1449               	bsf	___lwdiv@quotient,0
  2048     0696                     l1934:
  2049     0696  3001               	movlw	1
  2050     0697                     u1515:
  2051     0697  1003               	clrc
  2052     0698  0CC5               	rrf	___lwdiv@divisor+1,f
  2053     0699  0CC4               	rrf	___lwdiv@divisor,f
  2054     069A  3EFF               	addlw	-1
  2055     069B  1D03               	skipz
  2056     069C  2E97               	goto	u1515
  2057     069D                     l1936:
  2058     069D  3001               	movlw	1
  2059     069E  02CB               	subwf	___lwdiv@counter,f
  2060     069F  1D03               	btfss	3,2
  2061     06A0  2EA2               	goto	u1521
  2062     06A1  2EA3               	goto	u1520
  2063     06A2                     u1521:
  2064     06A2  2E7E               	goto	l1928
  2065     06A3                     u1520:
  2066     06A3                     l1938:
  2067     06A3  084A               	movf	___lwdiv@quotient+1,w
  2068     06A4  00C5               	movwf	?___lwdiv+1
  2069     06A5  0849               	movf	___lwdiv@quotient,w
  2070     06A6  00C4               	movwf	?___lwdiv
  2071     06A7                     l704:
  2072     06A7  0008               	return
  2073     06A8                     __end_of___lwdiv:
  2074                           
  2075                           	psect	text4
  2076     0FC6                     __ptext4:	
  2077 ;; *************** function _setup *****************
  2078 ;; Defined at:
  2079 ;;		line 139 in file "LCD_MT.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;		None
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, status,2, status,0, pclath, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2093 ;;      Params:         0       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0
  2096 ;;      Totals:         0       0       0       0       0
  2097 ;;Total ram usage:        0 bytes
  2098 ;; Hardware stack levels used: 1
  2099 ;; Hardware stack levels required when called: 4
  2100 ;; This function calls:
  2101 ;;		_UART_RX_config
  2102 ;;		_UART_TX_config
  2103 ;;		_adc_init
  2104 ;;		_configIntbits
  2105 ;;		_configOsc
  2106 ;;		_configPort
  2107 ;; This function is called by:
  2108 ;;		_main
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112     0FC6                     _setup:	
  2113                           ;psect for function _setup
  2114                           
  2115     0FC6                     l1978:	
  2116                           ;incstack = 0
  2117                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2118                           
  2119                           
  2120                           ;LCD_MT.c: 141:     configOsc(8);
  2121     0FC6  3008               	movlw	8
  2122     0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  2123     0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  2124     0FC9  00C4               	movwf	configOsc@freq
  2125     0FCA  3000               	movlw	0
  2126     0FCB  00C5               	movwf	configOsc@freq+1
  2127     0FCC  120A  118A  23F5  120A  158A  	fcall	_configOsc
  2128                           
  2129                           ;LCD_MT.c: 142:     configPort();
  2130     0FD1  120A  158A  26F5  120A  158A  	fcall	_configPort
  2131     0FD6                     l1980:
  2132                           
  2133                           ;LCD_MT.c: 143:     configIntbits();
  2134     0FD6  120A  158A  26B7  120A  158A  	fcall	_configIntbits
  2135     0FDB                     l1982:
  2136                           
  2137                           ;LCD_MT.c: 144:     adc_init(0,8);
  2138     0FDB  3000               	movlw	0
  2139     0FDC  1283               	bcf	3,5	;RP0=0, select bank0
  2140     0FDD  1303               	bcf	3,6	;RP1=0, select bank0
  2141     0FDE  00C4               	movwf	adc_init@channel
  2142     0FDF  00C5               	movwf	adc_init@channel+1
  2143     0FE0  3008               	movlw	8
  2144     0FE1  00C6               	movwf	adc_init@clock
  2145     0FE2  3000               	movlw	0
  2146     0FE3  00C7               	movwf	adc_init@clock+1
  2147     0FE4  120A  118A  2264  120A  158A  	fcall	_adc_init
  2148     0FE9                     l1984:
  2149                           
  2150                           ;LCD_MT.c: 145:     UART_RX_config(9600);
  2151     0FE9  3080               	movlw	128
  2152     0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  2153     0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  2154     0FEC  00C4               	movwf	UART_RX_config@baudrate
  2155     0FED  3025               	movlw	37
  2156     0FEE  00C5               	movwf	UART_RX_config@baudrate+1
  2157     0FEF  120A  118A  2733  120A  158A  	fcall	_UART_RX_config
  2158     0FF4                     l1986:
  2159                           
  2160                           ;LCD_MT.c: 146:     UART_TX_config(9600);
  2161     0FF4  3080               	movlw	128
  2162     0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  2163     0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  2164     0FF7  00C4               	movwf	UART_TX_config@baudrate
  2165     0FF8  3025               	movlw	37
  2166     0FF9  00C5               	movwf	UART_TX_config@baudrate+1
  2167     0FFA  120A  118A  2772  120A  158A  	fcall	_UART_TX_config
  2168     0FFF                     l84:
  2169     0FFF  0008               	return
  2170     1000                     __end_of_setup:
  2171                           
  2172                           	psect	text5
  2173     0EF5                     __ptext5:	
  2174 ;; *************** function _configPort *****************
  2175 ;; Defined at:
  2176 ;;		line 3 in file "config.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;		None
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;		None
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  1    wreg      void 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2190 ;;      Params:         0       0       0       0       0
  2191 ;;      Locals:         0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0
  2193 ;;      Totals:         0       0       0       0       0
  2194 ;;Total ram usage:        0 bytes
  2195 ;; Hardware stack levels used: 1
  2196 ;; Hardware stack levels required when called: 3
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		_setup
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204     0EF5                     _configPort:	
  2205                           ;psect for function _configPort
  2206                           
  2207     0EF5                     l1670:	
  2208                           ;incstack = 0
  2209                           ; Regs used in _configPort: [wreg+status,2]
  2210                           
  2211                           
  2212                           ;config.c: 5:     ANSEL = 0b00000001;
  2213     0EF5  3001               	movlw	1
  2214     0EF6  1683               	bsf	3,5	;RP0=1, select bank3
  2215     0EF7  1703               	bsf	3,6	;RP1=1, select bank3
  2216     0EF8  0088               	movwf	8	;volatile
  2217     0EF9                     l1672:
  2218                           
  2219                           ;config.c: 6:     ANSELH = 0;
  2220     0EF9  0189               	clrf	9	;volatile
  2221     0EFA                     l1674:
  2222                           
  2223                           ;config.c: 8:     TRISA = 0b00000001;
  2224     0EFA  3001               	movlw	1
  2225     0EFB  1683               	bsf	3,5	;RP0=1, select bank1
  2226     0EFC  1303               	bcf	3,6	;RP1=0, select bank1
  2227     0EFD  0085               	movwf	5	;volatile
  2228                           
  2229                           ;config.c: 9:     TRISB = 0b00000000;
  2230     0EFE  0186               	clrf	6	;volatile
  2231     0EFF                     l1676:
  2232                           
  2233                           ;config.c: 10:     TRISC = 0b11111111;
  2234     0EFF  30FF               	movlw	255
  2235     0F00  0087               	movwf	7	;volatile
  2236     0F01                     l1678:
  2237                           
  2238                           ;config.c: 11:     TRISD = 0b00000000;
  2239     0F01  0188               	clrf	8	;volatile
  2240     0F02                     l1680:
  2241                           
  2242                           ;config.c: 12:     TRISE = 0b0000;
  2243     0F02  0189               	clrf	9	;volatile
  2244     0F03                     l1682:
  2245                           
  2246                           ;config.c: 14:     PORTA = 0;
  2247     0F03  1283               	bcf	3,5	;RP0=0, select bank0
  2248     0F04  1303               	bcf	3,6	;RP1=0, select bank0
  2249     0F05  0185               	clrf	5	;volatile
  2250     0F06                     l1684:
  2251                           
  2252                           ;config.c: 15:     PORTB = 0;
  2253     0F06  0186               	clrf	6	;volatile
  2254     0F07                     l1686:
  2255                           
  2256                           ;config.c: 16:     PORTC = 0;
  2257     0F07  0187               	clrf	7	;volatile
  2258     0F08                     l1688:
  2259                           
  2260                           ;config.c: 17:     PORTD = 0;
  2261     0F08  0188               	clrf	8	;volatile
  2262     0F09                     l1690:
  2263                           
  2264                           ;config.c: 18:     PORTE = 0;
  2265     0F09  0189               	clrf	9	;volatile
  2266     0F0A                     l196:
  2267     0F0A  0008               	return
  2268     0F0B                     __end_of_configPort:
  2269                           
  2270                           	psect	text6
  2271     03F5                     __ptext6:	
  2272 ;; *************** function _configOsc *****************
  2273 ;; Defined at:
  2274 ;;		line 43 in file "config.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;  freq            2   36[BANK0 ] unsigned int 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, status,2, status,0
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       2       0       0       0
  2289 ;;      Locals:         0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0
  2291 ;;      Totals:         0       2       0       0       0
  2292 ;;Total ram usage:        2 bytes
  2293 ;; Hardware stack levels used: 1
  2294 ;; Hardware stack levels required when called: 3
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_setup
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302     03F5                     _configOsc:	
  2303                           ;psect for function _configOsc
  2304                           
  2305     03F5                     l1634:	
  2306                           ;incstack = 0
  2307                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  2308                           
  2309                           
  2310                           ;config.c: 44:     if(freq == 8){
  2311     03F5  3008               	movlw	8
  2312     03F6  1283               	bcf	3,5	;RP0=0, select bank0
  2313     03F7  1303               	bcf	3,6	;RP1=0, select bank0
  2314     03F8  0644               	xorwf	configOsc@freq,w
  2315     03F9  0445               	iorwf	configOsc@freq+1,w
  2316     03FA  1D03               	btfss	3,2
  2317     03FB  2BFD               	goto	u1031
  2318     03FC  2BFE               	goto	u1030
  2319     03FD                     u1031:
  2320     03FD  2C03               	goto	l1638
  2321     03FE                     u1030:
  2322     03FE                     l1636:
  2323                           
  2324                           ;config.c: 45:         OSCCONbits.IRCF = 0b111;
  2325     03FE  3070               	movlw	112
  2326     03FF  1683               	bsf	3,5	;RP0=1, select bank1
  2327     0400  1303               	bcf	3,6	;RP1=0, select bank1
  2328     0401  048F               	iorwf	15,f	;volatile
  2329                           
  2330                           ;config.c: 46:     }
  2331     0402  2C64               	goto	l1666
  2332     0403                     l1638:
  2333     0403  3004               	movlw	4
  2334     0404  0644               	xorwf	configOsc@freq,w
  2335     0405  0445               	iorwf	configOsc@freq+1,w
  2336     0406  1D03               	btfss	3,2
  2337     0407  2C09               	goto	u1041
  2338     0408  2C0A               	goto	u1040
  2339     0409                     u1041:
  2340     0409  2C11               	goto	l1642
  2341     040A                     u1040:
  2342     040A                     l1640:
  2343                           
  2344                           ;config.c: 49:         OSCCONbits.IRCF = 0b110;
  2345     040A  1683               	bsf	3,5	;RP0=1, select bank1
  2346     040B  1303               	bcf	3,6	;RP1=0, select bank1
  2347     040C  080F               	movf	15,w	;volatile
  2348     040D  398F               	andlw	-113
  2349     040E  3860               	iorlw	96
  2350     040F  008F               	movwf	15	;volatile
  2351                           
  2352                           ;config.c: 50:     }
  2353     0410  2C64               	goto	l1666
  2354     0411                     l1642:
  2355     0411  3002               	movlw	2
  2356     0412  0644               	xorwf	configOsc@freq,w
  2357     0413  0445               	iorwf	configOsc@freq+1,w
  2358     0414  1D03               	btfss	3,2
  2359     0415  2C17               	goto	u1051
  2360     0416  2C18               	goto	u1050
  2361     0417                     u1051:
  2362     0417  2C1F               	goto	l1646
  2363     0418                     u1050:
  2364     0418                     l1644:
  2365                           
  2366                           ;config.c: 53:         OSCCONbits.IRCF = 0b101;
  2367     0418  1683               	bsf	3,5	;RP0=1, select bank1
  2368     0419  1303               	bcf	3,6	;RP1=0, select bank1
  2369     041A  080F               	movf	15,w	;volatile
  2370     041B  398F               	andlw	-113
  2371     041C  3850               	iorlw	80
  2372     041D  008F               	movwf	15	;volatile
  2373                           
  2374                           ;config.c: 54:     }
  2375     041E  2C64               	goto	l1666
  2376     041F                     l1646:
  2377     041F  0344               	decf	configOsc@freq,w
  2378     0420  0445               	iorwf	configOsc@freq+1,w
  2379     0421  1D03               	btfss	3,2
  2380     0422  2C24               	goto	u1061
  2381     0423  2C25               	goto	u1060
  2382     0424                     u1061:
  2383     0424  2C2C               	goto	l1650
  2384     0425                     u1060:
  2385     0425                     l1648:
  2386                           
  2387                           ;config.c: 57:         OSCCONbits.IRCF = 0b100;
  2388     0425  1683               	bsf	3,5	;RP0=1, select bank1
  2389     0426  1303               	bcf	3,6	;RP1=0, select bank1
  2390     0427  080F               	movf	15,w	;volatile
  2391     0428  398F               	andlw	-113
  2392     0429  3840               	iorlw	64
  2393     042A  008F               	movwf	15	;volatile
  2394                           
  2395                           ;config.c: 58:     }
  2396     042B  2C64               	goto	l1666
  2397     042C                     l1650:
  2398     042C  30F4               	movlw	244
  2399     042D  0644               	xorwf	configOsc@freq,w
  2400     042E  1D03               	skipz
  2401     042F  2C34               	goto	u1071
  2402     0430  0345               	decf	configOsc@freq+1,w
  2403     0431  1D03               	btfss	3,2
  2404     0432  2C34               	goto	u1071
  2405     0433  2C35               	goto	u1070
  2406     0434                     u1071:
  2407     0434  2C3C               	goto	l1654
  2408     0435                     u1070:
  2409     0435                     l1652:
  2410                           
  2411                           ;config.c: 61:         OSCCONbits.IRCF = 0b011;
  2412     0435  1683               	bsf	3,5	;RP0=1, select bank1
  2413     0436  1303               	bcf	3,6	;RP1=0, select bank1
  2414     0437  080F               	movf	15,w	;volatile
  2415     0438  398F               	andlw	-113
  2416     0439  3830               	iorlw	48
  2417     043A  008F               	movwf	15	;volatile
  2418                           
  2419                           ;config.c: 62:     }
  2420     043B  2C64               	goto	l1666
  2421     043C                     l1654:
  2422     043C  30FA               	movlw	250
  2423     043D  0644               	xorwf	configOsc@freq,w
  2424     043E  0445               	iorwf	configOsc@freq+1,w
  2425     043F  1D03               	btfss	3,2
  2426     0440  2C42               	goto	u1081
  2427     0441  2C43               	goto	u1080
  2428     0442                     u1081:
  2429     0442  2C4A               	goto	l1658
  2430     0443                     u1080:
  2431     0443                     l1656:
  2432                           
  2433                           ;config.c: 65:         OSCCONbits.IRCF = 0b010;
  2434     0443  1683               	bsf	3,5	;RP0=1, select bank1
  2435     0444  1303               	bcf	3,6	;RP1=0, select bank1
  2436     0445  080F               	movf	15,w	;volatile
  2437     0446  398F               	andlw	-113
  2438     0447  3820               	iorlw	32
  2439     0448  008F               	movwf	15	;volatile
  2440                           
  2441                           ;config.c: 66:     }
  2442     0449  2C64               	goto	l1666
  2443     044A                     l1658:
  2444     044A  307D               	movlw	125
  2445     044B  0644               	xorwf	configOsc@freq,w
  2446     044C  0445               	iorwf	configOsc@freq+1,w
  2447     044D  1D03               	btfss	3,2
  2448     044E  2C50               	goto	u1091
  2449     044F  2C51               	goto	u1090
  2450     0450                     u1091:
  2451     0450  2C58               	goto	l1662
  2452     0451                     u1090:
  2453     0451                     l1660:
  2454                           
  2455                           ;config.c: 69:         OSCCONbits.IRCF = 0b001;
  2456     0451  1683               	bsf	3,5	;RP0=1, select bank1
  2457     0452  1303               	bcf	3,6	;RP1=0, select bank1
  2458     0453  080F               	movf	15,w	;volatile
  2459     0454  398F               	andlw	-113
  2460     0455  3810               	iorlw	16
  2461     0456  008F               	movwf	15	;volatile
  2462                           
  2463                           ;config.c: 70:     }
  2464     0457  2C64               	goto	l1666
  2465     0458                     l1662:
  2466     0458  301F               	movlw	31
  2467     0459  0644               	xorwf	configOsc@freq,w
  2468     045A  0445               	iorwf	configOsc@freq+1,w
  2469     045B  1D03               	btfss	3,2
  2470     045C  2C5E               	goto	u1101
  2471     045D  2C5F               	goto	u1100
  2472     045E                     u1101:
  2473     045E  2C64               	goto	l214
  2474     045F                     u1100:
  2475     045F                     l1664:
  2476                           
  2477                           ;config.c: 73:         OSCCONbits.IRCF = 0b000;
  2478     045F  308F               	movlw	-113
  2479     0460  1683               	bsf	3,5	;RP0=1, select bank1
  2480     0461  1303               	bcf	3,6	;RP1=0, select bank1
  2481     0462  058F               	andwf	15,f	;volatile
  2482     0463  2C64               	goto	l1666
  2483     0464                     l214:
  2484     0464                     l1666:
  2485                           
  2486                           ;config.c: 76:     OSCCONbits.SCS = 1;
  2487     0464  1683               	bsf	3,5	;RP0=1, select bank1
  2488     0465  1303               	bcf	3,6	;RP1=0, select bank1
  2489     0466  140F               	bsf	15,0	;volatile
  2490     0467                     l220:
  2491     0467  0008               	return
  2492     0468                     __end_of_configOsc:
  2493                           
  2494                           	psect	text7
  2495     0EB7                     __ptext7:	
  2496 ;; *************** function _configIntbits *****************
  2497 ;; Defined at:
  2498 ;;		line 34 in file "config.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		None
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2512 ;;      Params:         0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0
  2515 ;;      Totals:         0       0       0       0       0
  2516 ;;Total ram usage:        0 bytes
  2517 ;; Hardware stack levels used: 1
  2518 ;; Hardware stack levels required when called: 3
  2519 ;; This function calls:
  2520 ;;		Nothing
  2521 ;; This function is called by:
  2522 ;;		_setup
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526     0EB7                     _configIntbits:	
  2527                           ;psect for function _configIntbits
  2528                           
  2529     0EB7                     l1694:	
  2530                           ;incstack = 0
  2531                           ; Regs used in _configIntbits: []
  2532                           
  2533                           
  2534                           ;config.c: 35:     INTCONbits.GIE = 1;
  2535     0EB7  178B               	bsf	11,7	;volatile
  2536                           
  2537                           ;config.c: 36:     INTCONbits.PEIE = 1;
  2538     0EB8  170B               	bsf	11,6	;volatile
  2539     0EB9                     l202:	
  2540                           ;config.c: 38:     return;
  2541                           
  2542     0EB9  0008               	return
  2543     0EBA                     __end_of_configIntbits:
  2544                           
  2545                           	psect	text8
  2546     0264                     __ptext8:	
  2547 ;; *************** function _adc_init *****************
  2548 ;; Defined at:
  2549 ;;		line 3 in file "ADC.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  channel         2   36[BANK0 ] int 
  2552 ;;  clock           2   38[BANK0 ] int 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2564 ;;      Params:         0       4       0       0       0
  2565 ;;      Locals:         0       0       0       0       0
  2566 ;;      Temps:          0       2       0       0       0
  2567 ;;      Totals:         0       6       0       0       0
  2568 ;;Total ram usage:        6 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 3
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_setup
  2575 ;; This function uses a non-reentrant model
  2576 ;;
  2577                           
  2578     0264                     _adc_init:	
  2579                           ;psect for function _adc_init
  2580                           
  2581     0264                     l1696:	
  2582                           ;incstack = 0
  2583                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  2584                           
  2585                           
  2586                           ;ADC.c: 6:     ADCON0bits.ADON = 1;
  2587     0264  1283               	bcf	3,5	;RP0=0, select bank0
  2588     0265  1303               	bcf	3,6	;RP1=0, select bank0
  2589     0266  141F               	bsf	31,0	;volatile
  2590     0267                     l1698:
  2591                           
  2592                           ;ADC.c: 9:     _delay((unsigned long)((10)*(8000000/4000.0)));
  2593     0267  301A               	movlw	26
  2594     0268  1283               	bcf	3,5	;RP0=0, select bank0
  2595     0269  1303               	bcf	3,6	;RP1=0, select bank0
  2596     026A  00C9               	movwf	??_adc_init+1
  2597     026B  30F7               	movlw	247
  2598     026C  00C8               	movwf	??_adc_init
  2599     026D                     u1987:
  2600     026D  0BC8               	decfsz	??_adc_init,f
  2601     026E  2A6D               	goto	u1987
  2602     026F  0BC9               	decfsz	??_adc_init+1,f
  2603     0270  2A6D               	goto	u1987
  2604     0271  2A72               	nop2
  2605     0272                     l1700:
  2606                           
  2607                           ;ADC.c: 12:   if(channel == 0)
  2608     0272  1283               	bcf	3,5	;RP0=0, select bank0
  2609     0273  1303               	bcf	3,6	;RP1=0, select bank0
  2610     0274  0844               	movf	adc_init@channel,w
  2611     0275  0445               	iorwf	adc_init@channel+1,w
  2612     0276  1D03               	btfss	3,2
  2613     0277  2A79               	goto	u1111
  2614     0278  2A7A               	goto	u1110
  2615     0279                     u1111:
  2616     0279  2A7D               	goto	l1704
  2617     027A                     u1110:
  2618     027A                     l1702:
  2619                           
  2620                           ;ADC.c: 13:   ADCON0bits.CHS = 0b0000;
  2621     027A  30C3               	movlw	-61
  2622     027B  059F               	andwf	31,f	;volatile
  2623     027C  2AC4               	goto	l1728
  2624     027D                     l1704:
  2625     027D  0344               	decf	adc_init@channel,w
  2626     027E  0445               	iorwf	adc_init@channel+1,w
  2627     027F  1D03               	btfss	3,2
  2628     0280  2A82               	goto	u1121
  2629     0281  2A83               	goto	u1120
  2630     0282                     u1121:
  2631     0282  2A88               	goto	l1708
  2632     0283                     u1120:
  2633     0283                     l1706:
  2634                           
  2635                           ;ADC.c: 15:   ADCON0bits.CHS = 0b0001;
  2636     0283  081F               	movf	31,w	;volatile
  2637     0284  39C3               	andlw	-61
  2638     0285  3804               	iorlw	4
  2639     0286  009F               	movwf	31	;volatile
  2640     0287  2AC4               	goto	l1728
  2641     0288                     l1708:
  2642     0288  3002               	movlw	2
  2643     0289  0644               	xorwf	adc_init@channel,w
  2644     028A  0445               	iorwf	adc_init@channel+1,w
  2645     028B  1D03               	btfss	3,2
  2646     028C  2A8E               	goto	u1131
  2647     028D  2A8F               	goto	u1130
  2648     028E                     u1131:
  2649     028E  2A94               	goto	l1712
  2650     028F                     u1130:
  2651     028F                     l1710:
  2652                           
  2653                           ;ADC.c: 17:   ADCON0bits.CHS = 0b0010;
  2654     028F  081F               	movf	31,w	;volatile
  2655     0290  39C3               	andlw	-61
  2656     0291  3808               	iorlw	8
  2657     0292  009F               	movwf	31	;volatile
  2658     0293  2AC4               	goto	l1728
  2659     0294                     l1712:
  2660     0294  3003               	movlw	3
  2661     0295  0644               	xorwf	adc_init@channel,w
  2662     0296  0445               	iorwf	adc_init@channel+1,w
  2663     0297  1D03               	btfss	3,2
  2664     0298  2A9A               	goto	u1141
  2665     0299  2A9B               	goto	u1140
  2666     029A                     u1141:
  2667     029A  2AA0               	goto	l1716
  2668     029B                     u1140:
  2669     029B                     l1714:
  2670                           
  2671                           ;ADC.c: 19:   ADCON0bits.CHS = 0b0011;
  2672     029B  081F               	movf	31,w	;volatile
  2673     029C  39C3               	andlw	-61
  2674     029D  380C               	iorlw	12
  2675     029E  009F               	movwf	31	;volatile
  2676     029F  2AC4               	goto	l1728
  2677     02A0                     l1716:
  2678     02A0  3004               	movlw	4
  2679     02A1  0644               	xorwf	adc_init@channel,w
  2680     02A2  0445               	iorwf	adc_init@channel+1,w
  2681     02A3  1D03               	btfss	3,2
  2682     02A4  2AA6               	goto	u1151
  2683     02A5  2AA7               	goto	u1150
  2684     02A6                     u1151:
  2685     02A6  2AAC               	goto	l1720
  2686     02A7                     u1150:
  2687     02A7                     l1718:
  2688                           
  2689                           ;ADC.c: 21:   ADCON0bits.CHS = 0b0100;
  2690     02A7  081F               	movf	31,w	;volatile
  2691     02A8  39C3               	andlw	-61
  2692     02A9  3810               	iorlw	16
  2693     02AA  009F               	movwf	31	;volatile
  2694     02AB  2AC4               	goto	l1728
  2695     02AC                     l1720:
  2696     02AC  3005               	movlw	5
  2697     02AD  0644               	xorwf	adc_init@channel,w
  2698     02AE  0445               	iorwf	adc_init@channel+1,w
  2699     02AF  1D03               	btfss	3,2
  2700     02B0  2AB2               	goto	u1161
  2701     02B1  2AB3               	goto	u1160
  2702     02B2                     u1161:
  2703     02B2  2AB8               	goto	l1724
  2704     02B3                     u1160:
  2705     02B3                     l1722:
  2706                           
  2707                           ;ADC.c: 23:   ADCON0bits.CHS = 0b0101;
  2708     02B3  081F               	movf	31,w	;volatile
  2709     02B4  39C3               	andlw	-61
  2710     02B5  3814               	iorlw	20
  2711     02B6  009F               	movwf	31	;volatile
  2712     02B7  2AC4               	goto	l1728
  2713     02B8                     l1724:
  2714     02B8  3006               	movlw	6
  2715     02B9  0644               	xorwf	adc_init@channel,w
  2716     02BA  0445               	iorwf	adc_init@channel+1,w
  2717     02BB  1D03               	btfss	3,2
  2718     02BC  2ABE               	goto	u1171
  2719     02BD  2ABF               	goto	u1170
  2720     02BE                     u1171:
  2721     02BE  2AC4               	goto	l132
  2722     02BF                     u1170:
  2723     02BF                     l1726:
  2724                           
  2725                           ;ADC.c: 25:   ADCON0bits.CHS = 0b0110;
  2726     02BF  081F               	movf	31,w	;volatile
  2727     02C0  39C3               	andlw	-61
  2728     02C1  3818               	iorlw	24
  2729     02C2  009F               	movwf	31	;volatile
  2730     02C3  2AC4               	goto	l1728
  2731     02C4                     l132:
  2732     02C4                     l1728:
  2733                           
  2734                           ;ADC.c: 28:  ADCON1bits.VCFG1 = 0;
  2735     02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2736     02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2737     02C6  129F               	bcf	31,5	;volatile
  2738     02C7                     l1730:
  2739                           
  2740                           ;ADC.c: 29:  ADCON1bits.VCFG0 = 0;
  2741     02C7  121F               	bcf	31,4	;volatile
  2742                           
  2743                           ;ADC.c: 32:  if(clock == 1)
  2744     02C8  1283               	bcf	3,5	;RP0=0, select bank0
  2745     02C9  1303               	bcf	3,6	;RP1=0, select bank0
  2746     02CA  0346               	decf	adc_init@clock,w
  2747     02CB  0447               	iorwf	adc_init@clock+1,w
  2748     02CC  1D03               	btfss	3,2
  2749     02CD  2ACF               	goto	u1181
  2750     02CE  2AD0               	goto	u1180
  2751     02CF                     u1181:
  2752     02CF  2AD3               	goto	l1734
  2753     02D0                     u1180:
  2754     02D0                     l1732:
  2755                           
  2756                           ;ADC.c: 33:      ADCON0bits.ADCS = 0b00;
  2757     02D0  303F               	movlw	-193
  2758     02D1  059F               	andwf	31,f	;volatile
  2759     02D2  2AF1               	goto	l1744
  2760     02D3                     l1734:
  2761     02D3  3004               	movlw	4
  2762     02D4  0646               	xorwf	adc_init@clock,w
  2763     02D5  0447               	iorwf	adc_init@clock+1,w
  2764     02D6  1D03               	btfss	3,2
  2765     02D7  2AD9               	goto	u1191
  2766     02D8  2ADA               	goto	u1190
  2767     02D9                     u1191:
  2768     02D9  2ADF               	goto	l1738
  2769     02DA                     u1190:
  2770     02DA                     l1736:
  2771                           
  2772                           ;ADC.c: 35:      ADCON0bits.ADCS = 0b01;
  2773     02DA  081F               	movf	31,w	;volatile
  2774     02DB  393F               	andlw	-193
  2775     02DC  3840               	iorlw	64
  2776     02DD  009F               	movwf	31	;volatile
  2777     02DE  2AF1               	goto	l1744
  2778     02DF                     l1738:
  2779     02DF  3008               	movlw	8
  2780     02E0  0646               	xorwf	adc_init@clock,w
  2781     02E1  0447               	iorwf	adc_init@clock+1,w
  2782     02E2  1903               	btfsc	3,2
  2783     02E3  2AE5               	goto	u1201
  2784     02E4  2AE6               	goto	u1200
  2785     02E5                     u1201:
  2786     02E5  2AED               	goto	l1742
  2787     02E6                     u1200:
  2788     02E6                     l1740:
  2789     02E6  3014               	movlw	20
  2790     02E7  0646               	xorwf	adc_init@clock,w
  2791     02E8  0447               	iorwf	adc_init@clock+1,w
  2792     02E9  1D03               	btfss	3,2
  2793     02EA  2AEC               	goto	u1211
  2794     02EB  2AED               	goto	u1210
  2795     02EC                     u1211:
  2796     02EC  2AF1               	goto	l1744
  2797     02ED                     u1210:
  2798     02ED                     l1742:
  2799                           
  2800                           ;ADC.c: 37:      ADCON0bits.ADCS = 0b10;
  2801     02ED  081F               	movf	31,w	;volatile
  2802     02EE  393F               	andlw	-193
  2803     02EF  3880               	iorlw	128
  2804     02F0  009F               	movwf	31	;volatile
  2805     02F1                     l1744:
  2806                           
  2807                           ;ADC.c: 40:  PIE1bits.ADIE = 1;
  2808     02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2809     02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2810     02F3  170C               	bsf	12,6	;volatile
  2811     02F4                     l1746:
  2812                           
  2813                           ;ADC.c: 41:  PIR1bits.ADIF = 0;
  2814     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2815     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2816     02F6  130C               	bcf	12,6	;volatile
  2817     02F7                     l1748:
  2818                           
  2819                           ;ADC.c: 44:  ADCON1bits.ADFM = 0;
  2820     02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2821     02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2822     02F9  139F               	bcf	31,7	;volatile
  2823     02FA                     l145:
  2824     02FA  0008               	return
  2825     02FB                     __end_of_adc_init:
  2826                           
  2827                           	psect	text9
  2828     0772                     __ptext9:	
  2829 ;; *************** function _UART_TX_config *****************
  2830 ;; Defined at:
  2831 ;;		line 76 in file "Usart.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  baudrate        2   36[BANK0 ] unsigned int 
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, status,2, status,0
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2845 ;;      Params:         0       2       0       0       0
  2846 ;;      Locals:         0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0
  2848 ;;      Totals:         0       2       0       0       0
  2849 ;;Total ram usage:        2 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 3
  2852 ;; This function calls:
  2853 ;;		Nothing
  2854 ;; This function is called by:
  2855 ;;		_setup
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859     0772                     _UART_TX_config:	
  2860                           ;psect for function _UART_TX_config
  2861                           
  2862     0772                     l1786:	
  2863                           ;incstack = 0
  2864                           ; Regs used in _UART_TX_config: [wreg+status,2+status,0]
  2865                           
  2866                           
  2867                           ;Usart.c: 85:     TXSTAbits.BRGH = 0;
  2868     0772  1683               	bsf	3,5	;RP0=1, select bank1
  2869     0773  1303               	bcf	3,6	;RP1=0, select bank1
  2870     0774  1118               	bcf	24,2	;volatile
  2871                           
  2872                           ;Usart.c: 86:     BAUDCTLbits.BRG16 = 0;
  2873     0775  1683               	bsf	3,5	;RP0=1, select bank3
  2874     0776  1703               	bsf	3,6	;RP1=1, select bank3
  2875     0777  1187               	bcf	7,3	;volatile
  2876     0778                     l1788:
  2877                           
  2878                           ;Usart.c: 89:     if(baudrate == 1200){
  2879     0778  30B0               	movlw	176
  2880     0779  1283               	bcf	3,5	;RP0=0, select bank0
  2881     077A  1303               	bcf	3,6	;RP1=0, select bank0
  2882     077B  0644               	xorwf	UART_TX_config@baudrate,w
  2883     077C  3004               	movlw	4
  2884     077D  1903               	skipnz
  2885     077E  0645               	xorwf	UART_TX_config@baudrate+1,w
  2886     077F  1D03               	btfss	3,2
  2887     0780  2F82               	goto	u1251
  2888     0781  2F83               	goto	u1250
  2889     0782                     u1251:
  2890     0782  2F89               	goto	l1794
  2891     0783                     u1250:
  2892     0783                     l1790:
  2893                           
  2894                           ;Usart.c: 90:         SPBRG = 103;
  2895     0783  3067               	movlw	103
  2896     0784  1683               	bsf	3,5	;RP0=1, select bank1
  2897     0785  1303               	bcf	3,6	;RP1=0, select bank1
  2898     0786  0099               	movwf	25	;volatile
  2899     0787                     l1792:
  2900                           
  2901                           ;Usart.c: 91:         SPBRGH = 0;
  2902     0787  019A               	clrf	26	;volatile
  2903                           
  2904                           ;Usart.c: 92:     }
  2905     0788  2FA5               	goto	l1806
  2906     0789                     l1794:
  2907     0789  3060               	movlw	96
  2908     078A  0644               	xorwf	UART_TX_config@baudrate,w
  2909     078B  3009               	movlw	9
  2910     078C  1903               	skipnz
  2911     078D  0645               	xorwf	UART_TX_config@baudrate+1,w
  2912     078E  1D03               	btfss	3,2
  2913     078F  2F91               	goto	u1261
  2914     0790  2F92               	goto	u1260
  2915     0791                     u1261:
  2916     0791  2F97               	goto	l1800
  2917     0792                     u1260:
  2918     0792                     l1796:
  2919                           
  2920                           ;Usart.c: 94:         SPBRG = 51;
  2921     0792  3033               	movlw	51
  2922     0793  1683               	bsf	3,5	;RP0=1, select bank1
  2923     0794  1303               	bcf	3,6	;RP1=0, select bank1
  2924     0795  0099               	movwf	25	;volatile
  2925     0796  2F87               	goto	l1792
  2926     0797                     l1800:
  2927     0797  3080               	movlw	128
  2928     0798  0644               	xorwf	UART_TX_config@baudrate,w
  2929     0799  3025               	movlw	37
  2930     079A  1903               	skipnz
  2931     079B  0645               	xorwf	UART_TX_config@baudrate+1,w
  2932     079C  1D03               	btfss	3,2
  2933     079D  2F9F               	goto	u1271
  2934     079E  2FA0               	goto	u1270
  2935     079F                     u1271:
  2936     079F  2FA5               	goto	l1806
  2937     07A0                     u1270:
  2938     07A0                     l1802:
  2939                           
  2940                           ;Usart.c: 98:         SPBRG = 12;
  2941     07A0  300C               	movlw	12
  2942     07A1  1683               	bsf	3,5	;RP0=1, select bank1
  2943     07A2  1303               	bcf	3,6	;RP1=0, select bank1
  2944     07A3  0099               	movwf	25	;volatile
  2945     07A4  2F87               	goto	l1792
  2946     07A5                     l1806:
  2947                           
  2948                           ;Usart.c: 109:         RCSTAbits.SPEN = 1;
  2949     07A5  1283               	bcf	3,5	;RP0=0, select bank0
  2950     07A6  1798               	bsf	24,7	;volatile
  2951     07A7                     l1808:
  2952                           
  2953                           ;Usart.c: 110:         TXSTAbits.SYNC = 0;
  2954     07A7  1683               	bsf	3,5	;RP0=1, select bank1
  2955     07A8  1303               	bcf	3,6	;RP1=0, select bank1
  2956     07A9  1218               	bcf	24,4	;volatile
  2957     07AA                     l1810:
  2958                           
  2959                           ;Usart.c: 119:         TXSTAbits.TX9 = 0;
  2960     07AA  1318               	bcf	24,6	;volatile
  2961     07AB                     l1812:
  2962                           
  2963                           ;Usart.c: 127:         TXSTAbits.TXEN = 1;
  2964     07AB  1698               	bsf	24,5	;volatile
  2965     07AC                     l1814:
  2966                           
  2967                           ;Usart.c: 137:         PIR1bits.TXIF = 0;
  2968     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  2969     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  2970     07AE  120C               	bcf	12,4	;volatile
  2971     07AF                     l303:
  2972     07AF  0008               	return
  2973     07B0                     __end_of_UART_TX_config:
  2974                           
  2975                           	psect	text10
  2976     0733                     __ptext10:	
  2977 ;; *************** function _UART_RX_config *****************
  2978 ;; Defined at:
  2979 ;;		line 2 in file "Usart.c"
  2980 ;; Parameters:    Size  Location     Type
  2981 ;;  baudrate        2   36[BANK0 ] unsigned int 
  2982 ;; Auto vars:     Size  Location     Type
  2983 ;;		None
  2984 ;; Return value:  Size  Location     Type
  2985 ;;                  1    wreg      void 
  2986 ;; Registers used:
  2987 ;;		wreg, status,2, status,0
  2988 ;; Tracked objects:
  2989 ;;		On entry : 0/0
  2990 ;;		On exit  : 0/0
  2991 ;;		Unchanged: 0/0
  2992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2993 ;;      Params:         0       2       0       0       0
  2994 ;;      Locals:         0       0       0       0       0
  2995 ;;      Temps:          0       0       0       0       0
  2996 ;;      Totals:         0       2       0       0       0
  2997 ;;Total ram usage:        2 bytes
  2998 ;; Hardware stack levels used: 1
  2999 ;; Hardware stack levels required when called: 3
  3000 ;; This function calls:
  3001 ;;		Nothing
  3002 ;; This function is called by:
  3003 ;;		_setup
  3004 ;; This function uses a non-reentrant model
  3005 ;;
  3006                           
  3007     0733                     _UART_RX_config:	
  3008                           ;psect for function _UART_RX_config
  3009                           
  3010     0733                     l1752:	
  3011                           ;incstack = 0
  3012                           ; Regs used in _UART_RX_config: [wreg+status,2+status,0]
  3013                           
  3014                           
  3015                           ;Usart.c: 9:     TXSTAbits.BRGH = 0;
  3016     0733  1683               	bsf	3,5	;RP0=1, select bank1
  3017     0734  1303               	bcf	3,6	;RP1=0, select bank1
  3018     0735  1118               	bcf	24,2	;volatile
  3019                           
  3020                           ;Usart.c: 10:     BAUDCTLbits.BRG16 = 0;
  3021     0736  1683               	bsf	3,5	;RP0=1, select bank3
  3022     0737  1703               	bsf	3,6	;RP1=1, select bank3
  3023     0738  1187               	bcf	7,3	;volatile
  3024     0739                     l1754:
  3025                           
  3026                           ;Usart.c: 13:     if(baudrate == 1200){
  3027     0739  30B0               	movlw	176
  3028     073A  1283               	bcf	3,5	;RP0=0, select bank0
  3029     073B  1303               	bcf	3,6	;RP1=0, select bank0
  3030     073C  0644               	xorwf	UART_RX_config@baudrate,w
  3031     073D  3004               	movlw	4
  3032     073E  1903               	skipnz
  3033     073F  0645               	xorwf	UART_RX_config@baudrate+1,w
  3034     0740  1D03               	btfss	3,2
  3035     0741  2F43               	goto	u1221
  3036     0742  2F44               	goto	u1220
  3037     0743                     u1221:
  3038     0743  2F4A               	goto	l1760
  3039     0744                     u1220:
  3040     0744                     l1756:
  3041                           
  3042                           ;Usart.c: 14:         SPBRG = 103;
  3043     0744  3067               	movlw	103
  3044     0745  1683               	bsf	3,5	;RP0=1, select bank1
  3045     0746  1303               	bcf	3,6	;RP1=0, select bank1
  3046     0747  0099               	movwf	25	;volatile
  3047     0748                     l1758:
  3048                           
  3049                           ;Usart.c: 15:         SPBRGH = 0;
  3050     0748  019A               	clrf	26	;volatile
  3051                           
  3052                           ;Usart.c: 16:     }
  3053     0749  2F66               	goto	l1772
  3054     074A                     l1760:
  3055     074A  3060               	movlw	96
  3056     074B  0644               	xorwf	UART_RX_config@baudrate,w
  3057     074C  3009               	movlw	9
  3058     074D  1903               	skipnz
  3059     074E  0645               	xorwf	UART_RX_config@baudrate+1,w
  3060     074F  1D03               	btfss	3,2
  3061     0750  2F52               	goto	u1231
  3062     0751  2F53               	goto	u1230
  3063     0752                     u1231:
  3064     0752  2F58               	goto	l1766
  3065     0753                     u1230:
  3066     0753                     l1762:
  3067                           
  3068                           ;Usart.c: 18:         SPBRG = 51;
  3069     0753  3033               	movlw	51
  3070     0754  1683               	bsf	3,5	;RP0=1, select bank1
  3071     0755  1303               	bcf	3,6	;RP1=0, select bank1
  3072     0756  0099               	movwf	25	;volatile
  3073     0757  2F48               	goto	l1758
  3074     0758                     l1766:
  3075     0758  3080               	movlw	128
  3076     0759  0644               	xorwf	UART_RX_config@baudrate,w
  3077     075A  3025               	movlw	37
  3078     075B  1903               	skipnz
  3079     075C  0645               	xorwf	UART_RX_config@baudrate+1,w
  3080     075D  1D03               	btfss	3,2
  3081     075E  2F60               	goto	u1241
  3082     075F  2F61               	goto	u1240
  3083     0760                     u1241:
  3084     0760  2F66               	goto	l1772
  3085     0761                     u1240:
  3086     0761                     l1768:
  3087                           
  3088                           ;Usart.c: 22:         SPBRG = 12;
  3089     0761  300C               	movlw	12
  3090     0762  1683               	bsf	3,5	;RP0=1, select bank1
  3091     0763  1303               	bcf	3,6	;RP1=0, select bank1
  3092     0764  0099               	movwf	25	;volatile
  3093     0765  2F48               	goto	l1758
  3094     0766                     l1772:
  3095                           
  3096                           ;Usart.c: 32:     RCSTAbits.SPEN = 1;
  3097     0766  1283               	bcf	3,5	;RP0=0, select bank0
  3098     0767  1798               	bsf	24,7	;volatile
  3099     0768                     l1774:
  3100                           
  3101                           ;Usart.c: 33:     TXSTAbits.SYNC = 0;
  3102     0768  1683               	bsf	3,5	;RP0=1, select bank1
  3103     0769  1303               	bcf	3,6	;RP1=0, select bank1
  3104     076A  1218               	bcf	24,4	;volatile
  3105     076B                     l1776:
  3106                           
  3107                           ;Usart.c: 41:     PIE1bits.RCIE = 1;
  3108     076B  168C               	bsf	12,5	;volatile
  3109     076C                     l1778:
  3110                           
  3111                           ;Usart.c: 42:     PIR1bits.RCIF = 1;
  3112     076C  1283               	bcf	3,5	;RP0=0, select bank0
  3113     076D  1303               	bcf	3,6	;RP1=0, select bank0
  3114     076E  168C               	bsf	12,5	;volatile
  3115     076F                     l1780:
  3116                           
  3117                           ;Usart.c: 47:     RCSTAbits.RX9 = 0;
  3118     076F  1318               	bcf	24,6	;volatile
  3119     0770                     l1782:
  3120                           
  3121                           ;Usart.c: 53:     RCSTAbits.CREN = 1;
  3122     0770  1618               	bsf	24,4	;volatile
  3123     0771                     l295:
  3124     0771  0008               	return
  3125     0772                     __end_of_UART_RX_config:
  3126                           
  3127                           	psect	text11
  3128     06EE                     __ptext11:	
  3129 ;; *************** function _MENU *****************
  3130 ;; Defined at:
  3131 ;;		line 155 in file "LCD_MT.c"
  3132 ;; Parameters:    Size  Location     Type
  3133 ;;		None
  3134 ;; Auto vars:     Size  Location     Type
  3135 ;;		None
  3136 ;; Return value:  Size  Location     Type
  3137 ;;                  1    wreg      void 
  3138 ;; Registers used:
  3139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3140 ;; Tracked objects:
  3141 ;;		On entry : 0/0
  3142 ;;		On exit  : 0/0
  3143 ;;		Unchanged: 0/0
  3144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3145 ;;      Params:         0       0       0       0       0
  3146 ;;      Locals:         0       0       0       0       0
  3147 ;;      Temps:          0       0       2       0       0
  3148 ;;      Totals:         0       0       2       0       0
  3149 ;;Total ram usage:        2 bytes
  3150 ;; Hardware stack levels used: 1
  3151 ;; Hardware stack levels required when called: 6
  3152 ;; This function calls:
  3153 ;;		_UART_write_string
  3154 ;;		_contador
  3155 ;;		_voltaje
  3156 ;; This function is called by:
  3157 ;;		_main
  3158 ;; This function uses a non-reentrant model
  3159 ;;
  3160                           
  3161     06EE                     _MENU:	
  3162                           ;psect for function _MENU
  3163                           
  3164     06EE                     l2000:	
  3165                           ;incstack = 0
  3166                           ; Regs used in _MENU: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3167                           
  3168                           
  3169                           ;LCD_MT.c: 156:     UART_write_string(menu);
  3170     06EE  3090               	movlw	(low (_menu| (0+256)))& (0+255)
  3171     06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3172     06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3173     06F1  00C5               	movwf	UART_write_string@a
  3174     06F2  3001               	movlw	1
  3175     06F3  00C6               	movwf	UART_write_string@a+1
  3176     06F4  120A  118A  2618  120A  118A  	fcall	_UART_write_string
  3177     06F9                     l2002:
  3178                           
  3179                           ;LCD_MT.c: 157:     UART_get = '\0';
  3180     06F9  1683               	bsf	3,5	;RP0=1, select bank1
  3181     06FA  1303               	bcf	3,6	;RP1=0, select bank1
  3182     06FB  01C0               	clrf	_UART_get^(0+128)
  3183     06FC                     l2004:	
  3184                           ;LCD_MT.c: 158:     while(UART_get == '\0');
  3185                           
  3186     06FC  0840               	movf	_UART_get^(0+128),w
  3187     06FD  1903               	btfsc	3,2
  3188     06FE  2F00               	goto	u1591
  3189     06FF  2F01               	goto	u1590
  3190     0700                     u1591:
  3191     0700  2EFC               	goto	l2004
  3192     0701                     u1590:
  3193     0701  2F22               	goto	l2014
  3194     0702                     l2006:
  3195                           
  3196                           ;LCD_MT.c: 162:             voltaje();
  3197     0702  120A  158A  26E3  120A  118A  	fcall	_voltaje
  3198                           
  3199                           ;LCD_MT.c: 163:             break;
  3200     0707  2F32               	goto	l98
  3201     0708                     l2008:
  3202                           
  3203                           ;LCD_MT.c: 166:             contador();
  3204     0708  120A  158A  278D  120A  118A  	fcall	_contador
  3205                           
  3206                           ;LCD_MT.c: 167:             break;
  3207     070D  2F32               	goto	l98
  3208     070E                     l2010:
  3209                           
  3210                           ;LCD_MT.c: 170:             UART_write_string("No existe esa opcion, presione enter para
      +                           continuar \r");
  3211     070E  300B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3212     070F  1283               	bcf	3,5	;RP0=0, select bank0
  3213     0710  1303               	bcf	3,6	;RP1=0, select bank0
  3214     0711  00C5               	movwf	UART_write_string@a
  3215     0712  3080               	movlw	128
  3216     0713  00C6               	movwf	UART_write_string@a+1
  3217     0714  120A  118A  2618  120A  118A  	fcall	_UART_write_string
  3218     0719                     l2012:	
  3219                           ;LCD_MT.c: 171:             while(RCREG != 13);
  3220                           
  3221     0719  300D               	movlw	13
  3222     071A  1283               	bcf	3,5	;RP0=0, select bank0
  3223     071B  1303               	bcf	3,6	;RP1=0, select bank0
  3224     071C  061A               	xorwf	26,w	;volatile
  3225     071D  1D03               	btfss	3,2
  3226     071E  2F20               	goto	u1601
  3227     071F  2F21               	goto	u1600
  3228     0720                     u1601:
  3229     0720  2F19               	goto	l2012
  3230     0721                     u1600:
  3231     0721  2F32               	goto	l98
  3232     0722                     l2014:
  3233     0722  0840               	movf	_UART_get^(0+128),w
  3234     0723  00A1               	movwf	??_MENU^(0+128)
  3235     0724  01A2               	clrf	(??_MENU^(0+128)+1)
  3236                           
  3237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3238                           ; Switch size 1, requested type "simple"
  3239                           ; Number of cases is 1, Range of values is 0 to 0
  3240                           ; switch strategies available:
  3241                           ; Name         Instructions Cycles
  3242                           ; simple_byte            4     3 (average)
  3243                           ; direct_byte           11     8 (fixed)
  3244                           ; jumptable            260     6 (fixed)
  3245                           ;	Chosen strategy is simple_byte
  3246     0725  0822               	movf	(??_MENU+1)^(0+128),w
  3247     0726  3A00               	xorlw	0	; case 0
  3248     0727  1903               	skipnz
  3249     0728  2F2A               	goto	l2292
  3250     0729  2F0E               	goto	l2010
  3251     072A                     l2292:
  3252                           
  3253                           ; Switch size 1, requested type "simple"
  3254                           ; Number of cases is 2, Range of values is 49 to 50
  3255                           ; switch strategies available:
  3256                           ; Name         Instructions Cycles
  3257                           ; simple_byte            7     4 (average)
  3258                           ; direct_byte           17    11 (fixed)
  3259                           ; jumptable            263     9 (fixed)
  3260                           ;	Chosen strategy is simple_byte
  3261     072A  0821               	movf	??_MENU^(0+128),w
  3262     072B  3A31               	xorlw	49	; case 49
  3263     072C  1903               	skipnz
  3264     072D  2F02               	goto	l2006
  3265     072E  3A03               	xorlw	3	; case 50
  3266     072F  1903               	skipnz
  3267     0730  2F08               	goto	l2008
  3268     0731  2F0E               	goto	l2010
  3269     0732                     l98:
  3270     0732  0008               	return
  3271     0733                     __end_of_MENU:
  3272                           
  3273                           	psect	text12
  3274     0EE3                     __ptext12:	
  3275 ;; *************** function _voltaje *****************
  3276 ;; Defined at:
  3277 ;;		line 177 in file "LCD_MT.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3291 ;;      Params:         0       0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0
  3293 ;;      Temps:          0       0       0       0       0
  3294 ;;      Totals:         0       0       0       0       0
  3295 ;;Total ram usage:        0 bytes
  3296 ;; Hardware stack levels used: 1
  3297 ;; Hardware stack levels required when called: 5
  3298 ;; This function calls:
  3299 ;;		_UART_write_char
  3300 ;;		_UART_write_string
  3301 ;; This function is called by:
  3302 ;;		_MENU
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306     0EE3                     _voltaje:	
  3307                           ;psect for function _voltaje
  3308                           
  3309     0EE3                     l1818:	
  3310                           ;incstack = 0
  3311                           ; Regs used in _voltaje: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3312                           
  3313                           
  3314                           ;LCD_MT.c: 178:     UART_write_string(strADC);
  3315     0EE3  30C1               	movlw	(low (_strADC| 0))& (0+255)
  3316     0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  3317     0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  3318     0EE6  00C5               	movwf	UART_write_string@a
  3319     0EE7  3000               	movlw	0
  3320     0EE8  00C6               	movwf	UART_write_string@a+1
  3321     0EE9  120A  118A  2618  120A  158A  	fcall	_UART_write_string
  3322     0EEE                     l1820:
  3323                           
  3324                           ;LCD_MT.c: 179:     UART_write_char('\n');
  3325     0EEE  300A               	movlw	10
  3326     0EEF  120A  158A  26C6  120A  158A  	fcall	_UART_write_char
  3327     0EF4                     l101:
  3328     0EF4  0008               	return
  3329     0EF5                     __end_of_voltaje:
  3330                           
  3331                           	psect	text13
  3332     0F8D                     __ptext13:	
  3333 ;; *************** function _contador *****************
  3334 ;; Defined at:
  3335 ;;		line 182 in file "LCD_MT.c"
  3336 ;; Parameters:    Size  Location     Type
  3337 ;;		None
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;		None
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  1    wreg      void 
  3342 ;; Registers used:
  3343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3349 ;;      Params:         0       0       0       0       0
  3350 ;;      Locals:         0       0       0       0       0
  3351 ;;      Temps:          0       0       1       0       0
  3352 ;;      Totals:         0       0       1       0       0
  3353 ;;Total ram usage:        1 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 5
  3356 ;; This function calls:
  3357 ;;		_UART_write_char
  3358 ;;		_UART_write_string
  3359 ;; This function is called by:
  3360 ;;		_MENU
  3361 ;; This function uses a non-reentrant model
  3362 ;;
  3363                           
  3364     0F8D                     _contador:	
  3365                           ;psect for function _contador
  3366                           
  3367     0F8D                     l1824:	
  3368                           ;incstack = 0
  3369                           ; Regs used in _contador: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3370                           
  3371                           
  3372                           ;LCD_MT.c: 183:     UART_write_string("Ingrese su caracter: ");
  3373     0F8D  3041               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  3374     0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  3375     0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  3376     0F90  00C5               	movwf	UART_write_string@a
  3377     0F91  3080               	movlw	128
  3378     0F92  00C6               	movwf	UART_write_string@a+1
  3379     0F93  120A  118A  2618  120A  158A  	fcall	_UART_write_string
  3380     0F98                     l1826:
  3381                           
  3382                           ;LCD_MT.c: 184:     UART_get = '\0';
  3383     0F98  1683               	bsf	3,5	;RP0=1, select bank1
  3384     0F99  1303               	bcf	3,6	;RP1=0, select bank1
  3385     0F9A  01C0               	clrf	_UART_get^(0+128)
  3386     0F9B                     l1828:	
  3387                           ;LCD_MT.c: 185:     while(UART_get == '\0');
  3388                           
  3389     0F9B  0840               	movf	_UART_get^(0+128),w
  3390     0F9C  1903               	btfsc	3,2
  3391     0F9D  2F9F               	goto	u1281
  3392     0F9E  2FA0               	goto	u1280
  3393     0F9F                     u1281:
  3394     0F9F  2F9B               	goto	l1828
  3395     0FA0                     u1280:
  3396     0FA0                     l1830:
  3397                           
  3398                           ;LCD_MT.c: 186:     UART_write_char(UART_get);
  3399     0FA0  0840               	movf	_UART_get^(0+128),w
  3400     0FA1  120A  158A  26C6  120A  158A  	fcall	_UART_write_char
  3401                           
  3402                           ;LCD_MT.c: 187:     UART_write_char('\n');
  3403     0FA6  300A               	movlw	10
  3404     0FA7  120A  158A  26C6  120A  158A  	fcall	_UART_write_char
  3405     0FAC                     l1832:
  3406                           
  3407                           ;LCD_MT.c: 188:     if(UART_get == '+'){
  3408     0FAC  302B               	movlw	43
  3409     0FAD  1683               	bsf	3,5	;RP0=1, select bank1
  3410     0FAE  1303               	bcf	3,6	;RP1=0, select bank1
  3411     0FAF  0640               	xorwf	_UART_get^(0+128),w
  3412     0FB0  1D03               	btfss	3,2
  3413     0FB1  2FB3               	goto	u1291
  3414     0FB2  2FB4               	goto	u1290
  3415     0FB3                     u1291:
  3416     0FB3  2FBB               	goto	l1836
  3417     0FB4                     u1290:
  3418     0FB4                     l1834:
  3419                           
  3420                           ;LCD_MT.c: 189:          PORTB++;
  3421     0FB4  3001               	movlw	1
  3422     0FB5  00A0               	movwf	??_contador^(0+128)
  3423     0FB6  0820               	movf	??_contador^(0+128),w
  3424     0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  3425     0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  3426     0FB9  0786               	addwf	6,f	;volatile
  3427                           
  3428                           ;LCD_MT.c: 190:     }
  3429     0FBA  2FC5               	goto	l110
  3430     0FBB                     l1836:
  3431     0FBB  302D               	movlw	45
  3432     0FBC  0640               	xorwf	_UART_get^(0+128),w
  3433     0FBD  1D03               	btfss	3,2
  3434     0FBE  2FC0               	goto	u1301
  3435     0FBF  2FC1               	goto	u1300
  3436     0FC0                     u1301:
  3437     0FC0  2FC5               	goto	l110
  3438     0FC1                     u1300:
  3439     0FC1                     l1838:
  3440                           
  3441                           ;LCD_MT.c: 192:         PORTB--;
  3442     0FC1  3001               	movlw	1
  3443     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  3444     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  3445     0FC4  0286               	subwf	6,f	;volatile
  3446     0FC5                     l110:
  3447     0FC5  0008               	return
  3448     0FC6                     __end_of_contador:
  3449                           
  3450                           	psect	text14
  3451     0618                     __ptext14:	
  3452 ;; *************** function _UART_write_string *****************
  3453 ;; Defined at:
  3454 ;;		line 148 in file "Usart.c"
  3455 ;; Parameters:    Size  Location     Type
  3456 ;;  a               2   37[BANK0 ] PTR unsigned char 
  3457 ;;		 -> STR_4(22), STR_3(54), menu(44), strADC(4), 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  i               2   42[BANK0 ] int 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      void 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3469 ;;      Params:         0       2       0       0       0
  3470 ;;      Locals:         0       2       0       0       0
  3471 ;;      Temps:          0       3       0       0       0
  3472 ;;      Totals:         0       7       0       0       0
  3473 ;;Total ram usage:        7 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; Hardware stack levels required when called: 4
  3476 ;; This function calls:
  3477 ;;		_UART_write_char
  3478 ;; This function is called by:
  3479 ;;		_MENU
  3480 ;;		_voltaje
  3481 ;;		_contador
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485     0618                     _UART_write_string:	
  3486                           ;psect for function _UART_write_string
  3487                           
  3488     0618                     l1624:	
  3489                           ;incstack = 0
  3490                           ; Regs used in _UART_write_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3491                           
  3492                           
  3493                           ;Usart.c: 149:     int i;;Usart.c: 151:     for (i = 0; a[i] != '\0'; i++){
  3494     0618  1283               	bcf	3,5	;RP0=0, select bank0
  3495     0619  1303               	bcf	3,6	;RP1=0, select bank0
  3496     061A  01CA               	clrf	UART_write_string@i
  3497     061B  01CB               	clrf	UART_write_string@i+1
  3498     061C  2E45               	goto	l1630
  3499     061D                     l308:
  3500     061D  1E0C               	btfss	12,4	;volatile
  3501     061E  2E20               	goto	u991
  3502     061F  2E21               	goto	u990
  3503     0620                     u991:
  3504     0620  2E1D               	goto	l308
  3505     0621                     u990:
  3506     0621                     l1626:
  3507                           
  3508                           ;Usart.c: 153:         UART_write_char(a[i]);
  3509     0621  084A               	movf	UART_write_string@i,w
  3510     0622  0745               	addwf	UART_write_string@a,w
  3511     0623  00C8               	movwf	??_UART_write_string+1
  3512     0624  0846               	movf	UART_write_string@a+1,w
  3513     0625  00C7               	movwf	??_UART_write_string
  3514     0626  1803               	skipnc
  3515     0627  0AC7               	incf	??_UART_write_string,f
  3516     0628  1FCA               	btfss	UART_write_string@i,7
  3517     0629  2E2B               	goto	u1000
  3518     062A  03C7               	decf	??_UART_write_string,f
  3519     062B                     u1000:
  3520     062B  1283               	bcf	3,5	;RP0=0, select bank0
  3521     062C  1303               	bcf	3,6	;RP1=0, select bank0
  3522     062D  0847               	movf	??_UART_write_string,w
  3523     062E  00C9               	movwf	??_UART_write_string+2
  3524     062F  0849               	movf	??_UART_write_string+2,w
  3525     0630  00FF               	movwf	btemp+1
  3526     0631  0848               	movf	??_UART_write_string+1,w
  3527     0632  0084               	movwf	4
  3528     0633  120A  118A  237D  120A  118A  	fcall	stringtab
  3529     0638  120A  158A  26C6  120A  118A  	fcall	_UART_write_char
  3530     063D                     l1628:
  3531                           
  3532                           ;Usart.c: 154:     }
  3533     063D  3001               	movlw	1
  3534     063E  1283               	bcf	3,5	;RP0=0, select bank0
  3535     063F  1303               	bcf	3,6	;RP1=0, select bank0
  3536     0640  07CA               	addwf	UART_write_string@i,f
  3537     0641  1803               	skipnc
  3538     0642  0ACB               	incf	UART_write_string@i+1,f
  3539     0643  3000               	movlw	0
  3540     0644  07CB               	addwf	UART_write_string@i+1,f
  3541     0645                     l1630:
  3542     0645  084A               	movf	UART_write_string@i,w
  3543     0646  0745               	addwf	UART_write_string@a,w
  3544     0647  00C8               	movwf	??_UART_write_string+1
  3545     0648  0846               	movf	UART_write_string@a+1,w
  3546     0649  00C7               	movwf	??_UART_write_string
  3547     064A  1803               	skipnc
  3548     064B  0AC7               	incf	??_UART_write_string,f
  3549     064C  1FCA               	btfss	UART_write_string@i,7
  3550     064D  2E4F               	goto	u1010
  3551     064E  03C7               	decf	??_UART_write_string,f
  3552     064F                     u1010:
  3553     064F  1283               	bcf	3,5	;RP0=0, select bank0
  3554     0650  1303               	bcf	3,6	;RP1=0, select bank0
  3555     0651  0847               	movf	??_UART_write_string,w
  3556     0652  00C9               	movwf	??_UART_write_string+2
  3557     0653  0849               	movf	??_UART_write_string+2,w
  3558     0654  00FF               	movwf	btemp+1
  3559     0655  0848               	movf	??_UART_write_string+1,w
  3560     0656  0084               	movwf	4
  3561     0657  120A  118A  237D  120A  118A  	fcall	stringtab
  3562     065C  3A00               	xorlw	0
  3563     065D  1D03               	skipz
  3564     065E  2E60               	goto	u1021
  3565     065F  2E61               	goto	u1020
  3566     0660                     u1021:
  3567     0660  2E1D               	goto	l308
  3568     0661                     u1020:
  3569     0661                     l312:
  3570     0661  0008               	return
  3571     0662                     __end_of_UART_write_string:
  3572                           
  3573                           	psect	text15
  3574     0EC6                     __ptext15:	
  3575 ;; *************** function _UART_write_char *****************
  3576 ;; Defined at:
  3577 ;;		line 159 in file "Usart.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  c               1    wreg     unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  c               1   36[BANK0 ] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       0       0       0       0
  3592 ;;      Locals:         0       1       0       0       0
  3593 ;;      Temps:          0       0       0       0       0
  3594 ;;      Totals:         0       1       0       0       0
  3595 ;;Total ram usage:        1 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 3
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_voltaje
  3602 ;;		_contador
  3603 ;;		_UART_write_string
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607     0EC6                     _UART_write_char:	
  3608                           ;psect for function _UART_write_char
  3609                           
  3610                           
  3611                           ;incstack = 0
  3612                           ; Regs used in _UART_write_char: [wreg]
  3613                           ;UART_write_char@c stored from wreg
  3614     0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  3615     0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  3616     0EC8  00C4               	movwf	UART_write_char@c
  3617     0EC9                     l1620:
  3618                           
  3619                           ;Usart.c: 160:         TXREG = c;
  3620     0EC9  0844               	movf	UART_write_char@c,w
  3621     0ECA  0099               	movwf	25	;volatile
  3622     0ECB                     l315:
  3623     0ECB  0008               	return
  3624     0ECC                     __end_of_UART_write_char:
  3625                           
  3626                           	psect	text16
  3627     0528                     __ptext16:	
  3628 ;; *************** function _Lcd_Write_String *****************
  3629 ;; Defined at:
  3630 ;;		line 66 in file "LCD.c"
  3631 ;; Parameters:    Size  Location     Type
  3632 ;;  a               2   39[BANK0 ] PTR unsigned char 
  3633 ;;		 -> strADC(4), STR_1(8), 
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;  i               2    0[BANK1 ] int 
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3645 ;;      Params:         0       2       0       0       0
  3646 ;;      Locals:         0       0       2       0       0
  3647 ;;      Temps:          0       3       0       0       0
  3648 ;;      Totals:         0       5       2       0       0
  3649 ;;Total ram usage:        7 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 5
  3652 ;; This function calls:
  3653 ;;		_Lcd_Write_Char
  3654 ;; This function is called by:
  3655 ;;		_main
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659     0528                     _Lcd_Write_String:	
  3660                           ;psect for function _Lcd_Write_String
  3661                           
  3662     0528                     l2036:	
  3663                           ;incstack = 0
  3664                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3665                           
  3666                           
  3667                           ;LCD.c: 67:     int i;;LCD.c: 68:     for (i = 0; a[i] != '\0'; i++)
  3668     0528  1683               	bsf	3,5	;RP0=1, select bank1
  3669     0529  1303               	bcf	3,6	;RP1=0, select bank1
  3670     052A  01A0               	clrf	Lcd_Write_String@i^(0+128)
  3671     052B  01A1               	clrf	(Lcd_Write_String@i+1)^(0+128)
  3672     052C  2D59               	goto	l2042
  3673     052D                     l2038:
  3674                           
  3675                           ;LCD.c: 69:         Lcd_Write_Char(a[i]);
  3676     052D  1683               	bsf	3,5	;RP0=1, select bank1
  3677     052E  1303               	bcf	3,6	;RP1=0, select bank1
  3678     052F  0820               	movf	Lcd_Write_String@i^(0+128),w
  3679     0530  1283               	bcf	3,5	;RP0=0, select bank0
  3680     0531  1303               	bcf	3,6	;RP1=0, select bank0
  3681     0532  0747               	addwf	Lcd_Write_String@a,w
  3682     0533  00CA               	movwf	??_Lcd_Write_String+1
  3683     0534  0848               	movf	Lcd_Write_String@a+1,w
  3684     0535  00C9               	movwf	??_Lcd_Write_String
  3685     0536  1803               	skipnc
  3686     0537  0AC9               	incf	??_Lcd_Write_String,f
  3687     0538  1683               	bsf	3,5	;RP0=1, select bank1
  3688     0539  1303               	bcf	3,6	;RP1=0, select bank1
  3689     053A  1FA0               	btfss	Lcd_Write_String@i^(0+128),7
  3690     053B  2D3F               	goto	u1630
  3691     053C  1283               	bcf	3,5	;RP0=0, select bank0
  3692     053D  1303               	bcf	3,6	;RP1=0, select bank0
  3693     053E  03C9               	decf	??_Lcd_Write_String,f
  3694     053F                     u1630:
  3695     053F  1283               	bcf	3,5	;RP0=0, select bank0
  3696     0540  1303               	bcf	3,6	;RP1=0, select bank0
  3697     0541  0849               	movf	??_Lcd_Write_String,w
  3698     0542  00CB               	movwf	??_Lcd_Write_String+2
  3699     0543  084B               	movf	??_Lcd_Write_String+2,w
  3700     0544  00FF               	movwf	btemp+1
  3701     0545  084A               	movf	??_Lcd_Write_String+1,w
  3702     0546  0084               	movwf	4
  3703     0547  120A  118A  237D  120A  118A  	fcall	stringtab
  3704     054C  120A  158A  270B  120A  118A  	fcall	_Lcd_Write_Char
  3705     0551                     l2040:
  3706     0551  3001               	movlw	1
  3707     0552  1683               	bsf	3,5	;RP0=1, select bank1
  3708     0553  1303               	bcf	3,6	;RP1=0, select bank1
  3709     0554  07A0               	addwf	Lcd_Write_String@i^(0+128),f
  3710     0555  1803               	skipnc
  3711     0556  0AA1               	incf	(Lcd_Write_String@i+1)^(0+128),f
  3712     0557  3000               	movlw	0
  3713     0558  07A1               	addwf	(Lcd_Write_String@i+1)^(0+128),f
  3714     0559                     l2042:
  3715     0559  0820               	movf	Lcd_Write_String@i^(0+128),w
  3716     055A  1283               	bcf	3,5	;RP0=0, select bank0
  3717     055B  1303               	bcf	3,6	;RP1=0, select bank0
  3718     055C  0747               	addwf	Lcd_Write_String@a,w
  3719     055D  00CA               	movwf	??_Lcd_Write_String+1
  3720     055E  0848               	movf	Lcd_Write_String@a+1,w
  3721     055F  00C9               	movwf	??_Lcd_Write_String
  3722     0560  1803               	skipnc
  3723     0561  0AC9               	incf	??_Lcd_Write_String,f
  3724     0562  1683               	bsf	3,5	;RP0=1, select bank1
  3725     0563  1303               	bcf	3,6	;RP1=0, select bank1
  3726     0564  1FA0               	btfss	Lcd_Write_String@i^(0+128),7
  3727     0565  2D69               	goto	u1640
  3728     0566  1283               	bcf	3,5	;RP0=0, select bank0
  3729     0567  1303               	bcf	3,6	;RP1=0, select bank0
  3730     0568  03C9               	decf	??_Lcd_Write_String,f
  3731     0569                     u1640:
  3732     0569  1283               	bcf	3,5	;RP0=0, select bank0
  3733     056A  1303               	bcf	3,6	;RP1=0, select bank0
  3734     056B  0849               	movf	??_Lcd_Write_String,w
  3735     056C  00CB               	movwf	??_Lcd_Write_String+2
  3736     056D  084B               	movf	??_Lcd_Write_String+2,w
  3737     056E  00FF               	movwf	btemp+1
  3738     056F  084A               	movf	??_Lcd_Write_String+1,w
  3739     0570  0084               	movwf	4
  3740     0571  120A  118A  237D  120A  118A  	fcall	stringtab
  3741     0576  3A00               	xorlw	0
  3742     0577  1D03               	skipz
  3743     0578  2D7A               	goto	u1651
  3744     0579  2D7B               	goto	u1650
  3745     057A                     u1651:
  3746     057A  2D2D               	goto	l2038
  3747     057B                     u1650:
  3748     057B                     l261:
  3749     057B  0008               	return
  3750     057C                     __end_of_Lcd_Write_String:
  3751                           
  3752                           	psect	text17
  3753     0F0B                     __ptext17:	
  3754 ;; *************** function _Lcd_Write_Char *****************
  3755 ;; Defined at:
  3756 ;;		line 57 in file "LCD.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;  a               1    wreg     unsigned char 
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  a               1   38[BANK0 ] unsigned char 
  3761 ;; Return value:  Size  Location     Type
  3762 ;;                  1    wreg      void 
  3763 ;; Registers used:
  3764 ;;		wreg, status,2, status,0, pclath, cstack
  3765 ;; Tracked objects:
  3766 ;;		On entry : 0/0
  3767 ;;		On exit  : 0/0
  3768 ;;		Unchanged: 0/0
  3769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3770 ;;      Params:         0       0       0       0       0
  3771 ;;      Locals:         0       1       0       0       0
  3772 ;;      Temps:          0       1       0       0       0
  3773 ;;      Totals:         0       2       0       0       0
  3774 ;;Total ram usage:        2 bytes
  3775 ;; Hardware stack levels used: 1
  3776 ;; Hardware stack levels required when called: 4
  3777 ;; This function calls:
  3778 ;;		_Lcd_Port
  3779 ;; This function is called by:
  3780 ;;		_Lcd_Write_String
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784     0F0B                     _Lcd_Write_Char:	
  3785                           ;psect for function _Lcd_Write_Char
  3786                           
  3787                           
  3788                           ;incstack = 0
  3789                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3790                           ;Lcd_Write_Char@a stored from wreg
  3791     0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  3792     0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  3793     0F0D  00C6               	movwf	Lcd_Write_Char@a
  3794     0F0E                     l1852:
  3795                           
  3796                           ;LCD.c: 58:     RE0 = 1;
  3797     0F0E  1409               	bsf	9,0	;volatile
  3798     0F0F                     l1854:
  3799                           
  3800                           ;LCD.c: 59:     Lcd_Port(a);
  3801     0F0F  0846               	movf	Lcd_Write_Char@a,w
  3802     0F10  120A  158A  26C0  120A  158A  	fcall	_Lcd_Port
  3803     0F15                     l1856:
  3804                           
  3805                           ;LCD.c: 60:     RE1 = 1;
  3806     0F15  1283               	bcf	3,5	;RP0=0, select bank0
  3807     0F16  1303               	bcf	3,6	;RP1=0, select bank0
  3808     0F17  1489               	bsf	9,1	;volatile
  3809     0F18                     l1858:
  3810                           
  3811                           ;LCD.c: 61:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3812     0F18  3019               	movlw	25
  3813     0F19  1283               	bcf	3,5	;RP0=0, select bank0
  3814     0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  3815     0F1B  00C5               	movwf	??_Lcd_Write_Char
  3816     0F1C                     u1997:
  3817     0F1C  0BC5               	decfsz	??_Lcd_Write_Char,f
  3818     0F1D  2F1C               	goto	u1997
  3819     0F1E  2F1F               	nop2
  3820     0F1F                     l1860:
  3821                           
  3822                           ;LCD.c: 62:     RE1 = 0;
  3823     0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  3824     0F20  1303               	bcf	3,6	;RP1=0, select bank0
  3825     0F21  1089               	bcf	9,1	;volatile
  3826     0F22                     l255:
  3827     0F22  0008               	return
  3828     0F23                     __end_of_Lcd_Write_Char:
  3829                           
  3830                           	psect	text18
  3831     0F3F                     __ptext18:	
  3832 ;; *************** function _Lcd_Set_Cursor *****************
  3833 ;; Defined at:
  3834 ;;		line 31 in file "LCD.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  a               1    wreg     unsigned char 
  3837 ;;  b               1   40[BANK0 ] unsigned char 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  a               1   41[BANK0 ] unsigned char 
  3840 ;;  direccion       1   42[BANK0 ] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0, pclath, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3850 ;;      Params:         0       1       0       0       0
  3851 ;;      Locals:         0       2       0       0       0
  3852 ;;      Temps:          0       0       0       0       0
  3853 ;;      Totals:         0       3       0       0       0
  3854 ;;Total ram usage:        3 bytes
  3855 ;; Hardware stack levels used: 1
  3856 ;; Hardware stack levels required when called: 5
  3857 ;; This function calls:
  3858 ;;		_Lcd_Cmd
  3859 ;; This function is called by:
  3860 ;;		_main
  3861 ;; This function uses a non-reentrant model
  3862 ;;
  3863                           
  3864     0F3F                     _Lcd_Set_Cursor:	
  3865                           ;psect for function _Lcd_Set_Cursor
  3866                           
  3867                           
  3868                           ;incstack = 0
  3869                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3870                           ;Lcd_Set_Cursor@a stored from wreg
  3871     0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3872     0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3873     0F41  00C9               	movwf	Lcd_Set_Cursor@a
  3874     0F42                     l2024:
  3875                           
  3876                           ;LCD.c: 32:     char direccion;;LCD.c: 33:     if (a == 1) {
  3877     0F42  0349               	decf	Lcd_Set_Cursor@a,w
  3878     0F43  1D03               	btfss	3,2
  3879     0F44  2F46               	goto	u1611
  3880     0F45  2F47               	goto	u1610
  3881     0F46                     u1611:
  3882     0F46  2F51               	goto	l2030
  3883     0F47                     u1610:
  3884     0F47                     l2026:
  3885                           
  3886                           ;LCD.c: 34:         direccion = 0x80 + b - 1;
  3887     0F47  0848               	movf	Lcd_Set_Cursor@b,w
  3888     0F48  3E7F               	addlw	127
  3889     0F49  00CA               	movwf	Lcd_Set_Cursor@direccion
  3890     0F4A                     l2028:
  3891                           
  3892                           ;LCD.c: 35:         Lcd_Cmd(direccion);
  3893     0F4A  084A               	movf	Lcd_Set_Cursor@direccion,w
  3894     0F4B  120A  158A  2723  120A  158A  	fcall	_Lcd_Cmd
  3895                           
  3896                           ;LCD.c: 36:     } else if (a == 2) {
  3897     0F50  2F60               	goto	l249
  3898     0F51                     l2030:
  3899     0F51  3002               	movlw	2
  3900     0F52  0649               	xorwf	Lcd_Set_Cursor@a,w
  3901     0F53  1D03               	btfss	3,2
  3902     0F54  2F56               	goto	u1621
  3903     0F55  2F57               	goto	u1620
  3904     0F56                     u1621:
  3905     0F56  2F60               	goto	l249
  3906     0F57                     u1620:
  3907     0F57                     l2032:
  3908                           
  3909                           ;LCD.c: 37:         direccion = 0xC0 + b - 1;
  3910     0F57  0848               	movf	Lcd_Set_Cursor@b,w
  3911     0F58  3EBF               	addlw	191
  3912     0F59  00CA               	movwf	Lcd_Set_Cursor@direccion
  3913     0F5A                     l2034:
  3914                           
  3915                           ;LCD.c: 38:         Lcd_Cmd(direccion);
  3916     0F5A  084A               	movf	Lcd_Set_Cursor@direccion,w
  3917     0F5B  120A  158A  2723  120A  158A  	fcall	_Lcd_Cmd
  3918     0F60                     l249:
  3919     0F60  0008               	return
  3920     0F61                     __end_of_Lcd_Set_Cursor:
  3921                           
  3922                           	psect	text19
  3923     057C                     __ptext19:	
  3924 ;; *************** function _Lcd_Init *****************
  3925 ;; Defined at:
  3926 ;;		line 42 in file "LCD.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;		None
  3929 ;; Auto vars:     Size  Location     Type
  3930 ;;		None
  3931 ;; Return value:  Size  Location     Type
  3932 ;;                  1    wreg      void 
  3933 ;; Registers used:
  3934 ;;		wreg, status,2, status,0, pclath, cstack
  3935 ;; Tracked objects:
  3936 ;;		On entry : 0/0
  3937 ;;		On exit  : 0/0
  3938 ;;		Unchanged: 0/0
  3939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3940 ;;      Params:         0       0       0       0       0
  3941 ;;      Locals:         0       0       0       0       0
  3942 ;;      Temps:          0       2       0       0       0
  3943 ;;      Totals:         0       2       0       0       0
  3944 ;;Total ram usage:        2 bytes
  3945 ;; Hardware stack levels used: 1
  3946 ;; Hardware stack levels required when called: 5
  3947 ;; This function calls:
  3948 ;;		_Lcd_Cmd
  3949 ;;		_Lcd_Port
  3950 ;; This function is called by:
  3951 ;;		_main
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955     057C                     _Lcd_Init:	
  3956                           ;psect for function _Lcd_Init
  3957                           
  3958     057C                     l1990:	
  3959                           ;incstack = 0
  3960                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3961                           
  3962                           
  3963                           ;LCD.c: 43:     Lcd_Port(0x00);
  3964     057C  3000               	movlw	0
  3965     057D  120A  158A  26C0  120A  118A  	fcall	_Lcd_Port
  3966     0582                     l1992:
  3967                           
  3968                           ;LCD.c: 44:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3969     0582  3034               	movlw	52
  3970     0583  1283               	bcf	3,5	;RP0=0, select bank0
  3971     0584  1303               	bcf	3,6	;RP1=0, select bank0
  3972     0585  00C9               	movwf	??_Lcd_Init+1
  3973     0586  30F1               	movlw	241
  3974     0587  00C8               	movwf	??_Lcd_Init
  3975     0588                     u2007:
  3976     0588  0BC8               	decfsz	??_Lcd_Init,f
  3977     0589  2D88               	goto	u2007
  3978     058A  0BC9               	decfsz	??_Lcd_Init+1,f
  3979     058B  2D88               	goto	u2007
  3980     058C                     l1994:
  3981                           
  3982                           ;LCD.c: 45:     Lcd_Cmd(0x30);
  3983     058C  3030               	movlw	48
  3984     058D  120A  158A  2723  120A  118A  	fcall	_Lcd_Cmd
  3985                           
  3986                           ;LCD.c: 46:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3987     0592  300D               	movlw	13
  3988     0593  1283               	bcf	3,5	;RP0=0, select bank0
  3989     0594  1303               	bcf	3,6	;RP1=0, select bank0
  3990     0595  00C9               	movwf	??_Lcd_Init+1
  3991     0596  30FB               	movlw	251
  3992     0597  00C8               	movwf	??_Lcd_Init
  3993     0598                     u2017:
  3994     0598  0BC8               	decfsz	??_Lcd_Init,f
  3995     0599  2D98               	goto	u2017
  3996     059A  0BC9               	decfsz	??_Lcd_Init+1,f
  3997     059B  2D98               	goto	u2017
  3998     059C                     l1996:
  3999                           
  4000                           ;LCD.c: 47:     Lcd_Cmd(0x30);
  4001     059C  3030               	movlw	48
  4002     059D  120A  158A  2723  120A  118A  	fcall	_Lcd_Cmd
  4003     05A2                     l1998:
  4004                           
  4005                           ;LCD.c: 48:     _delay((unsigned long)((11)*(8000000/4000.0)));
  4006     05A2  301D               	movlw	29
  4007     05A3  1283               	bcf	3,5	;RP0=0, select bank0
  4008     05A4  1303               	bcf	3,6	;RP1=0, select bank0
  4009     05A5  00C9               	movwf	??_Lcd_Init+1
  4010     05A6  3090               	movlw	144
  4011     05A7  00C8               	movwf	??_Lcd_Init
  4012     05A8                     u2027:
  4013     05A8  0BC8               	decfsz	??_Lcd_Init,f
  4014     05A9  2DA8               	goto	u2027
  4015     05AA  0BC9               	decfsz	??_Lcd_Init+1,f
  4016     05AB  2DA8               	goto	u2027
  4017     05AC  0000               	nop
  4018                           
  4019                           ;LCD.c: 49:     Lcd_Cmd(0x30);
  4020     05AD  3030               	movlw	48
  4021     05AE  120A  158A  2723  120A  118A  	fcall	_Lcd_Cmd
  4022                           
  4023                           ;LCD.c: 51:     Lcd_Cmd(0x3C);
  4024     05B3  303C               	movlw	60
  4025     05B4  120A  158A  2723  120A  118A  	fcall	_Lcd_Cmd
  4026                           
  4027                           ;LCD.c: 52:     Lcd_Cmd(0x0C);
  4028     05B9  300C               	movlw	12
  4029     05BA  120A  158A  2723  120A  118A  	fcall	_Lcd_Cmd
  4030                           
  4031                           ;LCD.c: 53:     Lcd_Cmd(0x01);
  4032     05BF  3001               	movlw	1
  4033     05C0  120A  158A  2723  120A  118A  	fcall	_Lcd_Cmd
  4034                           
  4035                           ;LCD.c: 54:     Lcd_Cmd(0x06);
  4036     05C5  3006               	movlw	6
  4037     05C6  120A  158A  2723  120A  118A  	fcall	_Lcd_Cmd
  4038     05CB                     l252:
  4039     05CB  0008               	return
  4040     05CC                     __end_of_Lcd_Init:
  4041                           
  4042                           	psect	text20
  4043     0ED6                     __ptext20:	
  4044 ;; *************** function _Lcd_Clear *****************
  4045 ;; Defined at:
  4046 ;;		line 26 in file "LCD.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;		None
  4049 ;; Auto vars:     Size  Location     Type
  4050 ;;		None
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  1    wreg      void 
  4053 ;; Registers used:
  4054 ;;		wreg, status,2, status,0, pclath, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4060 ;;      Params:         0       0       0       0       0
  4061 ;;      Locals:         0       0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0
  4063 ;;      Totals:         0       0       0       0       0
  4064 ;;Total ram usage:        0 bytes
  4065 ;; Hardware stack levels used: 1
  4066 ;; Hardware stack levels required when called: 5
  4067 ;; This function calls:
  4068 ;;		_Lcd_Cmd
  4069 ;; This function is called by:
  4070 ;;		_main
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074     0ED6                     _Lcd_Clear:	
  4075                           ;psect for function _Lcd_Clear
  4076                           
  4077     0ED6                     l2022:	
  4078                           ;incstack = 0
  4079                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  4080                           
  4081                           
  4082                           ;LCD.c: 27:     Lcd_Cmd(0);
  4083     0ED6  3000               	movlw	0
  4084     0ED7  120A  158A  2723  120A  158A  	fcall	_Lcd_Cmd
  4085                           
  4086                           ;LCD.c: 28:     Lcd_Cmd(1);
  4087     0EDC  3001               	movlw	1
  4088     0EDD  120A  158A  2723  120A  158A  	fcall	_Lcd_Cmd
  4089     0EE2                     l243:
  4090     0EE2  0008               	return
  4091     0EE3                     __end_of_Lcd_Clear:
  4092                           
  4093                           	psect	text21
  4094     0F23                     __ptext21:	
  4095 ;; *************** function _Lcd_Cmd *****************
  4096 ;; Defined at:
  4097 ;;		line 17 in file "LCD.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  a               1    wreg     unsigned char 
  4100 ;; Auto vars:     Size  Location     Type
  4101 ;;  a               1   39[BANK0 ] unsigned char 
  4102 ;; Return value:  Size  Location     Type
  4103 ;;                  1    wreg      void 
  4104 ;; Registers used:
  4105 ;;		wreg, status,2, status,0, pclath, cstack
  4106 ;; Tracked objects:
  4107 ;;		On entry : 0/0
  4108 ;;		On exit  : 0/0
  4109 ;;		Unchanged: 0/0
  4110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4111 ;;      Params:         0       0       0       0       0
  4112 ;;      Locals:         0       1       0       0       0
  4113 ;;      Temps:          0       2       0       0       0
  4114 ;;      Totals:         0       3       0       0       0
  4115 ;;Total ram usage:        3 bytes
  4116 ;; Hardware stack levels used: 1
  4117 ;; Hardware stack levels required when called: 4
  4118 ;; This function calls:
  4119 ;;		_Lcd_Port
  4120 ;; This function is called by:
  4121 ;;		_Lcd_Clear
  4122 ;;		_Lcd_Set_Cursor
  4123 ;;		_Lcd_Init
  4124 ;;		_Lcd_Shift_Right
  4125 ;;		_Lcd_Shift_Left
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129     0F23                     _Lcd_Cmd:	
  4130                           ;psect for function _Lcd_Cmd
  4131                           
  4132                           
  4133                           ;incstack = 0
  4134                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  4135                           ;Lcd_Cmd@a stored from wreg
  4136     0F23  1283               	bcf	3,5	;RP0=0, select bank0
  4137     0F24  1303               	bcf	3,6	;RP1=0, select bank0
  4138     0F25  00C7               	movwf	Lcd_Cmd@a
  4139     0F26                     l1842:
  4140                           
  4141                           ;LCD.c: 18:     RE0 = 0;
  4142     0F26  1009               	bcf	9,0	;volatile
  4143     0F27                     l1844:
  4144                           
  4145                           ;LCD.c: 19:     Lcd_Port(a);
  4146     0F27  0847               	movf	Lcd_Cmd@a,w
  4147     0F28  120A  158A  26C0  120A  158A  	fcall	_Lcd_Port
  4148     0F2D                     l1846:
  4149                           
  4150                           ;LCD.c: 20:     RE1 = 1;
  4151     0F2D  1283               	bcf	3,5	;RP0=0, select bank0
  4152     0F2E  1303               	bcf	3,6	;RP1=0, select bank0
  4153     0F2F  1489               	bsf	9,1	;volatile
  4154     0F30                     l1848:
  4155                           
  4156                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4157     0F30  300B               	movlw	11
  4158     0F31  1283               	bcf	3,5	;RP0=0, select bank0
  4159     0F32  1303               	bcf	3,6	;RP1=0, select bank0
  4160     0F33  00C6               	movwf	??_Lcd_Cmd+1
  4161     0F34  3061               	movlw	97
  4162     0F35  00C5               	movwf	??_Lcd_Cmd
  4163     0F36                     u2037:
  4164     0F36  0BC5               	decfsz	??_Lcd_Cmd,f
  4165     0F37  2F36               	goto	u2037
  4166     0F38  0BC6               	decfsz	??_Lcd_Cmd+1,f
  4167     0F39  2F36               	goto	u2037
  4168     0F3A  2F3B               	nop2
  4169     0F3B                     l1850:
  4170                           
  4171                           ;LCD.c: 23:     RE1 = 0;
  4172     0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  4173     0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  4174     0F3D  1089               	bcf	9,1	;volatile
  4175     0F3E                     l240:
  4176     0F3E  0008               	return
  4177     0F3F                     __end_of_Lcd_Cmd:
  4178                           
  4179                           	psect	text22
  4180     0EC0                     __ptext22:	
  4181 ;; *************** function _Lcd_Port *****************
  4182 ;; Defined at:
  4183 ;;		line 13 in file "LCD.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  a               1    wreg     unsigned char 
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  a               1   36[BANK0 ] unsigned char 
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4197 ;;      Params:         0       0       0       0       0
  4198 ;;      Locals:         0       1       0       0       0
  4199 ;;      Temps:          0       0       0       0       0
  4200 ;;      Totals:         0       1       0       0       0
  4201 ;;Total ram usage:        1 bytes
  4202 ;; Hardware stack levels used: 1
  4203 ;; Hardware stack levels required when called: 3
  4204 ;; This function calls:
  4205 ;;		Nothing
  4206 ;; This function is called by:
  4207 ;;		_Lcd_Cmd
  4208 ;;		_Lcd_Init
  4209 ;;		_Lcd_Write_Char
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213     0EC0                     _Lcd_Port:	
  4214                           ;psect for function _Lcd_Port
  4215                           
  4216                           
  4217                           ;incstack = 0
  4218                           ; Regs used in _Lcd_Port: [wreg]
  4219                           ;Lcd_Port@a stored from wreg
  4220     0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  4221     0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  4222     0EC2  00C4               	movwf	Lcd_Port@a
  4223     0EC3                     l1632:
  4224                           
  4225                           ;LCD.c: 14:     PORTD = a;
  4226     0EC3  0844               	movf	Lcd_Port@a,w
  4227     0EC4  0088               	movwf	8	;volatile
  4228     0EC5                     l237:
  4229     0EC5  0008               	return
  4230     0EC6                     __end_of_Lcd_Port:
  4231                           
  4232                           	psect	text23
  4233     011C                     __ptext23:	
  4234 ;; *************** function _isr *****************
  4235 ;; Defined at:
  4236 ;;		line 76 in file "LCD_MT.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;		None
  4239 ;; Auto vars:     Size  Location     Type
  4240 ;;  residuo         2   34[BANK0 ] int 
  4241 ;;  valorMapeado    2   32[BANK0 ] int 
  4242 ;;  valorADC        2   30[BANK0 ] int 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  1    wreg      void 
  4245 ;; Registers used:
  4246 ;;		wreg, status,2, status,0, pclath, cstack
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4252 ;;      Params:         0       0       0       0       0
  4253 ;;      Locals:         0       6       0       0       0
  4254 ;;      Temps:          0       4       0       0       0
  4255 ;;      Totals:         0      10       0       0       0
  4256 ;;Total ram usage:       10 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; Hardware stack levels required when called: 2
  4259 ;; This function calls:
  4260 ;;		_UART_read_char
  4261 ;;		___awdiv
  4262 ;;		___awmod
  4263 ;;		_adc_read
  4264 ;;		_map
  4265 ;; This function is called by:
  4266 ;;		Interrupt level 1
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270     011C                     _isr:	
  4271                           ;psect for function _isr
  4272                           
  4273     011C                     i1l2188:
  4274                           
  4275                           ;LCD_MT.c: 78:     if(ADIF){
  4276     011C  1F0C               	btfss	12,6	;volatile
  4277     011D  291F               	goto	u192_21
  4278     011E  2920               	goto	u192_20
  4279     011F                     u192_21:
  4280     011F  29B1               	goto	i1l2206
  4281     0120                     u192_20:
  4282     0120                     i1l2190:
  4283                           
  4284                           ;LCD_MT.c: 79:         int valorADC = adc_read();
  4285     0120  120A  158A  26CC  120A  118A  	fcall	_adc_read
  4286     0125  0871               	movf	?_adc_read+1,w
  4287     0126  1283               	bcf	3,5	;RP0=0, select bank0
  4288     0127  1303               	bcf	3,6	;RP1=0, select bank0
  4289     0128  00BF               	movwf	isr@valorADC+1
  4290     0129  0870               	movf	?_adc_read,w
  4291     012A  00BE               	movwf	isr@valorADC
  4292     012B                     i1l2192:
  4293                           
  4294                           ;LCD_MT.c: 80:         int valorMapeado = map(valorADC, 0,255,0,500);
  4295     012B  083F               	movf	isr@valorADC+1,w
  4296     012C  00AF               	movwf	map@val+1
  4297     012D  083E               	movf	isr@valorADC,w
  4298     012E  00AE               	movwf	map@val
  4299     012F  3000               	movlw	0
  4300     0130  00B0               	movwf	map@min_in
  4301     0131  00B1               	movwf	map@min_in+1
  4302     0132  30FF               	movlw	255
  4303     0133  00B2               	movwf	map@max_in
  4304     0134  3000               	movlw	0
  4305     0135  00B3               	movwf	map@max_in+1
  4306     0136  3000               	movlw	0
  4307     0137  00B4               	movwf	map@min_out
  4308     0138  00B5               	movwf	map@min_out+1
  4309     0139  30F4               	movlw	244
  4310     013A  00B6               	movwf	map@max_out
  4311     013B  3001               	movlw	1
  4312     013C  00B7               	movwf	map@max_out+1
  4313     013D  120A  118A  25CC  120A  118A  	fcall	_map
  4314     0142  1283               	bcf	3,5	;RP0=0, select bank0
  4315     0143  1303               	bcf	3,6	;RP1=0, select bank0
  4316     0144  082F               	movf	?_map+1,w
  4317     0145  00C1               	movwf	isr@valorMapeado+1
  4318     0146  082E               	movf	?_map,w
  4319     0147  00C0               	movwf	isr@valorMapeado
  4320     0148                     i1l2194:
  4321                           
  4322                           ;LCD_MT.c: 81:         int residuo;;LCD_MT.c: 83:         centena = (uint8_t) (valorMape
      +                          ado/100);
  4323     0148  3064               	movlw	100
  4324     0149  00F0               	movwf	___awdiv@divisor
  4325     014A  3000               	movlw	0
  4326     014B  00F1               	movwf	___awdiv@divisor+1
  4327     014C  0841               	movf	isr@valorMapeado+1,w
  4328     014D  00F3               	movwf	___awdiv@dividend+1
  4329     014E  0840               	movf	isr@valorMapeado,w
  4330     014F  00F2               	movwf	___awdiv@dividend
  4331     0150  120A  118A  2468  120A  118A  	fcall	___awdiv
  4332     0155  0870               	movf	?___awdiv,w
  4333     0156  1283               	bcf	3,5	;RP0=0, select bank0
  4334     0157  1303               	bcf	3,6	;RP1=0, select bank0
  4335     0158  00BA               	movwf	??_isr
  4336     0159  01BB               	clrf	??_isr+1
  4337     015A  083A               	movf	??_isr,w
  4338     015B  1683               	bsf	3,5	;RP0=1, select bank1
  4339     015C  1303               	bcf	3,6	;RP1=0, select bank1
  4340     015D  00BA               	movwf	_centena^(0+128)
  4341     015E  1283               	bcf	3,5	;RP0=0, select bank0
  4342     015F  1303               	bcf	3,6	;RP1=0, select bank0
  4343     0160  083B               	movf	??_isr+1,w
  4344     0161  1683               	bsf	3,5	;RP0=1, select bank1
  4345     0162  1303               	bcf	3,6	;RP1=0, select bank1
  4346     0163  00BB               	movwf	(_centena+1)^(0+128)
  4347     0164                     i1l2196:
  4348                           
  4349                           ;LCD_MT.c: 84:         residuo = valorMapeado%100;
  4350     0164  3064               	movlw	100
  4351     0165  00F0               	movwf	___awmod@divisor
  4352     0166  3000               	movlw	0
  4353     0167  00F1               	movwf	___awmod@divisor+1
  4354     0168  1283               	bcf	3,5	;RP0=0, select bank0
  4355     0169  1303               	bcf	3,6	;RP1=0, select bank0
  4356     016A  0841               	movf	isr@valorMapeado+1,w
  4357     016B  00F3               	movwf	___awmod@dividend+1
  4358     016C  0840               	movf	isr@valorMapeado,w
  4359     016D  00F2               	movwf	___awmod@dividend
  4360     016E  120A  118A  24CF  120A  118A  	fcall	___awmod
  4361     0173  0871               	movf	?___awmod+1,w
  4362     0174  1283               	bcf	3,5	;RP0=0, select bank0
  4363     0175  1303               	bcf	3,6	;RP1=0, select bank0
  4364     0176  00C3               	movwf	isr@residuo+1
  4365     0177  0870               	movf	?___awmod,w
  4366     0178  00C2               	movwf	isr@residuo
  4367     0179                     i1l2198:
  4368                           
  4369                           ;LCD_MT.c: 86:         decena = (uint8_t) residuo/10;
  4370     0179  300A               	movlw	10
  4371     017A  00F0               	movwf	___awdiv@divisor
  4372     017B  3000               	movlw	0
  4373     017C  00F1               	movwf	___awdiv@divisor+1
  4374     017D  0842               	movf	isr@residuo,w
  4375     017E  00BA               	movwf	??_isr
  4376     017F  01BB               	clrf	??_isr+1
  4377     0180  083A               	movf	??_isr,w
  4378     0181  00F2               	movwf	___awdiv@dividend
  4379     0182  083B               	movf	??_isr+1,w
  4380     0183  00F3               	movwf	___awdiv@dividend+1
  4381     0184  120A  118A  2468  120A  118A  	fcall	___awdiv
  4382     0189  0871               	movf	?___awdiv+1,w
  4383     018A  1683               	bsf	3,5	;RP0=1, select bank1
  4384     018B  1303               	bcf	3,6	;RP1=0, select bank1
  4385     018C  00BD               	movwf	(_decena+1)^(0+128)
  4386     018D  0870               	movf	?___awdiv,w
  4387     018E  00BC               	movwf	_decena^(0+128)
  4388     018F                     i1l2200:
  4389                           
  4390                           ;LCD_MT.c: 87:         residuo %= 10;
  4391     018F  300A               	movlw	10
  4392     0190  00F0               	movwf	___awmod@divisor
  4393     0191  3000               	movlw	0
  4394     0192  00F1               	movwf	___awmod@divisor+1
  4395     0193  1283               	bcf	3,5	;RP0=0, select bank0
  4396     0194  1303               	bcf	3,6	;RP1=0, select bank0
  4397     0195  0843               	movf	isr@residuo+1,w
  4398     0196  00F3               	movwf	___awmod@dividend+1
  4399     0197  0842               	movf	isr@residuo,w
  4400     0198  00F2               	movwf	___awmod@dividend
  4401     0199  120A  118A  24CF  120A  118A  	fcall	___awmod
  4402     019E  0871               	movf	?___awmod+1,w
  4403     019F  1283               	bcf	3,5	;RP0=0, select bank0
  4404     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  4405     01A1  00C3               	movwf	isr@residuo+1
  4406     01A2  0870               	movf	?___awmod,w
  4407     01A3  00C2               	movwf	isr@residuo
  4408     01A4                     i1l2202:
  4409                           
  4410                           ;LCD_MT.c: 89:         unidad = residuo/1;
  4411     01A4  0843               	movf	isr@residuo+1,w
  4412     01A5  1683               	bsf	3,5	;RP0=1, select bank1
  4413     01A6  1303               	bcf	3,6	;RP1=0, select bank1
  4414     01A7  00BF               	movwf	(_unidad+1)^(0+128)
  4415     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  4416     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  4417     01AA  0842               	movf	isr@residuo,w
  4418     01AB  1683               	bsf	3,5	;RP0=1, select bank1
  4419     01AC  1303               	bcf	3,6	;RP1=0, select bank1
  4420     01AD  00BE               	movwf	_unidad^(0+128)
  4421     01AE                     i1l2204:
  4422                           
  4423                           ;LCD_MT.c: 90:         ADIF = 0;
  4424     01AE  1283               	bcf	3,5	;RP0=0, select bank0
  4425     01AF  1303               	bcf	3,6	;RP1=0, select bank0
  4426     01B0  130C               	bcf	12,6	;volatile
  4427     01B1                     i1l2206:
  4428                           
  4429                           ;LCD_MT.c: 93:     if(RCIF){
  4430     01B1  1E8C               	btfss	12,5	;volatile
  4431     01B2  29B4               	goto	u193_21
  4432     01B3  29B5               	goto	u193_20
  4433     01B4                     u193_21:
  4434     01B4  29C0               	goto	i1l71
  4435     01B5                     u193_20:
  4436     01B5                     i1l2208:
  4437                           
  4438                           ;LCD_MT.c: 94:          UART_get = UART_read_char();
  4439     01B5  120A  158A  26BA  120A  118A  	fcall	_UART_read_char
  4440     01BA  1683               	bsf	3,5	;RP0=1, select bank1
  4441     01BB  1303               	bcf	3,6	;RP1=0, select bank1
  4442     01BC  00C0               	movwf	_UART_get^(0+128)
  4443     01BD                     i1l2210:
  4444                           
  4445                           ;LCD_MT.c: 95:          RCIF = 0;
  4446     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  4447     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  4448     01BF  128C               	bcf	12,5	;volatile
  4449     01C0                     i1l71:
  4450     01C0  083D               	movf	??_isr+3,w
  4451     01C1  008A               	movwf	10
  4452     01C2  0E3C               	swapf	??_isr+2,w
  4453     01C3  0083               	movwf	3
  4454     01C4  0EFE               	swapf	btemp,f
  4455     01C5  0E7E               	swapf	btemp,w
  4456     01C6  0009               	retfie
  4457     01C7                     __end_of_isr:
  4458                           
  4459                           	psect	intentry
  4460     0004                     __pintentry:	
  4461                           ;incstack = 0
  4462                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  4463                           
  4464     0004                     interrupt_function:
  4465     007E                     saved_w	set	btemp
  4466     0004  00FE               	movwf	btemp
  4467     0005  0E03               	swapf	3,w
  4468     0006  1283               	bcf	3,5	;RP0=0, select bank0
  4469     0007  1303               	bcf	3,6	;RP1=0, select bank0
  4470     0008  00BC               	movwf	??_isr+2
  4471     0009  080A               	movf	10,w
  4472     000A  00BD               	movwf	??_isr+3
  4473     000B  120A  118A  291C   	ljmp	_isr
  4474                           
  4475                           	psect	text24
  4476     05CC                     __ptext24:	
  4477 ;; *************** function _map *****************
  4478 ;; Defined at:
  4479 ;;		line 77 in file "ADC.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  val             2   14[BANK0 ] int 
  4482 ;;  min_in          2   16[BANK0 ] int 
  4483 ;;  max_in          2   18[BANK0 ] int 
  4484 ;;  min_out         2   20[BANK0 ] int 
  4485 ;;  max_out         2   22[BANK0 ] int 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  vout            2   24[BANK0 ] int 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  2   14[BANK0 ] int 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0, pclath, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4497 ;;      Params:         0      10       0       0       0
  4498 ;;      Locals:         0       2       0       0       0
  4499 ;;      Temps:          0       0       0       0       0
  4500 ;;      Totals:         0      12       0       0       0
  4501 ;;Total ram usage:       12 bytes
  4502 ;; Hardware stack levels used: 1
  4503 ;; Hardware stack levels required when called: 1
  4504 ;; This function calls:
  4505 ;;		___aldiv
  4506 ;;		___lmul
  4507 ;; This function is called by:
  4508 ;;		_isr
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512     05CC                     _map:	
  4513                           ;psect for function _map
  4514                           
  4515     05CC                     i1l1968:	
  4516                           ;incstack = 0
  4517                           ; Regs used in _map: [wreg+status,2+status,0+pclath+cstack]
  4518                           
  4519                           
  4520                           ;ADC.c: 77: int map (int val, int min_in, int max_in, int min_out, int max_out);ADC.c: 7
      +                          8: {;ADC.c: 80:     int vout = (long)(val-min_in)*(max_out-min_out)/(max_in-min_in)+ min
      +                          _out;
  4521     05CC  1283               	bcf	3,5	;RP0=0, select bank0
  4522     05CD  1303               	bcf	3,6	;RP1=0, select bank0
  4523     05CE  0830               	movf	map@min_in,w
  4524     05CF  0232               	subwf	map@max_in,w
  4525     05D0  00A0               	movwf	___aldiv@divisor
  4526     05D1  0831               	movf	map@min_in+1,w
  4527     05D2  1C03               	skipc
  4528     05D3  0A31               	incf	map@min_in+1,w
  4529     05D4  0233               	subwf	map@max_in+1,w
  4530     05D5  00A1               	movwf	___aldiv@divisor+1
  4531     05D6  01A2               	clrf	___aldiv@divisor+2
  4532     05D7  1BA1               	btfsc	___aldiv@divisor+1,7
  4533     05D8  03A2               	decf	___aldiv@divisor+2,f
  4534     05D9  0822               	movf	___aldiv@divisor+2,w
  4535     05DA  00A3               	movwf	___aldiv@divisor+3
  4536     05DB  0830               	movf	map@min_in,w
  4537     05DC  022E               	subwf	map@val,w
  4538     05DD  00F0               	movwf	___lmul@multiplier
  4539     05DE  0831               	movf	map@min_in+1,w
  4540     05DF  1C03               	skipc
  4541     05E0  0A31               	incf	map@min_in+1,w
  4542     05E1  022F               	subwf	map@val+1,w
  4543     05E2  00F1               	movwf	___lmul@multiplier+1
  4544     05E3  01F2               	clrf	___lmul@multiplier+2
  4545     05E4  1BF1               	btfsc	___lmul@multiplier+1,7
  4546     05E5  03F2               	decf	___lmul@multiplier+2,f
  4547     05E6  0872               	movf	___lmul@multiplier+2,w
  4548     05E7  00F3               	movwf	___lmul@multiplier+3
  4549     05E8  0834               	movf	map@min_out,w
  4550     05E9  0236               	subwf	map@max_out,w
  4551     05EA  00F4               	movwf	___lmul@multiplicand
  4552     05EB  0835               	movf	map@min_out+1,w
  4553     05EC  1C03               	skipc
  4554     05ED  0A35               	incf	map@min_out+1,w
  4555     05EE  0237               	subwf	map@max_out+1,w
  4556     05EF  00F5               	movwf	___lmul@multiplicand+1
  4557     05F0  01F6               	clrf	___lmul@multiplicand+2
  4558     05F1  1BF5               	btfsc	___lmul@multiplicand+1,7
  4559     05F2  03F6               	decf	___lmul@multiplicand+2,f
  4560     05F3  0876               	movf	___lmul@multiplicand+2,w
  4561     05F4  00F7               	movwf	___lmul@multiplicand+3
  4562     05F5  120A  118A  26A8  120A  118A  	fcall	___lmul
  4563     05FA  0873               	movf	?___lmul+3,w
  4564     05FB  1283               	bcf	3,5	;RP0=0, select bank0
  4565     05FC  1303               	bcf	3,6	;RP1=0, select bank0
  4566     05FD  00A7               	movwf	___aldiv@dividend+3
  4567     05FE  0872               	movf	?___lmul+2,w
  4568     05FF  00A6               	movwf	___aldiv@dividend+2
  4569     0600  0871               	movf	?___lmul+1,w
  4570     0601  00A5               	movwf	___aldiv@dividend+1
  4571     0602  0870               	movf	?___lmul,w
  4572     0603  00A4               	movwf	___aldiv@dividend
  4573     0604  120A  118A  21C7  120A  118A  	fcall	___aldiv
  4574     0609  1283               	bcf	3,5	;RP0=0, select bank0
  4575     060A  1303               	bcf	3,6	;RP1=0, select bank0
  4576     060B  0834               	movf	map@min_out,w
  4577     060C  0720               	addwf	?___aldiv,w
  4578     060D  00B8               	movwf	map@vout
  4579     060E  0835               	movf	map@min_out+1,w
  4580     060F  1803               	skipnc
  4581     0610  0A35               	incf	map@min_out+1,w
  4582     0611  0721               	addwf	?___aldiv+1,w
  4583     0612  00B9               	movwf	map@vout+1
  4584     0613                     i1l1970:
  4585                           
  4586                           ;ADC.c: 81:     return vout;
  4587     0613  0839               	movf	map@vout+1,w
  4588     0614  00AF               	movwf	?_map+1
  4589     0615  0838               	movf	map@vout,w
  4590     0616  00AE               	movwf	?_map
  4591     0617                     i1l159:
  4592     0617  0008               	return
  4593     0618                     __end_of_map:
  4594                           
  4595                           	psect	text25
  4596     06A8                     __ptext25:	
  4597 ;; *************** function ___lmul *****************
  4598 ;; Defined at:
  4599 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul32.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;  multiplier      4    0[COMMON] unsigned long 
  4602 ;;  multiplicand    4    4[COMMON] unsigned long 
  4603 ;; Auto vars:     Size  Location     Type
  4604 ;;  product         4    9[COMMON] unsigned long 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  4    0[COMMON] unsigned long 
  4607 ;; Registers used:
  4608 ;;		wreg, status,2, status,0
  4609 ;; Tracked objects:
  4610 ;;		On entry : 0/0
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4614 ;;      Params:         8       0       0       0       0
  4615 ;;      Locals:         4       0       0       0       0
  4616 ;;      Temps:          1       0       0       0       0
  4617 ;;      Totals:        13       0       0       0       0
  4618 ;;Total ram usage:       13 bytes
  4619 ;; Hardware stack levels used: 1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_map
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627     06A8                     ___lmul:	
  4628                           ;psect for function ___lmul
  4629                           
  4630     06A8                     i1l1862:	
  4631                           ;incstack = 0
  4632                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4633                           
  4634     06A8  3000               	movlw	0
  4635     06A9  00FC               	movwf	___lmul@product+3
  4636     06AA  3000               	movlw	0
  4637     06AB  00FB               	movwf	___lmul@product+2
  4638     06AC  3000               	movlw	0
  4639     06AD  00FA               	movwf	___lmul@product+1
  4640     06AE  3000               	movlw	0
  4641     06AF  00F9               	movwf	___lmul@product
  4642     06B0                     i1l1864:
  4643     06B0  1C70               	btfss	___lmul@multiplier,0
  4644     06B1  2EB3               	goto	u131_21
  4645     06B2  2EB4               	goto	u131_20
  4646     06B3                     u131_21:
  4647     06B3  2ECB               	goto	i1l1868
  4648     06B4                     u131_20:
  4649     06B4                     i1l1866:
  4650     06B4  0874               	movf	___lmul@multiplicand,w
  4651     06B5  07F9               	addwf	___lmul@product,f
  4652     06B6  0875               	movf	___lmul@multiplicand+1,w
  4653     06B7  1103               	clrz
  4654     06B8  1803               	skipnc
  4655     06B9  3E01               	addlw	1
  4656     06BA  1903               	skipnz
  4657     06BB  2EBD               	goto	u132_21
  4658     06BC  07FA               	addwf	___lmul@product+1,f
  4659     06BD                     u132_21:
  4660     06BD  0876               	movf	___lmul@multiplicand+2,w
  4661     06BE  1103               	clrz
  4662     06BF  1803               	skipnc
  4663     06C0  3E01               	addlw	1
  4664     06C1  1903               	skipnz
  4665     06C2  2EC4               	goto	u132_22
  4666     06C3  07FB               	addwf	___lmul@product+2,f
  4667     06C4                     u132_22:
  4668     06C4  0877               	movf	___lmul@multiplicand+3,w
  4669     06C5  1103               	clrz
  4670     06C6  1803               	skipnc
  4671     06C7  3E01               	addlw	1
  4672     06C8  1903               	skipnz
  4673     06C9  2ECB               	goto	u132_23
  4674     06CA  07FC               	addwf	___lmul@product+3,f
  4675     06CB                     u132_23:
  4676     06CB                     i1l1868:
  4677     06CB  3001               	movlw	1
  4678     06CC  00F8               	movwf	??___lmul
  4679     06CD                     u133_25:
  4680     06CD  1003               	clrc
  4681     06CE  0DF4               	rlf	___lmul@multiplicand,f
  4682     06CF  0DF5               	rlf	___lmul@multiplicand+1,f
  4683     06D0  0DF6               	rlf	___lmul@multiplicand+2,f
  4684     06D1  0DF7               	rlf	___lmul@multiplicand+3,f
  4685     06D2  0BF8               	decfsz	??___lmul,f
  4686     06D3  2ECD               	goto	u133_25
  4687     06D4                     i1l1870:
  4688     06D4  3001               	movlw	1
  4689     06D5                     u134_25:
  4690     06D5  1003               	clrc
  4691     06D6  0CF3               	rrf	___lmul@multiplier+3,f
  4692     06D7  0CF2               	rrf	___lmul@multiplier+2,f
  4693     06D8  0CF1               	rrf	___lmul@multiplier+1,f
  4694     06D9  0CF0               	rrf	___lmul@multiplier,f
  4695     06DA  3EFF               	addlw	-1
  4696     06DB  1D03               	skipz
  4697     06DC  2ED5               	goto	u134_25
  4698     06DD  0873               	movf	___lmul@multiplier+3,w
  4699     06DE  0472               	iorwf	___lmul@multiplier+2,w
  4700     06DF  0471               	iorwf	___lmul@multiplier+1,w
  4701     06E0  0470               	iorwf	___lmul@multiplier,w
  4702     06E1  1D03               	skipz
  4703     06E2  2EE4               	goto	u135_21
  4704     06E3  2EE5               	goto	u135_20
  4705     06E4                     u135_21:
  4706     06E4  2EB0               	goto	i1l1864
  4707     06E5                     u135_20:
  4708     06E5                     i1l1872:
  4709     06E5  087C               	movf	___lmul@product+3,w
  4710     06E6  00F3               	movwf	?___lmul+3
  4711     06E7  087B               	movf	___lmul@product+2,w
  4712     06E8  00F2               	movwf	?___lmul+2
  4713     06E9  087A               	movf	___lmul@product+1,w
  4714     06EA  00F1               	movwf	?___lmul+1
  4715     06EB  0879               	movf	___lmul@product,w
  4716     06EC  00F0               	movwf	?___lmul
  4717     06ED                     i1l446:
  4718     06ED  0008               	return
  4719     06EE                     __end_of___lmul:
  4720                           
  4721                           	psect	text26
  4722     01C7                     __ptext26:	
  4723 ;; *************** function ___aldiv *****************
  4724 ;; Defined at:
  4725 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\aldiv.c"
  4726 ;; Parameters:    Size  Location     Type
  4727 ;;  divisor         4    0[BANK0 ] long 
  4728 ;;  dividend        4    4[BANK0 ] long 
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;  quotient        4   10[BANK0 ] long 
  4731 ;;  sign            1    9[BANK0 ] unsigned char 
  4732 ;;  counter         1    8[BANK0 ] unsigned char 
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  4    0[BANK0 ] long 
  4735 ;; Registers used:
  4736 ;;		wreg, status,2, status,0
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4742 ;;      Params:         0       8       0       0       0
  4743 ;;      Locals:         0       6       0       0       0
  4744 ;;      Temps:          1       0       0       0       0
  4745 ;;      Totals:         1      14       0       0       0
  4746 ;;Total ram usage:       15 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_map
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755     01C7                     ___aldiv:	
  4756                           ;psect for function ___aldiv
  4757                           
  4758     01C7                     i1l1876:	
  4759                           ;incstack = 0
  4760                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  4761                           
  4762     01C7  1283               	bcf	3,5	;RP0=0, select bank0
  4763     01C8  1303               	bcf	3,6	;RP1=0, select bank0
  4764     01C9  01A9               	clrf	___aldiv@sign
  4765     01CA                     i1l1878:
  4766     01CA  1FA3               	btfss	___aldiv@divisor+3,7
  4767     01CB  29CD               	goto	u136_21
  4768     01CC  29CE               	goto	u136_20
  4769     01CD                     u136_21:
  4770     01CD  29DB               	goto	i1l497
  4771     01CE                     u136_20:
  4772     01CE                     i1l1880:
  4773     01CE  09A0               	comf	___aldiv@divisor,f
  4774     01CF  09A1               	comf	___aldiv@divisor+1,f
  4775     01D0  09A2               	comf	___aldiv@divisor+2,f
  4776     01D1  09A3               	comf	___aldiv@divisor+3,f
  4777     01D2  0AA0               	incf	___aldiv@divisor,f
  4778     01D3  1903               	skipnz
  4779     01D4  0AA1               	incf	___aldiv@divisor+1,f
  4780     01D5  1903               	skipnz
  4781     01D6  0AA2               	incf	___aldiv@divisor+2,f
  4782     01D7  1903               	skipnz
  4783     01D8  0AA3               	incf	___aldiv@divisor+3,f
  4784     01D9  01A9               	clrf	___aldiv@sign
  4785     01DA  0AA9               	incf	___aldiv@sign,f
  4786     01DB                     i1l497:
  4787     01DB  1FA7               	btfss	___aldiv@dividend+3,7
  4788     01DC  29DE               	goto	u137_21
  4789     01DD  29DF               	goto	u137_20
  4790     01DE                     u137_21:
  4791     01DE  29EE               	goto	i1l1886
  4792     01DF                     u137_20:
  4793     01DF                     i1l1882:
  4794     01DF  09A4               	comf	___aldiv@dividend,f
  4795     01E0  09A5               	comf	___aldiv@dividend+1,f
  4796     01E1  09A6               	comf	___aldiv@dividend+2,f
  4797     01E2  09A7               	comf	___aldiv@dividend+3,f
  4798     01E3  0AA4               	incf	___aldiv@dividend,f
  4799     01E4  1903               	skipnz
  4800     01E5  0AA5               	incf	___aldiv@dividend+1,f
  4801     01E6  1903               	skipnz
  4802     01E7  0AA6               	incf	___aldiv@dividend+2,f
  4803     01E8  1903               	skipnz
  4804     01E9  0AA7               	incf	___aldiv@dividend+3,f
  4805     01EA                     i1l1884:
  4806     01EA  3001               	movlw	1
  4807     01EB  00FD               	movwf	??___aldiv
  4808     01EC  087D               	movf	??___aldiv,w
  4809     01ED  06A9               	xorwf	___aldiv@sign,f
  4810     01EE                     i1l1886:
  4811     01EE  3000               	movlw	0
  4812     01EF  00AD               	movwf	___aldiv@quotient+3
  4813     01F0  3000               	movlw	0
  4814     01F1  00AC               	movwf	___aldiv@quotient+2
  4815     01F2  3000               	movlw	0
  4816     01F3  00AB               	movwf	___aldiv@quotient+1
  4817     01F4  3000               	movlw	0
  4818     01F5  00AA               	movwf	___aldiv@quotient
  4819     01F6                     i1l1888:
  4820     01F6  0823               	movf	___aldiv@divisor+3,w
  4821     01F7  0422               	iorwf	___aldiv@divisor+2,w
  4822     01F8  0421               	iorwf	___aldiv@divisor+1,w
  4823     01F9  0420               	iorwf	___aldiv@divisor,w
  4824     01FA  1903               	skipnz
  4825     01FB  29FD               	goto	u138_21
  4826     01FC  29FE               	goto	u138_20
  4827     01FD                     u138_21:
  4828     01FD  2A4B               	goto	i1l1908
  4829     01FE                     u138_20:
  4830     01FE                     i1l1890:
  4831     01FE  01A8               	clrf	___aldiv@counter
  4832     01FF  0AA8               	incf	___aldiv@counter,f
  4833     0200  2A0E               	goto	i1l1894
  4834     0201                     i1l1892:
  4835     0201  3001               	movlw	1
  4836     0202  00FD               	movwf	??___aldiv
  4837     0203                     u139_25:
  4838     0203  1003               	clrc
  4839     0204  0DA0               	rlf	___aldiv@divisor,f
  4840     0205  0DA1               	rlf	___aldiv@divisor+1,f
  4841     0206  0DA2               	rlf	___aldiv@divisor+2,f
  4842     0207  0DA3               	rlf	___aldiv@divisor+3,f
  4843     0208  0BFD               	decfsz	??___aldiv,f
  4844     0209  2A03               	goto	u139_25
  4845     020A  3001               	movlw	1
  4846     020B  00FD               	movwf	??___aldiv
  4847     020C  087D               	movf	??___aldiv,w
  4848     020D  07A8               	addwf	___aldiv@counter,f
  4849     020E                     i1l1894:
  4850     020E  1FA3               	btfss	___aldiv@divisor+3,7
  4851     020F  2A11               	goto	u140_21
  4852     0210  2A12               	goto	u140_20
  4853     0211                     u140_21:
  4854     0211  2A01               	goto	i1l1892
  4855     0212                     u140_20:
  4856     0212                     i1l1896:
  4857     0212  3001               	movlw	1
  4858     0213  00FD               	movwf	??___aldiv
  4859     0214                     u141_25:
  4860     0214  1003               	clrc
  4861     0215  0DAA               	rlf	___aldiv@quotient,f
  4862     0216  0DAB               	rlf	___aldiv@quotient+1,f
  4863     0217  0DAC               	rlf	___aldiv@quotient+2,f
  4864     0218  0DAD               	rlf	___aldiv@quotient+3,f
  4865     0219  0BFD               	decfsz	??___aldiv,f
  4866     021A  2A14               	goto	u141_25
  4867     021B                     i1l1898:
  4868     021B  0823               	movf	___aldiv@divisor+3,w
  4869     021C  0227               	subwf	___aldiv@dividend+3,w
  4870     021D  1D03               	skipz
  4871     021E  2A29               	goto	u142_25
  4872     021F  0822               	movf	___aldiv@divisor+2,w
  4873     0220  0226               	subwf	___aldiv@dividend+2,w
  4874     0221  1D03               	skipz
  4875     0222  2A29               	goto	u142_25
  4876     0223  0821               	movf	___aldiv@divisor+1,w
  4877     0224  0225               	subwf	___aldiv@dividend+1,w
  4878     0225  1D03               	skipz
  4879     0226  2A29               	goto	u142_25
  4880     0227  0820               	movf	___aldiv@divisor,w
  4881     0228  0224               	subwf	___aldiv@dividend,w
  4882     0229                     u142_25:
  4883     0229  1C03               	skipc
  4884     022A  2A2C               	goto	u142_21
  4885     022B  2A2D               	goto	u142_20
  4886     022C                     u142_21:
  4887     022C  2A3C               	goto	i1l1904
  4888     022D                     u142_20:
  4889     022D                     i1l1900:
  4890     022D  0820               	movf	___aldiv@divisor,w
  4891     022E  02A4               	subwf	___aldiv@dividend,f
  4892     022F  0821               	movf	___aldiv@divisor+1,w
  4893     0230  1C03               	skipc
  4894     0231  0F21               	incfsz	___aldiv@divisor+1,w
  4895     0232  02A5               	subwf	___aldiv@dividend+1,f
  4896     0233  0822               	movf	___aldiv@divisor+2,w
  4897     0234  1C03               	skipc
  4898     0235  0F22               	incfsz	___aldiv@divisor+2,w
  4899     0236  02A6               	subwf	___aldiv@dividend+2,f
  4900     0237  0823               	movf	___aldiv@divisor+3,w
  4901     0238  1C03               	skipc
  4902     0239  0F23               	incfsz	___aldiv@divisor+3,w
  4903     023A  02A7               	subwf	___aldiv@dividend+3,f
  4904     023B                     i1l1902:
  4905     023B  142A               	bsf	___aldiv@quotient,0
  4906     023C                     i1l1904:
  4907     023C  3001               	movlw	1
  4908     023D                     u143_25:
  4909     023D  1003               	clrc
  4910     023E  0CA3               	rrf	___aldiv@divisor+3,f
  4911     023F  0CA2               	rrf	___aldiv@divisor+2,f
  4912     0240  0CA1               	rrf	___aldiv@divisor+1,f
  4913     0241  0CA0               	rrf	___aldiv@divisor,f
  4914     0242  3EFF               	addlw	-1
  4915     0243  1D03               	skipz
  4916     0244  2A3D               	goto	u143_25
  4917     0245                     i1l1906:
  4918     0245  3001               	movlw	1
  4919     0246  02A8               	subwf	___aldiv@counter,f
  4920     0247  1D03               	btfss	3,2
  4921     0248  2A4A               	goto	u144_21
  4922     0249  2A4B               	goto	u144_20
  4923     024A                     u144_21:
  4924     024A  2A12               	goto	i1l1896
  4925     024B                     u144_20:
  4926     024B                     i1l1908:
  4927     024B  0829               	movf	___aldiv@sign,w
  4928     024C  1903               	btfsc	3,2
  4929     024D  2A4F               	goto	u145_21
  4930     024E  2A50               	goto	u145_20
  4931     024F                     u145_21:
  4932     024F  2A5B               	goto	i1l1912
  4933     0250                     u145_20:
  4934     0250                     i1l1910:
  4935     0250  09AA               	comf	___aldiv@quotient,f
  4936     0251  09AB               	comf	___aldiv@quotient+1,f
  4937     0252  09AC               	comf	___aldiv@quotient+2,f
  4938     0253  09AD               	comf	___aldiv@quotient+3,f
  4939     0254  0AAA               	incf	___aldiv@quotient,f
  4940     0255  1903               	skipnz
  4941     0256  0AAB               	incf	___aldiv@quotient+1,f
  4942     0257  1903               	skipnz
  4943     0258  0AAC               	incf	___aldiv@quotient+2,f
  4944     0259  1903               	skipnz
  4945     025A  0AAD               	incf	___aldiv@quotient+3,f
  4946     025B                     i1l1912:
  4947     025B  082D               	movf	___aldiv@quotient+3,w
  4948     025C  00A3               	movwf	?___aldiv+3
  4949     025D  082C               	movf	___aldiv@quotient+2,w
  4950     025E  00A2               	movwf	?___aldiv+2
  4951     025F  082B               	movf	___aldiv@quotient+1,w
  4952     0260  00A1               	movwf	?___aldiv+1
  4953     0261  082A               	movf	___aldiv@quotient,w
  4954     0262  00A0               	movwf	?___aldiv
  4955     0263                     i1l507:
  4956     0263  0008               	return
  4957     0264                     __end_of___aldiv:
  4958                           
  4959                           	psect	text27
  4960     0ECC                     __ptext27:	
  4961 ;; *************** function _adc_read *****************
  4962 ;; Defined at:
  4963 ;;		line 51 in file "ADC.c"
  4964 ;; Parameters:    Size  Location     Type
  4965 ;;		None
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;		None
  4968 ;; Return value:  Size  Location     Type
  4969 ;;                  2    0[COMMON] int 
  4970 ;; Registers used:
  4971 ;;		wreg
  4972 ;; Tracked objects:
  4973 ;;		On entry : 0/0
  4974 ;;		On exit  : 0/0
  4975 ;;		Unchanged: 0/0
  4976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4977 ;;      Params:         2       0       0       0       0
  4978 ;;      Locals:         0       0       0       0       0
  4979 ;;      Temps:          2       0       0       0       0
  4980 ;;      Totals:         4       0       0       0       0
  4981 ;;Total ram usage:        4 bytes
  4982 ;; Hardware stack levels used: 1
  4983 ;; This function calls:
  4984 ;;		Nothing
  4985 ;; This function is called by:
  4986 ;;		_isr
  4987 ;; This function uses a non-reentrant model
  4988 ;;
  4989                           
  4990     0ECC                     _adc_read:	
  4991                           ;psect for function _adc_read
  4992                           
  4993     0ECC                     i1l1964:	
  4994                           ;incstack = 0
  4995                           ; Regs used in _adc_read: [wreg]
  4996                           
  4997                           
  4998                           ;ADC.c: 52:     return ADRESH;
  4999     0ECC  1283               	bcf	3,5	;RP0=0, select bank0
  5000     0ECD  1303               	bcf	3,6	;RP1=0, select bank0
  5001     0ECE  081E               	movf	30,w	;volatile
  5002     0ECF  00F2               	movwf	??_adc_read
  5003     0ED0  01F3               	clrf	??_adc_read+1
  5004     0ED1  0872               	movf	??_adc_read,w
  5005     0ED2  00F0               	movwf	?_adc_read
  5006     0ED3  0873               	movf	??_adc_read+1,w
  5007     0ED4  00F1               	movwf	?_adc_read+1
  5008     0ED5                     i1l148:
  5009     0ED5  0008               	return
  5010     0ED6                     __end_of_adc_read:
  5011                           
  5012                           	psect	text28
  5013     04CF                     __ptext28:	
  5014 ;; *************** function ___awmod *****************
  5015 ;; Defined at:
  5016 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;  divisor         2    0[COMMON] int 
  5019 ;;  dividend        2    2[COMMON] int 
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;  sign            1    6[COMMON] unsigned char 
  5022 ;;  counter         1    5[COMMON] unsigned char 
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  2    0[COMMON] int 
  5025 ;; Registers used:
  5026 ;;		wreg, status,2, status,0
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5032 ;;      Params:         4       0       0       0       0
  5033 ;;      Locals:         2       0       0       0       0
  5034 ;;      Temps:          1       0       0       0       0
  5035 ;;      Totals:         7       0       0       0       0
  5036 ;;Total ram usage:        7 bytes
  5037 ;; Hardware stack levels used: 1
  5038 ;; This function calls:
  5039 ;;		Nothing
  5040 ;; This function is called by:
  5041 ;;		_isr
  5042 ;; This function uses a non-reentrant model
  5043 ;;
  5044                           
  5045     04CF                     ___awmod:	
  5046                           ;psect for function ___awmod
  5047                           
  5048     04CF                     i1l2150:	
  5049                           ;incstack = 0
  5050                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5051                           
  5052     04CF  01F6               	clrf	___awmod@sign
  5053     04D0                     i1l2152:
  5054     04D0  1FF3               	btfss	___awmod@dividend+1,7
  5055     04D1  2CD3               	goto	u183_21
  5056     04D2  2CD4               	goto	u183_20
  5057     04D3                     u183_21:
  5058     04D3  2CDB               	goto	i1l2158
  5059     04D4                     u183_20:
  5060     04D4                     i1l2154:
  5061     04D4  09F2               	comf	___awmod@dividend,f
  5062     04D5  09F3               	comf	___awmod@dividend+1,f
  5063     04D6  0AF2               	incf	___awmod@dividend,f
  5064     04D7  1903               	skipnz
  5065     04D8  0AF3               	incf	___awmod@dividend+1,f
  5066     04D9                     i1l2156:
  5067     04D9  01F6               	clrf	___awmod@sign
  5068     04DA  0AF6               	incf	___awmod@sign,f
  5069     04DB                     i1l2158:
  5070     04DB  1FF1               	btfss	___awmod@divisor+1,7
  5071     04DC  2CDE               	goto	u184_21
  5072     04DD  2CDF               	goto	u184_20
  5073     04DE                     u184_21:
  5074     04DE  2CE4               	goto	i1l2162
  5075     04DF                     u184_20:
  5076     04DF                     i1l2160:
  5077     04DF  09F0               	comf	___awmod@divisor,f
  5078     04E0  09F1               	comf	___awmod@divisor+1,f
  5079     04E1  0AF0               	incf	___awmod@divisor,f
  5080     04E2  1903               	skipnz
  5081     04E3  0AF1               	incf	___awmod@divisor+1,f
  5082     04E4                     i1l2162:
  5083     04E4  0870               	movf	___awmod@divisor,w
  5084     04E5  0471               	iorwf	___awmod@divisor+1,w
  5085     04E6  1903               	btfsc	3,2
  5086     04E7  2CE9               	goto	u185_21
  5087     04E8  2CEA               	goto	u185_20
  5088     04E9                     u185_21:
  5089     04E9  2D19               	goto	i1l2180
  5090     04EA                     u185_20:
  5091     04EA                     i1l2164:
  5092     04EA  01F5               	clrf	___awmod@counter
  5093     04EB  0AF5               	incf	___awmod@counter,f
  5094     04EC  2CF8               	goto	i1l2170
  5095     04ED                     i1l2166:
  5096     04ED  3001               	movlw	1
  5097     04EE                     u186_25:
  5098     04EE  1003               	clrc
  5099     04EF  0DF0               	rlf	___awmod@divisor,f
  5100     04F0  0DF1               	rlf	___awmod@divisor+1,f
  5101     04F1  3EFF               	addlw	-1
  5102     04F2  1D03               	skipz
  5103     04F3  2CEE               	goto	u186_25
  5104     04F4                     i1l2168:
  5105     04F4  3001               	movlw	1
  5106     04F5  00F4               	movwf	??___awmod
  5107     04F6  0874               	movf	??___awmod,w
  5108     04F7  07F5               	addwf	___awmod@counter,f
  5109     04F8                     i1l2170:
  5110     04F8  1FF1               	btfss	___awmod@divisor+1,7
  5111     04F9  2CFB               	goto	u187_21
  5112     04FA  2CFC               	goto	u187_20
  5113     04FB                     u187_21:
  5114     04FB  2CED               	goto	i1l2166
  5115     04FC                     u187_20:
  5116     04FC                     i1l2172:
  5117     04FC  0871               	movf	___awmod@divisor+1,w
  5118     04FD  0273               	subwf	___awmod@dividend+1,w
  5119     04FE  1D03               	skipz
  5120     04FF  2D02               	goto	u188_25
  5121     0500  0870               	movf	___awmod@divisor,w
  5122     0501  0272               	subwf	___awmod@dividend,w
  5123     0502                     u188_25:
  5124     0502  1C03               	skipc
  5125     0503  2D05               	goto	u188_21
  5126     0504  2D06               	goto	u188_20
  5127     0505                     u188_21:
  5128     0505  2D0C               	goto	i1l2176
  5129     0506                     u188_20:
  5130     0506                     i1l2174:
  5131     0506  0870               	movf	___awmod@divisor,w
  5132     0507  02F2               	subwf	___awmod@dividend,f
  5133     0508  0871               	movf	___awmod@divisor+1,w
  5134     0509  1C03               	skipc
  5135     050A  03F3               	decf	___awmod@dividend+1,f
  5136     050B  02F3               	subwf	___awmod@dividend+1,f
  5137     050C                     i1l2176:
  5138     050C  3001               	movlw	1
  5139     050D                     u189_25:
  5140     050D  1003               	clrc
  5141     050E  0CF1               	rrf	___awmod@divisor+1,f
  5142     050F  0CF0               	rrf	___awmod@divisor,f
  5143     0510  3EFF               	addlw	-1
  5144     0511  1D03               	skipz
  5145     0512  2D0D               	goto	u189_25
  5146     0513                     i1l2178:
  5147     0513  3001               	movlw	1
  5148     0514  02F5               	subwf	___awmod@counter,f
  5149     0515  1D03               	btfss	3,2
  5150     0516  2D18               	goto	u190_21
  5151     0517  2D19               	goto	u190_20
  5152     0518                     u190_21:
  5153     0518  2CFC               	goto	i1l2172
  5154     0519                     u190_20:
  5155     0519                     i1l2180:
  5156     0519  0876               	movf	___awmod@sign,w
  5157     051A  1903               	btfsc	3,2
  5158     051B  2D1D               	goto	u191_21
  5159     051C  2D1E               	goto	u191_20
  5160     051D                     u191_21:
  5161     051D  2D23               	goto	i1l2184
  5162     051E                     u191_20:
  5163     051E                     i1l2182:
  5164     051E  09F2               	comf	___awmod@dividend,f
  5165     051F  09F3               	comf	___awmod@dividend+1,f
  5166     0520  0AF2               	incf	___awmod@dividend,f
  5167     0521  1903               	skipnz
  5168     0522  0AF3               	incf	___awmod@dividend+1,f
  5169     0523                     i1l2184:
  5170     0523  0873               	movf	___awmod@dividend+1,w
  5171     0524  00F1               	movwf	?___awmod+1
  5172     0525  0872               	movf	___awmod@dividend,w
  5173     0526  00F0               	movwf	?___awmod
  5174     0527                     i1l598:
  5175     0527  0008               	return
  5176     0528                     __end_of___awmod:
  5177                           
  5178                           	psect	text29
  5179     0468                     __ptext29:	
  5180 ;; *************** function ___awdiv *****************
  5181 ;; Defined at:
  5182 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;  divisor         2    0[COMMON] int 
  5185 ;;  dividend        2    2[COMMON] int 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  quotient        2    7[COMMON] int 
  5188 ;;  sign            1    6[COMMON] unsigned char 
  5189 ;;  counter         1    5[COMMON] unsigned char 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  2    0[COMMON] int 
  5192 ;; Registers used:
  5193 ;;		wreg, status,2, status,0
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5199 ;;      Params:         4       0       0       0       0
  5200 ;;      Locals:         4       0       0       0       0
  5201 ;;      Temps:          1       0       0       0       0
  5202 ;;      Totals:         9       0       0       0       0
  5203 ;;Total ram usage:        9 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_isr
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212     0468                     ___awdiv:	
  5213                           ;psect for function ___awdiv
  5214                           
  5215     0468                     i1l2106:	
  5216                           ;incstack = 0
  5217                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5218                           
  5219     0468  01F6               	clrf	___awdiv@sign
  5220     0469                     i1l2108:
  5221     0469  1FF1               	btfss	___awdiv@divisor+1,7
  5222     046A  2C6C               	goto	u173_21
  5223     046B  2C6D               	goto	u173_20
  5224     046C                     u173_21:
  5225     046C  2C74               	goto	i1l2114
  5226     046D                     u173_20:
  5227     046D                     i1l2110:
  5228     046D  09F0               	comf	___awdiv@divisor,f
  5229     046E  09F1               	comf	___awdiv@divisor+1,f
  5230     046F  0AF0               	incf	___awdiv@divisor,f
  5231     0470  1903               	skipnz
  5232     0471  0AF1               	incf	___awdiv@divisor+1,f
  5233     0472                     i1l2112:
  5234     0472  01F6               	clrf	___awdiv@sign
  5235     0473  0AF6               	incf	___awdiv@sign,f
  5236     0474                     i1l2114:
  5237     0474  1FF3               	btfss	___awdiv@dividend+1,7
  5238     0475  2C77               	goto	u174_21
  5239     0476  2C78               	goto	u174_20
  5240     0477                     u174_21:
  5241     0477  2C81               	goto	i1l2120
  5242     0478                     u174_20:
  5243     0478                     i1l2116:
  5244     0478  09F2               	comf	___awdiv@dividend,f
  5245     0479  09F3               	comf	___awdiv@dividend+1,f
  5246     047A  0AF2               	incf	___awdiv@dividend,f
  5247     047B  1903               	skipnz
  5248     047C  0AF3               	incf	___awdiv@dividend+1,f
  5249     047D                     i1l2118:
  5250     047D  3001               	movlw	1
  5251     047E  00F4               	movwf	??___awdiv
  5252     047F  0874               	movf	??___awdiv,w
  5253     0480  06F6               	xorwf	___awdiv@sign,f
  5254     0481                     i1l2120:
  5255     0481  01F7               	clrf	___awdiv@quotient
  5256     0482  01F8               	clrf	___awdiv@quotient+1
  5257     0483                     i1l2122:
  5258     0483  0870               	movf	___awdiv@divisor,w
  5259     0484  0471               	iorwf	___awdiv@divisor+1,w
  5260     0485  1903               	btfsc	3,2
  5261     0486  2C88               	goto	u175_21
  5262     0487  2C89               	goto	u175_20
  5263     0488                     u175_21:
  5264     0488  2CC0               	goto	i1l2142
  5265     0489                     u175_20:
  5266     0489                     i1l2124:
  5267     0489  01F5               	clrf	___awdiv@counter
  5268     048A  0AF5               	incf	___awdiv@counter,f
  5269     048B  2C97               	goto	i1l2130
  5270     048C                     i1l2126:
  5271     048C  3001               	movlw	1
  5272     048D                     u176_25:
  5273     048D  1003               	clrc
  5274     048E  0DF0               	rlf	___awdiv@divisor,f
  5275     048F  0DF1               	rlf	___awdiv@divisor+1,f
  5276     0490  3EFF               	addlw	-1
  5277     0491  1D03               	skipz
  5278     0492  2C8D               	goto	u176_25
  5279     0493                     i1l2128:
  5280     0493  3001               	movlw	1
  5281     0494  00F4               	movwf	??___awdiv
  5282     0495  0874               	movf	??___awdiv,w
  5283     0496  07F5               	addwf	___awdiv@counter,f
  5284     0497                     i1l2130:
  5285     0497  1FF1               	btfss	___awdiv@divisor+1,7
  5286     0498  2C9A               	goto	u177_21
  5287     0499  2C9B               	goto	u177_20
  5288     049A                     u177_21:
  5289     049A  2C8C               	goto	i1l2126
  5290     049B                     u177_20:
  5291     049B                     i1l2132:
  5292     049B  3001               	movlw	1
  5293     049C                     u178_25:
  5294     049C  1003               	clrc
  5295     049D  0DF7               	rlf	___awdiv@quotient,f
  5296     049E  0DF8               	rlf	___awdiv@quotient+1,f
  5297     049F  3EFF               	addlw	-1
  5298     04A0  1D03               	skipz
  5299     04A1  2C9C               	goto	u178_25
  5300     04A2  0871               	movf	___awdiv@divisor+1,w
  5301     04A3  0273               	subwf	___awdiv@dividend+1,w
  5302     04A4  1D03               	skipz
  5303     04A5  2CA8               	goto	u179_25
  5304     04A6  0870               	movf	___awdiv@divisor,w
  5305     04A7  0272               	subwf	___awdiv@dividend,w
  5306     04A8                     u179_25:
  5307     04A8  1C03               	skipc
  5308     04A9  2CAB               	goto	u179_21
  5309     04AA  2CAC               	goto	u179_20
  5310     04AB                     u179_21:
  5311     04AB  2CB3               	goto	i1l2138
  5312     04AC                     u179_20:
  5313     04AC                     i1l2134:
  5314     04AC  0870               	movf	___awdiv@divisor,w
  5315     04AD  02F2               	subwf	___awdiv@dividend,f
  5316     04AE  0871               	movf	___awdiv@divisor+1,w
  5317     04AF  1C03               	skipc
  5318     04B0  03F3               	decf	___awdiv@dividend+1,f
  5319     04B1  02F3               	subwf	___awdiv@dividend+1,f
  5320     04B2                     i1l2136:
  5321     04B2  1477               	bsf	___awdiv@quotient,0
  5322     04B3                     i1l2138:
  5323     04B3  3001               	movlw	1
  5324     04B4                     u180_25:
  5325     04B4  1003               	clrc
  5326     04B5  0CF1               	rrf	___awdiv@divisor+1,f
  5327     04B6  0CF0               	rrf	___awdiv@divisor,f
  5328     04B7  3EFF               	addlw	-1
  5329     04B8  1D03               	skipz
  5330     04B9  2CB4               	goto	u180_25
  5331     04BA                     i1l2140:
  5332     04BA  3001               	movlw	1
  5333     04BB  02F5               	subwf	___awdiv@counter,f
  5334     04BC  1D03               	btfss	3,2
  5335     04BD  2CBF               	goto	u181_21
  5336     04BE  2CC0               	goto	u181_20
  5337     04BF                     u181_21:
  5338     04BF  2C9B               	goto	i1l2132
  5339     04C0                     u181_20:
  5340     04C0                     i1l2142:
  5341     04C0  0876               	movf	___awdiv@sign,w
  5342     04C1  1903               	btfsc	3,2
  5343     04C2  2CC4               	goto	u182_21
  5344     04C3  2CC5               	goto	u182_20
  5345     04C4                     u182_21:
  5346     04C4  2CCA               	goto	i1l2146
  5347     04C5                     u182_20:
  5348     04C5                     i1l2144:
  5349     04C5  09F7               	comf	___awdiv@quotient,f
  5350     04C6  09F8               	comf	___awdiv@quotient+1,f
  5351     04C7  0AF7               	incf	___awdiv@quotient,f
  5352     04C8  1903               	skipnz
  5353     04C9  0AF8               	incf	___awdiv@quotient+1,f
  5354     04CA                     i1l2146:
  5355     04CA  0878               	movf	___awdiv@quotient+1,w
  5356     04CB  00F1               	movwf	?___awdiv+1
  5357     04CC  0877               	movf	___awdiv@quotient,w
  5358     04CD  00F0               	movwf	?___awdiv
  5359     04CE                     i1l585:
  5360     04CE  0008               	return
  5361     04CF                     __end_of___awdiv:
  5362                           
  5363                           	psect	text30
  5364     0EBA                     __ptext30:	
  5365 ;; *************** function _UART_read_char *****************
  5366 ;; Defined at:
  5367 ;;		line 165 in file "Usart.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  datoRecibido    1    0[COMMON] unsigned char 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  1    wreg      unsigned char 
  5374 ;; Registers used:
  5375 ;;		wreg
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5381 ;;      Params:         0       0       0       0       0
  5382 ;;      Locals:         1       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0
  5384 ;;      Totals:         1       0       0       0       0
  5385 ;;Total ram usage:        1 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_isr
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394     0EBA                     _UART_read_char:	
  5395                           ;psect for function _UART_read_char
  5396                           
  5397     0EBA                     i1l1974:	
  5398                           ;incstack = 0
  5399                           ; Regs used in _UART_read_char: [wreg]
  5400                           
  5401                           
  5402                           ;Usart.c: 167:    char datoRecibido = RCREG;
  5403     0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  5404     0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  5405     0EBC  081A               	movf	26,w	;volatile
  5406     0EBD  00F0               	movwf	UART_read_char@datoRecibido
  5407                           
  5408                           ;Usart.c: 168:    return datoRecibido;
  5409     0EBE  0870               	movf	UART_read_char@datoRecibido,w
  5410     0EBF                     i1l318:
  5411     0EBF  0008               	return
  5412     0EC0                     __end_of_UART_read_char:
  5413     007E                     btemp	set	126	;btemp
  5414     007E                     wtemp0	set	126
  5415                           
  5416                           	psect	idloc
  5417                           
  5418                           ;Config register IDLOC0 @ 0x2000
  5419                           ;	unspecified, using default values
  5420     2000                     	org	8192
  5421     2000  3FFF               	dw	16383
  5422                           
  5423                           ;Config register IDLOC1 @ 0x2001
  5424                           ;	unspecified, using default values
  5425     2001                     	org	8193
  5426     2001  3FFF               	dw	16383
  5427                           
  5428                           ;Config register IDLOC2 @ 0x2002
  5429                           ;	unspecified, using default values
  5430     2002                     	org	8194
  5431     2002  3FFF               	dw	16383
  5432                           
  5433                           ;Config register IDLOC3 @ 0x2003
  5434                           ;	unspecified, using default values
  5435     2003                     	org	8195
  5436     2003  3FFF               	dw	16383
  5437                           
  5438                           	psect	config
  5439                           
  5440                           ;Config register CONFIG1 @ 0x2007
  5441                           ;	Oscillator Selection bits
  5442                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5443                           ;	Watchdog Timer Enable bit
  5444                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5445                           ;	Power-up Timer Enable bit
  5446                           ;	PWRTE = OFF, PWRT disabled
  5447                           ;	RE3/MCLR pin function select bit
  5448                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5449                           ;	Code Protection bit
  5450                           ;	CP = OFF, Program memory code protection is disabled
  5451                           ;	Data Code Protection bit
  5452                           ;	CPD = OFF, Data memory code protection is disabled
  5453                           ;	Brown Out Reset Selection bits
  5454                           ;	BOREN = OFF, BOR disabled
  5455                           ;	Internal External Switchover bit
  5456                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5457                           ;	Fail-Safe Clock Monitor Enabled bit
  5458                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5459                           ;	Low Voltage Programming Enable bit
  5460                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5461                           ;	In-Circuit Debugger Mode bit
  5462                           ;	DEBUG = 0x1, unprogramme  5463     2007                     	org	8199
  5464     2007  20D4               	dw	8404
  5465                           
  5466                           ;Config register CONFIG2 @ 0x2008
  5467                           ;	Brown-out Reset Selection bit
  5468                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5469                           ;	Flash Program Memory Self Write Enable bits
  5470                           ;	WRT = OFF, Write protection off
  5471     2008                     	org	8200
  5472     2008  3FFF               	dw	16383

Data Sizes:
    Strings     94
    Constant    10
    Data        44
    BSS         11
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      44
    BANK1            80     26      37
    BANK3            96      0      44
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_2(CODE[10]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> strADC(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    UART_write_string@a	PTR unsigned char  size(2) Largest target is 54
		 -> STR_4(CODE[22]), STR_3(CODE[54]), menu(BANK3[44]), strADC(BANK1[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 8
		 -> strADC(BANK1[4]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _map->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    _main->_Lcd_Write_String
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_adc_init
    _MENU->_UART_write_string
    _voltaje->_UART_write_string
    _contador->_UART_write_string
    _UART_write_string->_UART_write_char
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in BANK0

    _isr->_map
    _map->___aldiv

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___lwmod
    _MENU->_contador

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4159
                                             23 BANK1      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _MENU
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    18      7    1211
                                              6 BANK1     17    10      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              0 BANK1      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                             36 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     930
                     _UART_RX_config
                     _UART_TX_config
                           _adc_init
                      _configIntbits
                          _configOsc
                         _configPort
 ---------------------------------------------------------------------------------
 (2) _configPort                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     252
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _configIntbits                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             6     2      4     394
                                             36 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _UART_TX_config                                       2     0      2     142
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _UART_RX_config                                       2     0      2     142
                                             36 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _MENU                                                 2     2      0    1292
                                              1 BANK1      2     2      0
                  _UART_write_string
                           _contador
                            _voltaje
 ---------------------------------------------------------------------------------
 (2) _voltaje                                              0     0      0     438
                    _UART_write_char
                  _UART_write_string
 ---------------------------------------------------------------------------------
 (2) _contador                                             1     1      0     438
                                              0 BANK1      1     1      0
                    _UART_write_char
                  _UART_write_string
 ---------------------------------------------------------------------------------
 (3) _UART_write_string                                    7     5      2     416
                                             37 BANK0      7     5      2
                    _UART_write_char
 ---------------------------------------------------------------------------------
 (4) _UART_write_char                                      1     1      0      22
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     286
                                             39 BANK0      5     3      2
                                              0 BANK1      2     2      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                             37 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     330
                                             40 BANK0      3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                             40 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                             37 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                             36 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 10    10      0    2616
                                             26 BANK0     10    10      0
                     _UART_read_char
                            ___awdiv
                            ___awmod
                           _adc_read
                                _map
 ---------------------------------------------------------------------------------
 (6) _map                                                 12     2     10    1253
                                             14 BANK0     12     2     10
                            ___aldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              13     5      8     244
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (7) ___aldiv                                             15     7      8     452
                                             13 COMMON     1     1      0
                                              0 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _adc_read                                             4     2      2       0
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) _UART_read_char                                       1     1      0      23
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _MENU
     _UART_write_string
       _UART_write_char
     _contador
       _UART_write_char
       _UART_write_string
     _voltaje
       _UART_write_char
       _UART_write_string
   _setup
     _UART_RX_config
     _UART_TX_config
     _adc_init
     _configIntbits
     _configOsc
     _configPort
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _isr (ROOT)
   _UART_read_char
   ___awdiv
   ___awmod
   _adc_read
   _map
     ___aldiv
       ___lmul (ARG)
     ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      2C       9       45.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     1A      25       7       46.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     2C      2C       5       55.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      8B      12        0.0%
ABS                  0      0      8B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jul 24 21:19:25 2023

                         pc 0002                          l84 0FFF                          l98 0732  
              ___awdiv@sign 0076                          fsr 0004                         l101 0EF4  
                       l110 0FC5                         l202 0EB9                         l132 02C4  
                       l220 0467                         l214 0464                         l303 07AF  
                       l240 0F3E                         l312 0661                         l145 02FA  
                       l243 0EE2                         l315 0ECB                         l252 05CB  
                       l308 061D                         l237 0EC5                         l261 057B  
                       l255 0F22                         l249 0F60                         l196 0F0A  
                       l428 011B                         l295 0771                         l704 06A7  
                       l714 07EB                         _RE0 0048                         _RE1 0049  
                       u990 0621                         u991 0620                         _map 05CC  
                       _isr 011C                         fsr0 0004                         indf 0000  
              ___awmod@sign 0076                        l2000 06EE                        l2010 070E  
                      l2002 06F9                        l2012 0719                        l2004 06FC  
                      l2022 0ED6                        l2030 0F51                        l2006 0702  
                      l2014 0722                        l2032 0F57                        l2024 0F42  
                      l2040 0551                        l2008 0708                        l2034 0F5A  
                      l2026 0F47                        l2042 0559                        l2050 0041  
                      l2028 0F4A                        l2036 0528                        l2060 006C  
                      l2052 0046                        l2044 0033                        l2220 0319  
                      l2212 02FB                        l2038 052D                        l2062 0070  
                      l2046 0036                        l2230 034A                        l2222 0321  
                      l2214 0305                        l2080 00A5                        l2064 0074  
                      l2056 0047                        l2048 003C                        l2232 0360  
                      l2224 0326                        l2216 030B                        l2090 00F5  
                      l2082 00AB                        l2074 007F                        l2066 0078  
                      l2058 0064                        l2234 036B                        l2226 032B  
                      l2218 0316                        l1620 0EC9                        l1700 0272  
                      l2092 00FA                        l2084 00B0                        l2068 007D  
                      l2228 0340                        l1630 0645                        l1710 028F  
                      l1702 027A                        l2094 00FE                        l2086 00B4  
                      l2078 009B                        l1632 0EC3                        l1624 0618  
                      l1800 0797                        l1720 02AC                        l1712 0294  
                      l1704 027D                        l1640 040A                        l2088 00B7  
                      l2096 0107                        l1626 0621                        l1810 07AA  
                      l1802 07A0                        l1730 02C7                        l1722 02B3  
                      l1714 029B                        l1706 0283                        l1650 042C  
                      l1642 0411                        l1634 03F5                        l2098 0117  
                      l2290 0059                        l1628 063D                        l1820 0EEE  
                      l2292 072A                        l1812 07AB                        l1740 02E6  
                      l1732 02D0                        l1724 02B8                        l1716 02A0  
                      l1708 0288                        l1660 0451                        l1652 0435  
                      l1644 0418                        l1636 03FE                        l1830 0FA0  
                      l1814 07AC                        l1806 07A5                        l1742 02ED  
                      l1734 02D3                        l1726 02BF                        l1718 02A7  
                      l1662 0458                        l1654 043C                        l1646 041F  
                      l1638 0403                        l1670 0EF5                        l1832 0FAC  
                      l1824 0F8D                        l1760 074A                        l1752 0733  
                      l1808 07A7                        l1736 02DA                        l1744 02F1  
                      l1728 02C4                        l1664 045F                        l1656 0443  
                      l1648 0425                        l1680 0F02                        l1672 0EF9  
                      l1920 066C                        l1850 0F3B                        l1842 0F26  
                      l1834 0FB4                        l1826 0F98                        l1818 0EE3  
                      l1762 0753                        l1754 0739                        l1746 02F4  
                      l1738 02DF                        l1658 044A                        l1666 0464  
                      l1690 0F09                        l1682 0F03                        l1674 0EFA  
                      l1930 068F                        l1922 066F                        l1844 0F27  
                      l1860 0F1F                        l1852 0F0E                        l1836 0FBB  
                      l1828 0F9B                        l1780 076F                        l1772 0766  
                      l1756 0744                        l1748 02F7                        l1684 0F06  
                      l1676 0EFF                        l1932 0695                        l1924 0676  
                      l1916 0662                        l1846 0F2D                        l1854 0F0F  
                      l1838 0FC1                        l1782 0770                        l1774 0768  
                      l1766 0758                        l1758 0748                        l1790 0783  
                      l1694 0EB7                        l1686 0F07                        l1678 0F01  
                      l1934 0696                        l1926 067A                        l1918 0666  
                      l1950 07C6                        l1942 07B0                        l1848 0F30  
                      l1856 0F15                        l1776 076B                        l1768 0761  
                      l1792 0787                        l1696 0264                        l1688 0F08  
                      l1936 069D                        l1928 067E                        l1952 07CA  
                      l1944 07B8                        l1960 07E7                        l1858 0F18  
                      l1778 076C                        l1794 0789                        l1786 0772  
                      l1698 0267                        l1938 06A3                        l1954 07D4  
                      l1946 07BB                        l1796 0792                        l1788 0778  
                      l1980 0FD6                        l1956 07DA                        l1948 07C2  
                      l1990 057C                        l1982 0FDB                        l1958 07E1  
                      ?_map 002E                        l1992 0582                        l1984 0FE9  
                      l1994 058C                        l1986 0FF4                        l1978 0FC6  
                      l1996 059C                        l1998 05A2                        _ADIF 0066  
                      ?_isr 0070                        STR_1 03ED                        STR_2 03E3  
                      STR_3 0397                        STR_4 03CD                        u1000 062B  
                      u1010 064F                        u1020 0661                        u1100 045F  
                      u1021 0660                        u1101 045E                        u1110 027A  
                      u1030 03FE                        u1111 0279                        u1031 03FD  
                      u1200 02E6                        u1120 0283                        u1040 040A  
                      u1201 02E5                        u1121 0282                        u1041 0409  
                      u1210 02ED                        u1130 028F                        u1050 0418  
                      u1211 02EC                        u1131 028E                        u1051 0417  
                      u1300 0FC1                        u1220 0744                        u1140 029B  
                      u1060 0425                        u1301 0FC0                        u1221 0743  
                      u1141 029A                        u1061 0424                        u1230 0753  
                      u1150 02A7                        u1070 0435                        u2007 0588  
                      u1231 0752                        u1151 02A6                        u1071 0434  
                      u1240 0761                        u1160 02B3                        u1080 0443  
                      u2017 0598                        u1241 0760                        u1161 02B2  
                      u1081 0442                        u1250 0783                        u1170 02BF  
                      u1090 0451                        u2027 05A8                        u1251 0782  
                      u1171 02BE                        u1091 0450                        u1260 0792  
                      u1180 02D0                        u1500 068F                        u2037 0F36  
                      u1261 0791                        u1181 02CF                        u1501 068E  
                      u1270 07A0                        u1190 02DA                        u1271 079F  
                      u1191 02D9                        u1280 0FA0                        u1600 0721  
                      u1520 06A3                        u1281 0F9F                        u1601 0720  
                      u1521 06A2                        u1505 068B                        u1610 0F47  
                      u1290 0FB4                        u1530 07B8                        u1611 0F46  
                      u1291 0FB3                        u1515 0697                        u1531 07B7  
                      u1620 0F57                        u1460 066C                        u1700 00AB  
                      u1621 0F56                        u1461 066B                        u1701 00AA  
                      u1630 053F                        u1550 07CA                        u1710 0107  
                      u1551 07C9                        u1711 0106                        u1640 0569  
                      u1480 067E                        u1560 07D4                        u1720 0117  
                      u1481 067D                        u1561 07D3                        u1545 07BC  
                      u1721 0116                        u1650 057B                        u1651 057A  
                      u1475 0670                        u1580 07E7                        u1660 003C  
                      u1581 07E6                        u1565 07D0                        u1661 003B  
                      u1590 0701                        u1670 0074                        u1591 0700  
                      u1495 067F                        u1575 07DB                        u1671 0073  
                      u1680 009A                        u1681 0099                        u1690 00A5  
                      u1691 00A4                        u1940 030B                        u1685 0096  
                      u1941 030A                        u1950 0321                        u1951 0320  
                      _MENU 06EE                        u1967 0311                        u1977 0373  
                      u1987 026D                        _RCIF 0065                        u1997 0F1C  
                      i1l71 01C0           ?_Lcd_Write_String 0047                        _main 02FB  
                      _menu 0190                        btemp 007E                        start 000E  
        ??_Lcd_Write_String 0049             __end_of_Lcd_Cmd 0F3F  UART_read_char@datoRecibido 0070  
          UART_write_char@c 0044                       ??_map 007E                       ??_isr 003A  
                     ?_MENU 0070               configOsc@freq 0044             __end_of___aldiv 0264  
                     ?_main 0070             __end_of___awdiv 04CF             __end_of___awmod 0528  
                     _ANSEL 0188             ___awdiv@divisor 0070             __end_of___lwdiv 06A8  
                     i1l148 0ED5                       i1l318 0EBF                       i1l159 0617  
           __end_of___lwmod 07EC                       i1l507 0263                       i1l446 06ED  
                     i1l585 04CE                       i1l497 01DB                       i1l598 0527  
           ___awdiv@counter 0075                       _RCREG 001A                       _SPBRG 0099  
                     _PORTA 0005                       _PORTB 0006                       _PORTC 0007  
                     _PORTD 0008                       _PORTE 0009                       _TRISA 0085  
                     _TRISB 0086                       _TRISC 0087                       _TRISD 0088  
                     _TRISE 0089                       _TXREG 0019             ??_configIntbits 0044  
       ___lmul@multiplicand 0074             __end_of_dpowers 0397                       _setup 0FC6  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __end_of_sprintf 011C             __end_of_voltaje 0EF5            __end_of_Lcd_Init 05CC  
              __end_of_MENU 0733            __end_of_Lcd_Port 0EC6             __initialization 0011  
              __end_of_main 037D                      ??_MENU 00A1                      ??_main 00B7  
                    _ADRESH 001E            ___awdiv@dividend 0072                      ?_setup 0070  
                    _ANSELH 0189            __end_of_adc_init 02FB            __end_of_adc_read 0ED6  
                    i1l2110 046D                      i1l2120 0481                      i1l2112 0472  
                    i1l2200 018F                      i1l2130 0497                      i1l2122 0483  
                    i1l2114 0474                      i1l2106 0468                      i1l2210 01BD  
                    i1l2202 01A4                      i1l2140 04BA                      i1l2132 049B  
                    i1l2124 0489                      i1l2116 0478                      i1l2108 0469  
                    i1l2204 01AE                      i1l2134 04AC                      i1l2126 048C  
                    i1l2142 04C0                      i1l2118 047D                      i1l2150 04CF  
                    i1l2206 01B1                      i1l2144 04C5                      i1l2136 04B2  
                    i1l2128 0493                      i1l2160 04DF                      i1l2152 04D0  
                    i1l2208 01B5                      i1l2146 04CA                      i1l2138 04B3  
                    i1l2170 04F8                      i1l2162 04E4                      i1l2154 04D4  
                    i1l2172 04FC                      i1l2164 04EA                      i1l2180 0519  
                    i1l2156 04D9                      i1l2182 051E                      i1l2174 0506  
                    i1l2166 04ED                      i1l2158 04DB                      i1l2190 0120  
                    i1l2184 0523                      i1l2176 050C                      i1l2168 04F4  
                    i1l2192 012B                      i1l2178 0513                      i1l2194 0148  
                    i1l1900 022D                      i1l2196 0164                      i1l2188 011C  
                    i1l1910 0250                      i1l1902 023B                      i1l2198 0179  
                    i1l1912 025B                      i1l1904 023C                      i1l1906 0245  
                    i1l1908 024B                      i1l1870 06D4                      i1l1862 06A8  
                    i1l1880 01CE                      i1l1872 06E5                      u131_20 06B4  
                    i1l1864 06B0                      u131_21 06B3                      i1l1890 01FE  
                    i1l1882 01DF                      i1l1866 06B4                      i1l1970 0613  
                    i1l1964 0ECC                      i1l1892 0201                      i1l1884 01EA  
                    i1l1876 01C7                      i1l1868 06CB                      i1l1974 0EBA  
                    i1l1894 020E                      i1l1886 01EE                      i1l1878 01CA  
                    i1l1896 0212                      u140_20 0212                      i1l1888 01F6  
                    i1l1968 05CC                      u140_21 0211                      u132_21 06BD  
                    i1l1898 021B                      u132_22 06C4                      u132_23 06CB  
                    u141_25 0214                      u133_25 06CD                      u142_20 022D  
                    u142_21 022C                      u142_25 0229                      u134_25 06D5  
                    u135_20 06E5                      u135_21 06E4                      u143_25 023D  
                    u144_20 024B                      u136_20 01CE                      u144_21 024A  
                    u136_21 01CD                      u145_20 0250                      u137_20 01DF  
                    u145_21 024F                      u137_21 01DE                      u138_20 01FE  
                    u138_21 01FD                      u139_25 0203                      u180_25 04B4  
                    u181_20 04C0                      u173_20 046D                      u181_21 04BF  
                    u173_21 046C                      u182_20 04C5                      u174_20 0478  
                    u190_20 0519                      u182_21 04C4                      u174_21 0477  
                    u190_21 0518                      u175_20 0489                      u191_20 051E  
                    u183_20 04D4                      u175_21 0488                      u191_21 051D  
                    u183_21 04D3                      u184_20 04DF                      u192_20 0120  
                    u184_21 04DE                      u192_21 011F                      u176_25 048D  
                    u177_20 049B                      u185_20 04EA                      u193_20 01B5  
                    u177_21 049A                      u185_21 04E9                      u193_21 01B4  
                    u178_25 049C                      u186_25 04EE                      u179_20 04AC  
                    u187_20 04FC                      u179_21 04AB                      u187_21 04FB  
                    u179_25 04A8                      u188_20 0506                      u188_21 0505  
                    u188_25 0502                      u189_25 050D                   ??_Lcd_Cmd 0045  
                    _SPBRGH 009A                 isr@valorADC 003E                      ___lmul 06A8  
          __end_of_contador 0FC6                   ??___aldiv 007D                   ??___awdiv 0074  
                    _decena 00BC                   ??___awmod 0074                   ??___lwdiv 0048  
                 ??___lwmod 00A4            ___awdiv@quotient 0077             ___awmod@divisor 0070  
                    _strADC 00C1             ___awmod@counter 0075                      _unidad 00BE  
                    map@val 002E             _UART_write_char 0EC6                      saved_w 007E  
                 ??_sprintf 00AD                   ??_voltaje 004C             Lcd_Set_Cursor@a 0049  
           Lcd_Set_Cursor@b 0048             isr@valorMapeado 0040     __end_of__initialization 002C  
         __end_of_Lcd_Clear 0EE3     Lcd_Set_Cursor@direccion 004A              __pcstackCOMMON 0070  
              __pidataBANK3 0F61               __end_of_setup 1000              _Lcd_Set_Cursor 0F3F  
            _OPTION_REGbits 0081                   ?_Lcd_Init 0070                   ?_Lcd_Port 0070  
                   ??_setup 004A                  __pbssBANK1 00BA                  __pmaintext 02FB  
                   ?___lmul 0070          UART_write_string@a 0045          UART_write_string@i 004A  
                __pintentry 0004     __end_of_UART_write_char 0ECC              ___lmul@product 0079  
    __end_of_Lcd_Set_Cursor 0F61                   ?_adc_init 0044                   ?_adc_read 0070  
                _configPort 0EF5                  ??_Lcd_Init 0048                  ??_Lcd_Port 0044  
                __stringtab 037D                   ?_contador 0070              _Lcd_Write_Char 0F0B  
                   _Lcd_Cmd 0F23              _UART_RX_config 0733              _UART_TX_config 0772  
         __end_of_configOsc 0468                     ___aldiv 01C7                     ___awdiv 0468  
                   ___awmod 04CF                     ___lwdiv 0662                     ___lwmod 07B0  
           ?_Lcd_Set_Cursor 0048                     _centena 00BA                  ??_adc_init 0048  
                ??_adc_read 0072                     __ptext1 0030                     __ptext2 07B0  
                   __ptext3 0662                     __ptext4 0FC6                     __ptext5 0EF5  
                   __ptext6 03F5                     __ptext7 0EB7                     __ptext8 0264  
                   __ptext9 0772                     _dpowers 038D            ___awmod@dividend 0072  
          ___aldiv@dividend 0024       __end_of_configIntbits 0EBA                     map@vout 0038  
                   _sprintf 0030                     _voltaje 0EE3      __end_of_Lcd_Write_Char 0F23  
      end_of_initialization 002C                  ??_contador 00A0      __end_of_UART_RX_config 0772  
    __end_of_UART_TX_config 07B0                   _RCSTAbits 0018            ___aldiv@quotient 002A  
                 Lcd_Port@a 0044            ?_UART_write_char 0070                 ?_configPort 0070  
                map@max_out 0036                  map@min_out 0034             ?_Lcd_Write_Char 0070  
         Lcd_Write_String@a 0047           Lcd_Write_String@i 00A0             ?_UART_RX_config 0044  
           ?_UART_TX_config 0044                   _TXSTAbits 0098                   _Lcd_Clear 0ED6  
    UART_RX_config@baudrate 0044              __end_of___lmul 06EE              _UART_read_char 0EBA  
          _Lcd_Write_String 0528                 _BAUDCTLbits 0187         start_initialization 0011  
               __end_of_map 0618                 __end_of_isr 01C7                  isr@residuo 0042  
                ?_Lcd_Clear 0070                    ??___lmul 0078      __end_of_UART_read_char 0EC0  
                init_fetch0 07EC                 __pdataBANK3 0190             adc_init@channel 0044  
           Lcd_Write_Char@a 0046                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0                    ?_Lcd_Cmd 0070                 sprintf@flag 00B1  
               sprintf@prec 00B2               adc_init@clock 0046            ___lwdiv@dividend 0046  
          ??_Lcd_Set_Cursor 0049                    ?___aldiv 0020             ?_UART_read_char 0070  
                  ?___awdiv 0070                    ?___awmod 0070                    ?___lwdiv 0044  
                  ?___lwmod 00A0                   _configOsc 03F5                   __pstrings 037D  
          ___lwdiv@quotient 0049                    ?_sprintf 00A6                    ?_voltaje 0070  
           ___aldiv@divisor 0020           interrupt_function 0004             ___aldiv@counter 0028  
                  _IOCBbits 0096                    _PIE1bits 008C                    Lcd_Cmd@a 0047  
                  _PIR1bits 000C                 ??_Lcd_Clear 0048                    _UART_get 00C0  
                ?_configOsc 0044                   map@max_in 0032                   map@min_in 0030  
                _ADCON0bits 001F                 __stringbase 038C                  _ADCON1bits 009F  
                  _WPUBbits 0095            ??_Lcd_Write_Char 0045                ??_configPort 0044  
          ??_UART_RX_config 0046                    _Lcd_Init 057C                    _Lcd_Port 0EC0  
          ??_UART_TX_config 0046           ___lmul@multiplier 0070    __end_of_Lcd_Write_String 057C  
        __end_of_configPort 0F0B          __end_of__stringtab 038D                    _adc_init 0264  
                  _adc_read 0ECC                  sprintf@val 00B3             ___lwdiv@divisor 0044  
           ___lwdiv@counter 004B                    __ptext10 0733                    __ptext11 06EE  
                  __ptext20 0ED6                    __ptext12 0EE3                    __ptext21 0F23  
                  __ptext13 0F8D                    __ptext30 0EBA                    __ptext22 0EC0  
                  __ptext14 0618                    __ptext23 011C                    __ptext15 0EC6  
                  __ptext24 05CC                    __ptext16 0528                    __ptext25 06A8  
                  __ptext17 0F0B                    __ptext26 01C7                    __ptext18 0F3F  
                  __ptext27 0ECC                    __ptext19 057C                    __ptext28 04CF  
                  __ptext29 0468                    _contador 0F8D      UART_TX_config@baudrate 0044  
               ??_configOsc 0046                  _INTCONbits 000B                    init_ram0 07F0  
             _configIntbits 0EB7                    intlevel1 0000                   sprintf@ap 00B0  
                 sprintf@sp 00B5            ___lwmod@dividend 00A2           _UART_write_string 0618  
          ??_UART_read_char 0070                   stringcode 0387                  _OSCCONbits 008F  
        ?_UART_write_string 0045         ??_UART_write_string 0047                    sprintf@c 00B6  
                  sprintf@f 00A6             ___lwmod@divisor 00A0             ___lwmod@counter 00A5  
                  stringdir 0387                    stringtab 037D                ___aldiv@sign 0029  
            ?_configIntbits 0070   __end_of_UART_write_string 0662           ??_UART_write_char 0044  
